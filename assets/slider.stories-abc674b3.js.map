{"version":3,"file":"slider.stories-abc674b3.js","sources":["../../src/js/components/interval.js","../../src/docs/Slider/value.html?raw","../../src/docs/Slider/intervall.html?raw","../../src/docs/Slider/slider.js"],"sourcesContent":["/**\n * Custom adaption of https://github.com/LeaVerou/multirange\n * @typedef {Object} HTMLIntervalElement\n * @extends {HTMLInputElement}\n * @property {number} valueLow The low value of the interval\n * @property {number} valueHigh The high value of the interval\n * @property {string} value The value of the interval, comma separated\n */\n\n/**\n * Initialize the interval component\n * @param {HTMLInputElement} element\n * @returns {HTMLIntervalElement}\n */\nexport function interval(input) {\n  const descriptor = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')\n\n  const value = input.getAttribute('value')\n  const values = value === null ? [] : value.split(',')\n  const min = +(input.min || 0)\n  const max = +(input.max || 100)\n  const ghost = input.cloneNode()\n\n  input.classList.add('interval')\n  input.classList.add('original')\n  ghost.classList.add('interval')\n  ghost.classList.add('ghost')\n\n  input.value = values[0] || min + (max - min) / 2\n  ghost.value = values[1] || min + (max - min) / 2\n\n  input.after(ghost)\n\n  Object.defineProperty(\n    input,\n    'originalValue',\n    descriptor.get\n      ? descriptor\n      : {\n          // Fuck you Safari >:(\n          get: function () {\n            return this.value\n          },\n          set: function (v) {\n            this.value = v\n          }\n        }\n  )\n\n  Object.defineProperties(input, {\n    valueLow: {\n      get: function () {\n        return Math.min(this.originalValue, ghost.value)\n      },\n      set: function (v) {\n        this.originalValue = v\n        update()\n      },\n      enumerable: true\n    },\n    valueHigh: {\n      get: function () {\n        return Math.max(this.originalValue, ghost.value)\n      },\n      set: function (v) {\n        ghost.value = v\n        update()\n      },\n      enumerable: true\n    }\n  })\n\n  if (descriptor.get) {\n    // Again, fuck you Safari\n    Object.defineProperty(input, 'value', {\n      get: function () {\n        return this.valueLow + ',' + this.valueHigh\n      },\n      set: function (v) {\n        const values = v.split(',')\n        this.valueLow = values[0]\n        this.valueHigh = values[1]\n        update()\n      },\n      enumerable: true\n    })\n  }\n\n  if (typeof input.oninput === 'function') {\n    ghost.oninput = input.oninput.bind(input)\n  }\n\n  function update() {\n    ghost.style.setProperty('--low', 100 * ((input.valueLow - min) / (max - min)) + 1 + '%')\n    ghost.style.setProperty('--high', 100 * ((input.valueHigh - min) / (max - min)) - 1 + '%')\n  }\n\n  ghost.addEventListener('mousedown', function passClick(evt) {\n    // Find the horizontal position that was clicked\n    const clickValue = min + ((max - min) * evt.offsetX) / this.offsetWidth\n    const middleValue = (input.valueHigh + input.valueLow) / 2\n    if (input.valueLow === ghost.value && clickValue > middleValue) {\n      // Click is closer to input element and we swap thumbs\n      input.value = ghost.value\n    }\n  })\n\n  input.addEventListener('input', update)\n  ghost.addEventListener('input', function () {\n    update()\n    input.dispatchEvent(new Event('input'))\n  })\n\n  update()\n\n  return input\n}\n","export default \"<div class=\\\"col-md-6\\\">\\n  <div class=\\\"row\\\">\\n    <p class=\\\"text-sm mb-05 text-muted\\\">Default</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-group input-group-fixed\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control text-right\\\"\\n        id=\\\"lf-slider-value-1\\\"\\n        value=\\\"50\\\" />\\n      <div class=\\\"input-group-append\\\">\\n        <span class=\\\"input-group-text\\\">%</span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 mt-1\\\">\\n      <input\\n        id=\\\"lf-slider-1\\\"\\n        type=\\\"range\\\"\\n        name=\\\"lf-slider\\\"\\n        class=\\\"lf-slider\\\"\\n        list=\\\"tickmarks\\\"\\n        value=\\\"50\\\"\\n        min=\\\"0\\\"\\n        max=\\\"100\\\"\\n        style=\\\"--progress: 50\\\"\\n        aria-controls=\\\"lf-slider-value-1\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <p class=\\\"text-sm mt-15 mb-05 text-muted\\\">With labels</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-group input-group-fixed\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control text-right\\\"\\n        id=\\\"lf-slider-value-2\\\"\\n        value=\\\"50\\\" />\\n      <span class=\\\"input-group-append\\\">%</span>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 mt-1 slider-wrapper\\\">\\n      <div class=\\\"slider-label-left\\\">0 %</div>\\n      <input\\n        id=\\\"lf-slider-3\\\"\\n        type=\\\"range\\\"\\n        name=\\\"lf-slider\\\"\\n        class=\\\"lf-slider\\\"\\n        value=\\\"50\\\"\\n        style=\\\"--progress: 50\\\"\\n        min=\\\"0\\\"\\n        max=\\\"100\\\"\\n        aria-controls=\\\"lf-slider-value-2\\\" />\\n      <div class=\\\"slider-label-right\\\">100 %</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <p class=\\\"text-sm mt-15 mb-05 text-muted\\\">With distribution labels</p>\\n  </div>\\n  <div class=\\\"row mb-15\\\">\\n    <div class=\\\"input-group input-group-fixed\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control text-right\\\"\\n        id=\\\"lf-slider-value-3\\\"\\n        value=\\\"50\\\" />\\n      <span class=\\\"input-group-append\\\">%</span>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 mt-1 px-0\\\">\\n      <div class=\\\"distribution-label slider-label-left\\\">0 %</div>\\n      <input\\n        id=\\\"lf-slider-4\\\"\\n        type=\\\"range\\\"\\n        name=\\\"lf-slider\\\"\\n        class=\\\"lf-slider\\\"\\n        value=\\\"50\\\"\\n        style=\\\"--progress: 50\\\"\\n        min=\\\"0\\\"\\n        max=\\\"100\\\"\\n        aria-controls=\\\"lf-slider-value-3\\\" />\\n      <div class=\\\"distribution-label slider-label-right\\\">100 %</div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"col-md-6\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control form-control-fixed text-right\\\"\\n        id=\\\"interval-low\\\"\\n        value=\\\"25\\\" />\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control form-control-fixed text-right\\\"\\n        id=\\\"interval-high\\\"\\n        value=\\\"75\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-6 my-1\\\">\\n      <div class=\\\"pos-relative\\\">\\n        <input\\n          type=\\\"range\\\"\\n          id=\\\"interval\\\"\\n          name=\\\"lf-interval\\\"\\n          class=\\\"lf-slider\\\"\\n          value=\\\"25,75\\\"\\n          min=\\\"0\\\"\\n          max=\\\"100\\\" />\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { interval } from '../../js/components/interval'\nimport { each } from '../../js/utils'\n\nconst sliderExample = (context) => {\n  if (!context) {\n    return\n  }\n\n  const intervalInput = context.querySelector('#interval')\n  if (intervalInput) {\n    const low = context.querySelector('#interval-low')\n    const hight = context.querySelector('#interval-high')\n\n    interval(intervalInput)\n\n    intervalInput.addEventListener('input', function () {\n      low.value = intervalInput.valueLow\n      hight.value = intervalInput.valueHigh\n    })\n  }\n\n  each(\n    '.lf-slider',\n    function (input) {\n      if (input === intervalInput) return\n      input.addEventListener('input', function () {\n        const percent = Math.ceil(((input.value - input.min) / (input.max - input.min)) * 100)\n\n        input.style.setProperty('--progress', percent)\n\n        const output = document.getElementById(input.getAttribute('aria-controls'))\n\n        if (output) {\n          output.value = input.value\n        }\n      })\n    },\n    context\n  )\n}\n\nexport { sliderExample }\n"],"names":["interval","input","descriptor","Object","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","value","getAttribute","values","split","min","max","ghost","cloneNode","classList","add","after","defineProperty","get","set","v","defineProperties","valueLow","Math","originalValue","update","enumerable","valueHigh","oninput","bind","style","setProperty","addEventListener","evt","clickValue","offsetX","offsetWidth","middleValue","dispatchEvent","Event","Value","Intervall","sliderExample","context","intervalInput","querySelector","low","hight","each","percent","ceil","output","document","getElementById"],"mappings":"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"}