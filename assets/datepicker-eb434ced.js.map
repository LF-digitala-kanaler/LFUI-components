{"version":3,"file":"datepicker-eb434ced.js","sources":["../../node_modules/preact-custom-element/dist/preact-custom-element.esm.js","../../src/js/components/monthpicker.jsx","../../node_modules/@stencil/core/internal/app-data/index.js","../../node_modules/@stencil/core/internal/client/index.js","../../node_modules/@duetds/date-picker/custom-element/index.js","../../src/js/components/datepicker.js"],"sourcesContent":["import{h as t,hydrate as e,render as n,cloneElement as o}from\"preact\";function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function i(t){this.getChildContext=function(){return t.context};var e=t.children,n=function(t,e){if(null==t)return{};var n,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)e.indexOf(n=i[o])>=0||(r[n]=t[n]);return r}(t,[\"context\",\"children\"]);return o(e,n)}function a(){var o=new CustomEvent(\"_preact\",{detail:{},bubbles:!0,cancelable:!0});this.dispatchEvent(o),this._vdom=t(i,r({},this._props,{context:o.detail.context}),function e(n,o){if(3===n.nodeType)return n.data;if(1!==n.nodeType)return null;var r=[],i={},a=0,c=n.attributes,l=n.childNodes;for(a=c.length;a--;)\"slot\"!==c[a].name&&(i[c[a].name]=c[a].value,i[s(c[a].name)]=c[a].value);for(a=l.length;a--;){var p=e(l[a],null),d=l[a].slot;d?i[d]=t(u,{name:d},p):r[a]=p}var h=o?t(u,null,r):r;return t(o||n.nodeName.toLowerCase(),i,h)}(this,this._vdomComponent)),(this.hasAttribute(\"hydrate\")?e:n)(this._vdom,this._root)}function s(t){return t.replace(/-(\\w)/g,function(t,e){return e?e.toUpperCase():\"\"})}function c(t,e,r){if(this._vdom){var i={};i[t]=r=null==r?void 0:r,i[s(t)]=r,this._vdom=o(this._vdom,i),n(this._vdom,this._root)}}function l(){n(this._vdom=null,this._root)}function u(e,n){var o=this;return t(\"slot\",r({},e,{ref:function(t){t?(o.ref=t,o._listener||(o._listener=function(t){t.stopPropagation(),t.detail.context=n},t.addEventListener(\"_preact\",o._listener))):o.ref.removeEventListener(\"_preact\",o._listener)}}))}export default function(t,e,n,o){function r(){var e=Reflect.construct(HTMLElement,[],r);return e._vdomComponent=t,e._root=o&&o.shadow?e.attachShadow({mode:\"open\"}):e,e}return(r.prototype=Object.create(HTMLElement.prototype)).constructor=r,r.prototype.connectedCallback=a,r.prototype.attributeChangedCallback=c,r.prototype.disconnectedCallback=l,n=n||t.observedAttributes||Object.keys(t.propTypes||{}),r.observedAttributes=n,n.forEach(function(t){Object.defineProperty(r.prototype,t,{get:function(){return this._vdom.props[t]},set:function(e){this._vdom?this.attributeChangedCallback(t,null,e):(this._props||(this._props={}),this._props[t]=e,this.connectedCallback());var n=typeof e;null!=e&&\"string\"!==n&&\"boolean\"!==n&&\"number\"!==n||this.setAttribute(t,e)}})}),customElements.define(e||t.tagName||t.displayName||t.name,r)}\n//# sourceMappingURL=preact-custom-element.esm.js.map\n","// @ts-check\n\nimport { useRef, useState, useEffect } from 'preact/hooks'\nimport register from 'preact-custom-element'\nimport { render } from 'preact'\n\nconst FOCUSABLE =\n  ':where(button, [href], input, select, textarea, [tabindex]):not([tabindex=\"-1\"], :disabled)'\n\n/**\n * @typedef {object} Options\n * @property {Localization} localization\n */\n\n/**\n * @typedef {object} Localization\n * @property {string} placeholder\n * @property {string} prevYearLabel\n * @property {string} nextYearLabel\n * @property {string} yearSelectLabel\n * @property {string} closeLabel\n * @property {string} calendarHeading\n * @property {string[]} monthNames\n * @property {string[]} monthNamesShort\n */\n\n/** @type {Options} */\nexport const DEFAULTS = {\n  localization: {\n    placeholder: 'åååå-mm',\n    prevYearLabel: 'Föregående månad',\n    nextYearLabel: 'Nästa månad',\n    yearSelectLabel: 'år',\n    closeLabel: 'Stäng',\n    calendarHeading: 'Välj en månad',\n    monthNames: [\n      'Januari',\n      'Februari',\n      'Mars',\n      'April',\n      'Maj',\n      'Juni',\n      'Juli',\n      'Augusti',\n      'September',\n      'Oktober',\n      'November',\n      'December'\n    ],\n    monthNamesShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'Maj',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Okt',\n      'Nov',\n      'Dec'\n    ]\n  }\n}\n\n/**\n * Initialize monthpicker element\n * @param {HTMLInputElement} input The date input element\n * @param {Options} opts\n * @returns {HTMLDivElement}\n */\nexport function monthpicker(input, opts = DEFAULTS) {\n  const div = document.createElement('div')\n  div.classList.add('duet-month-picker')\n\n  let open = false\n  const update = (props) => render(<Monthpicker {...props} />, div)\n  const close = () => {\n    open = false\n    update({ ...props, open })\n  }\n\n  const props = {\n    localization: opts.localization,\n    onchange({ value }) {\n      close()\n      // Inform upstream that the value has changed\n      div.dispatchEvent(new window.CustomEvent('change', { detail: { value } }))\n    },\n    onfocus: close,\n    onclose: close\n  }\n\n  // Forward all attributes to the monthpicker\n  for (const { name, value } of input.attributes) {\n    props[name] = value\n  }\n\n  // Find all triggers that control the monthpicker\n  const triggers = [...document.querySelectorAll(`[aria-controls=${input.id}]`)]\n\n  for (const trigger of triggers) {\n    // Hook up clikc listenrers to toggle open state\n    trigger.addEventListener('click', function () {\n      open = !open\n      update({ ...props, open })\n      trigger.classList.toggle('active', open)\n    })\n  }\n\n  document.addEventListener('click', function onclick(event) {\n    if (!open) return\n    if (!div.isConnected) {\n      // Clean up if the monthpicker has been removed from the DOM\n      document.removeEventListener('click', onclick)\n      return\n    }\n\n    /** @type {HTMLElement|null} */\n    let el = /** @type {HTMLElement} */ (event.target)\n\n    // Checking if the click was inside the monthpicker or a trigger\n    while (el) {\n      if (el === div || triggers.includes(el)) return\n      el = /** @type {HTMLElement?} */ (el.parentNode)\n    }\n\n    // Update state\n    open = false\n    for (const trigger of triggers) {\n      trigger.classList.remove('active')\n    }\n\n    // Update DOM\n    update({ ...props, open })\n  })\n\n  // Initial render\n  update(props)\n\n  // Replace default month picker with our custom one\n  input.replaceWith(div)\n\n  return div\n}\n\n/**\n * @param {import('preact').RenderableProps<{ localization?: Localization, [key: string]: any }>} props\n * @returns {import('preact').VNode}\n */\nexport function Monthpicker(props) {\n  const {\n    localization = DEFAULTS.localization,\n    open,\n    onBlur,\n    onblur,\n    onChange,\n    onchange,\n    onClose,\n    onclose,\n    ...attrs\n  } = props\n\n  const [id] = useState(Math.random().toString(36).substring(2))\n  const initial = useRef(true)\n\n  /** @type {import('preact').Ref<HTMLDivElement>} */\n  const root = useRef(null)\n\n  /** @type {import('preact').Ref<HTMLInputElement>} */\n  const input = useRef(null)\n\n  /** @type {import('preact').Ref<HTMLSelectElement>} */\n  const select = useRef(null)\n\n  /** @type {import('preact').Ref<HTMLButtonElement>} */\n  const focused = useRef(null)\n\n  const now = new Date()\n\n  const isOpen = toBool(open)\n  const [value, _setValue] = useState(parse(attrs.value))\n  const min = parse(attrs.min) || {\n    year: now.getFullYear() - 10,\n    month: 1\n  }\n  const max = parse(attrs.max) || {\n    year: now.getFullYear() + 10,\n    month: 12\n  }\n  const fallback = {\n    year: Math.min(max.year, Math.max(min.year, now.getFullYear())),\n    month: Math.min(max.month, Math.max(now.getMonth() + 1, min.month))\n  }\n  const [selected, setSelected] = useState(value || fallback)\n\n  const setValue = (next) => {\n    _setValue(next)\n\n    if (!next && next === value && input.current) {\n      input.current.value = ''\n    }\n\n    const str = next ? stringify(next) : null\n    if (typeof onChange === 'function') onChange({ value: str })\n    if (typeof onchange === 'function') onchange({ value: str })\n  }\n\n  const addSelectedMonths = (value) => {\n    let { year, month } = selected\n    month += value\n\n    if (month < 1) {\n      const diff = (month - 1) / 12\n      year = Math.max(min.year, Math.floor(year + diff))\n      month = 12 + month\n      if (year === min.year) month = Math.max(min.month, month)\n    } else if (month > 12) {\n      const diff = month / 12\n      year = Math.min(max.year, Math.floor(year + diff))\n      month = month - 12\n      if (year === max.year) month = Math.max(max.month, month)\n    } else if (year === min.year || year === max.year) {\n      month = Math.max(min.month, Math.min(max.month, month))\n    }\n\n    setSelected({ year, month })\n  }\n\n  // Contain focus within the month picker\n  const onkeydown = (event) => {\n    if (!isOpen) return\n    if (event.key === 'Escape') {\n      if (typeof onClose === 'function') onClose()\n      if (typeof onclose === 'function') onclose()\n    } else if (event.key !== 'Tab') {\n      /** @type {NodeListOf<HTMLElement> | []} */\n      const nodes = root.current?.querySelectorAll(FOCUSABLE) || []\n      const elements = [...nodes].filter((el) => el !== input.current)\n      const index = elements.indexOf(event.target)\n      if (!index && event.shiftKey) {\n        elements[elements.length - 1].focus()\n        event.preventDefault()\n      } else if (index === elements.length - 1 && !event.shiftKey) {\n        elements[0].focus()\n        event.preventDefault()\n      }\n    }\n  }\n\n  // Move focus on month change\n  useEffect(() => focused.current?.focus(), [selected.month])\n\n  // Update internal state when value changes\n  useEffect(() => {\n    // Bypass proxy to not trigger onchange\n    if (!initial.current) _setValue(parse(attrs.value))\n  }, [attrs.value])\n\n  // Manage focus when open/close\n  useEffect(\n    function () {\n      if (initial.current && !attrs.autofocus) return\n      if (isOpen) {\n        select.current?.focus()\n      } else {\n        input.current?.focus()\n        setSelected(value || fallback)\n      }\n    },\n    [isOpen]\n  )\n\n  useEffect(function () {\n    initial.current = false\n  }, [])\n\n  return (\n    <div className=\"duet-date\" ref={root} onKeyDown={onkeydown}>\n      <div className=\"duet-date__input-wrapper\">\n        <input\n          {...attrs}\n          ref={input}\n          value={value ? stringify(value) : ''}\n          onChange={() => {}}\n          onBlur={(event) => {\n            // @ts-ignore\n            const value = parse(event.target.value)\n\n            if (value) {\n              const { year, month } = value\n              if (\n                min.year > year ||\n                (min.year === year && min.month > month) ||\n                max.year < year ||\n                (max.year === year && max.month < month)\n              ) {\n                setValue(null)\n              } else {\n                setValue(value)\n              }\n            } else {\n              setValue(null)\n            }\n\n            if (typeof onBlur === 'function') onBlur(event)\n            if (typeof onblur === 'function') onblur(event)\n          }}\n          className=\"duet-date__input\"\n          placeholder={localization.placeholder}\n          aria-autocomplete=\"none\"\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </div>\n      <div\n        className={`duet-date__dialog ${isOpen ? 'is-active' : ''}`}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-hidden=\"false\"\n        aria-labelledby={`DuetDateLabel-${id}`}>\n        <div className=\"duet-date__dialog-content\">\n          <div className=\"duet-date__mobile\">\n            <label className=\"duet-date__mobile-heading\">\n              {localization.calendarHeading}\n            </label>\n            <button\n              className=\"duet-date__close\"\n              type=\"button\"\n              onClick={(event) => {\n                if (typeof onClose === 'function') onClose()\n                if (typeof onclose === 'function') onclose()\n                event.preventDefault()\n              }}>\n              <svg\n                aria-hidden=\"true\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n                <path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"></path>\n              </svg>\n              <span className=\"duet-date__vhidden\">\n                {localization.closeLabel}\n              </span>\n            </button>\n          </div>\n          <div className=\"duet-date__header\">\n            <div>\n              <h2\n                id={`DuetDateLabel-${id}`}\n                className=\"duet-date__vhidden\"\n                aria-live=\"polite\"\n                aria-atomic=\"true\">\n                {selected.year}\n              </h2>\n              <label\n                htmlFor={`DuetDateYear-${id}`}\n                className=\"duet-date__vhidden\">\n                {localization.yearSelectLabel}\n              </label>\n              <div className=\"duet-date__select\">\n                <select\n                  ref={select}\n                  name=\"year\"\n                  id={`DuetDateYear-${id}`}\n                  className=\"duet-date__select--year\"\n                  value={selected.year}\n                  onChange={(event) =>\n                    // @ts-ignore\n                    setSelected({ ...selected, year: +event.target.value })\n                  }>\n                  {Array(max.year - min.year + 1)\n                    .fill(null)\n                    .map((_, i) => (\n                      <option key={`year-${i}`}>{min.year + i}</option>\n                    ))}\n                </select>\n                <div className=\"duet-date__select-label\" aria-hidden=\"true\">\n                  <span>{selected.year}</span>\n                  <svg\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\">\n                    <path d=\"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\"></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"duet-date__nav\">\n              <button\n                className=\"duet-date__prev\"\n                type=\"button\"\n                disabled={min.year === selected.year}\n                onClick={(e) =>\n                  setSelected({ ...selected, year: selected.year - 1 })\n                }>\n                <svg\n                  aria-hidden=\"true\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"21\"\n                  height=\"21\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M14.71 15.88L10.83 12l3.88-3.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.39.39-1.03 0-1.42z\"></path>\n                </svg>\n                <span className=\"duet-date__vhidden\">\n                  {localization.prevYearLabel}\n                </span>\n              </button>\n              <button\n                className=\"duet-date__next\"\n                type=\"button\"\n                disabled={max.year === selected.year}\n                onClick={(e) =>\n                  setSelected({ ...selected, year: selected.year + 1 })\n                }>\n                <svg\n                  aria-hidden=\"true\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"21\"\n                  height=\"21\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M9.29 15.88L13.17 12 9.29 8.12c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0l4.59 4.59c.39.39.39 1.02 0 1.41L10.7 17.3c-.39.39-1.02.39-1.41 0-.38-.39-.39-1.03 0-1.42z\"></path>\n                </svg>\n                <span className=\"duet-date__vhidden\">\n                  {localization.nextYearLabel}\n                </span>\n              </button>\n            </div>\n          </div>\n          <table\n            className=\"duet-date__table\"\n            aria-labelledby={`DuetDateLabel-${id}`}>\n            <tbody>\n              {Array(4)\n                .fill(null)\n                .map((_, row) => (\n                  <tr key={`row-${row}`} className=\"duet-date__row\">\n                    {Array(3)\n                      .fill(null)\n                      .map((_, col) => {\n                        const month = row * 3 + col + 1\n                        const isSelected = month === selected.month\n                        const isDisabled =\n                          (selected.year === max.year && month > max.month) ||\n                          (selected.year === min.year && month < min.month)\n                        return (\n                          <td key={`month-${col}`} className=\"duet-date__cell\">\n                            <button\n                              className={`duet-date__day is-month ${\n                                isDisabled ? 'is-outside' : ''\n                              }`}\n                              value={stringify({ ...selected, month })}\n                              ref={isSelected ? focused : null}\n                              tabIndex={isSelected ? 0 : -1}\n                              type=\"button\"\n                              aria-pressed={\n                                value?.year === selected.year &&\n                                value?.month === month\n                                  ? 'true'\n                                  : 'false'\n                              }\n                              disabled={isDisabled}\n                              onClick={(e) => setValue({ ...selected, month })}\n                              onKeyDown={(event) => {\n                                const { key } = event\n                                if (key === 'Enter') {\n                                  setValue(selected)\n                                } else {\n                                  const add = getMonthForKey(\n                                    key,\n                                    selected.month\n                                  )\n                                  if (add != null) addSelectedMonths(add)\n                                }\n                              }}>\n                              <span aria-hidden=\"true\">\n                                {localization.monthNames[row * 3 + col]}\n                              </span>\n                              <span className=\"duet-date__vhidden\">\n                                {localization.monthNames[row * 3 + col]}{' '}\n                                {selected.year}\n                              </span>\n                            </button>\n                          </td>\n                        )\n                      })}\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n/**\n * @param {string} key\n * @param {number} current\n * @returns {number?}\n */\nfunction getMonthForKey(key, current) {\n  switch (key) {\n    case 'Down':\n    case 'ArrowDown':\n      return 3\n    case 'Up':\n    case 'ArrowUp':\n      return -3\n    case 'Left':\n    case 'ArrowLeft':\n      return -1\n    case 'Right':\n    case 'ArrowRight':\n      return 1\n    case 'Home':\n      return current * -1 + 1\n    case 'End':\n      return 12 - current\n    case 'PageUp':\n      return -12\n    case 'PageDown':\n      return 12\n  }\n  return null\n}\n\n/** @type {function(string | void): { year: number, month: number }?} */\nfunction parse(str) {\n  const values = str?.split('-').map(Number)\n  if (values?.length !== 2 || values.some(isNaN)) return null\n  const [year, month] = values\n  return { year, month }\n}\n\n/** @type {function(any): boolean} */\nfunction toBool(value) {\n  return value != null && value !== '' && JSON.parse(value) !== false\n}\n\n/** @type {function({ year: number, month: number }): string} */\nfunction stringify({ year, month }) {\n  return `${year}-${('0' + month).slice(-2)}`\n}\n\nregister(\n  Monthpicker,\n  'duet-month-picker',\n  [\n    'value',\n    'open',\n    'onChange',\n    'onchange',\n    'onBlur',\n    'onblur',\n    'onFocus',\n    'onfocus',\n    'onClose',\n    'onclose'\n  ],\n  { shadow: false }\n)\n","const BUILD = {\n    allRenderFn: false,\n    cmpDidLoad: true,\n    cmpDidUnload: false,\n    cmpDidUpdate: true,\n    cmpDidRender: true,\n    cmpWillLoad: true,\n    cmpWillUpdate: true,\n    cmpWillRender: true,\n    connectedCallback: true,\n    disconnectedCallback: true,\n    element: true,\n    event: true,\n    hasRenderFn: true,\n    lifecycle: true,\n    hostListener: true,\n    hostListenerTargetWindow: true,\n    hostListenerTargetDocument: true,\n    hostListenerTargetBody: true,\n    hostListenerTargetParent: false,\n    hostListenerTarget: true,\n    member: true,\n    method: true,\n    mode: true,\n    observeAttribute: true,\n    prop: true,\n    propMutable: true,\n    reflect: true,\n    scoped: true,\n    shadowDom: true,\n    slot: true,\n    cssAnnotations: true,\n    state: true,\n    style: true,\n    svg: true,\n    updatable: true,\n    vdomAttribute: true,\n    vdomXlink: true,\n    vdomClass: true,\n    vdomFunctional: true,\n    vdomKey: true,\n    vdomListener: true,\n    vdomRef: true,\n    vdomPropOrAttr: true,\n    vdomRender: true,\n    vdomStyle: true,\n    vdomText: true,\n    watchCallback: true,\n    taskQueue: true,\n    hotModuleReplacement: false,\n    isDebug: false,\n    isDev: false,\n    isTesting: false,\n    hydrateServerSide: false,\n    hydrateClientSide: false,\n    lifecycleDOMEvents: false,\n    lazyLoad: false,\n    profile: false,\n    slotRelocation: true,\n    appendChildSlotFix: false,\n    cloneNodeFix: false,\n    hydratedAttribute: false,\n    hydratedClass: true,\n    safari10: false,\n    scriptDataOpts: false,\n    scopedSlotTextContentFix: false,\n    shadowDomShim: false,\n    slotChildNodesFix: false,\n    invisiblePrehydration: true,\n    propBoolean: true,\n    propNumber: true,\n    propString: true,\n    cssVarShim: false,\n    constructableCSS: true,\n    cmpShouldUpdate: true,\n    devTools: false,\n    dynamicImportShim: false,\n    shadowDelegatesFocus: true,\n    initializeNextTick: false,\n    asyncLoading: false,\n    asyncQueue: false,\n    transformTagName: false,\n    attachStyles: true,\n};\nconst Env = {};\nconst NAMESPACE = /* default */ 'app';\n\nexport { BUILD, Env, NAMESPACE };\n","/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet contentRef;\nlet hostTagName;\nlet customError;\nlet i = 0;\nlet useNativeShadowDom = false;\nlet checkSlotFallbackVisibility = false;\nlet checkSlotRelocate = false;\nlet isSvgMode = false;\nlet renderingRef = null;\nlet queueCongestion = 0;\nlet queuePending = false;\n/*\n Stencil Client Platform v2.22.3 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nconst Build = {\n    isDev: BUILD.isDev ? true : false,\n    isBrowser: true,\n    isServer: false,\n    isTesting: BUILD.isTesting ? true : false,\n};\nconst Context = {};\nconst getAssetPath = (path) => {\n    const assetUrl = new URL(path, plt.$resourcesUrl$);\n    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nconst setAssetPath = (path) => (plt.$resourcesUrl$ = path);\nconst createTime = (fnName, tagName = '') => {\n    if (BUILD.profile && performance.mark) {\n        const key = `st:${fnName}:${tagName}:${i++}`;\n        // Start\n        performance.mark(key);\n        // End\n        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    if (BUILD.profile && performance.mark) {\n        if (performance.getEntriesByName(key, 'mark').length === 0) {\n            performance.mark(key);\n        }\n        return () => {\n            if (performance.getEntriesByName(measureText, 'measure').length === 0) {\n                performance.measure(measureText, key);\n            }\n        };\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst inspect = (ref) => {\n    const hostRef = getHostRef(ref);\n    if (!hostRef) {\n        return undefined;\n    }\n    const flags = hostRef.$flags$;\n    const hostElement = hostRef.$hostElement$;\n    return {\n        renderCount: hostRef.$renderCount$,\n        flags: {\n            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),\n            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),\n            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),\n            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),\n            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),\n            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),\n            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),\n            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),\n            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),\n            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),\n        },\n        instanceValues: hostRef.$instanceValues$,\n        ancestorComponent: hostRef.$ancestorComponent$,\n        hostElement,\n        lazyInstance: hostRef.$lazyInstance$,\n        vnode: hostRef.$vnode$,\n        modeName: hostRef.$modeName$,\n        onReadyPromise: hostRef.$onReadyPromise$,\n        onReadyResolve: hostRef.$onReadyResolve$,\n        onInstancePromise: hostRef.$onInstancePromise$,\n        onInstanceResolve: hostRef.$onInstanceResolve$,\n        onRenderResolve: hostRef.$onRenderResolve$,\n        queuedListeners: hostRef.$queuedListeners$,\n        rmListeners: hostRef.$rmListeners$,\n        ['s-id']: hostElement['s-id'],\n        ['s-cr']: hostElement['s-cr'],\n        ['s-lr']: hostElement['s-lr'],\n        ['s-p']: hostElement['s-p'],\n        ['s-rc']: hostElement['s-rc'],\n        ['s-sc']: hostElement['s-sc'],\n    };\n};\nconst installDevTools = () => {\n    if (BUILD.devTools) {\n        const stencil = (win.stencil = win.stencil || {});\n        const originalInspect = stencil.inspect;\n        stencil.inspect = (ref) => {\n            let result = inspect(ref);\n            if (!result && typeof originalInspect === 'function') {\n                result = originalInspect(ref);\n            }\n            return result;\n        };\n    }\n};\nconst CONTENT_REF_ID = 'r';\nconst ORG_LOCATION_ID = 'o';\nconst SLOT_NODE_ID = 's';\nconst TEXT_NODE_ID = 't';\nconst HYDRATE_ID = 's-id';\nconst HYDRATED_STYLE_ID = 'sty-id';\nconst HYDRATE_CHILD_ID = 'c-id';\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let slotName = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                else if (BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {\n                    consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        if (BUILD.isDev && nodeName === 'input') {\n            validateInputProperties(vnodeData);\n        }\n        // normalize class / classname attributes\n        if (BUILD.vdomKey && vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (BUILD.slotRelocation && vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        if (BUILD.vdomClass) {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (BUILD.isDev && vNodeChildren.some(isHost)) {\n        consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n    }\n    if (BUILD.vdomFunctional && typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = key;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    if (BUILD.vdomAttribute) {\n        vnode.$attrs$ = null;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = null;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.\n *\n * Note that these functions convert from {@link d.VNode} to\n * {@link d.ChildNode} to give functional component developers a friendly\n * interface.\n */\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\n/**\n * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a\n * friendlier public interface (hence, 'convertToPublic').\n *\n * @param node the virtual DOM node to convert\n * @returns a converted child node\n */\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\n/**\n * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in\n * order to use the resulting object in the virtual DOM. The initial object was\n * likely created as part of presenting a public API, so converting it back\n * involved making it 'private' again (hence, `convertToPrivate`).\n *\n * @param node the child node to convert\n * @returns a converted virtual DOM node\n */\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Validates the ordering of attributes on an input element\n *\n * @param inputElm the element to validate\n */\nconst validateInputProperties = (inputElm) => {\n    const props = Object.keys(inputElm);\n    const value = props.indexOf('value');\n    if (value === -1) {\n        return;\n    }\n    const typeIndex = props.indexOf('type');\n    const minIndex = props.indexOf('min');\n    const maxIndex = props.indexOf('max');\n    const stepIndex = props.indexOf('step');\n    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n        consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n    }\n};\nconst initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n    const endHydrate = createTime('hydrateClient', tagName);\n    const shadowRoot = hostElm.shadowRoot;\n    const childRenderNodes = [];\n    const slotNodes = [];\n    const shadowRootNodes = BUILD.shadowDom && shadowRoot ? [] : null;\n    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));\n    if (!plt.$orgLocNodes$) {\n        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));\n    }\n    hostElm[HYDRATE_ID] = hostId;\n    hostElm.removeAttribute(HYDRATE_ID);\n    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n    childRenderNodes.map((c) => {\n        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n        const node = c.$elm$;\n        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n        }\n        if (!shadowRoot) {\n            node['s-hn'] = tagName;\n            if (orgLocationNode) {\n                node['s-ol'] = orgLocationNode;\n                node['s-ol']['s-nr'] = node;\n            }\n        }\n        plt.$orgLocNodes$.delete(orgLocationId);\n    });\n    if (BUILD.shadowDom && shadowRoot) {\n        shadowRootNodes.map((shadowRootNode) => {\n            if (shadowRootNode) {\n                shadowRoot.appendChild(shadowRootNode);\n            }\n        });\n    }\n    endHydrate();\n};\nconst clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n    let childNodeType;\n    let childIdSplt;\n    let childVNode;\n    let i;\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n        if (childNodeType) {\n            // got the node data from the element's attribute\n            // `${hostId}.${nodeId}.${depth}.${index}`\n            childIdSplt = childNodeType.split('.');\n            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n                childVNode = {\n                    $flags$: 0,\n                    $hostId$: childIdSplt[0],\n                    $nodeId$: childIdSplt[1],\n                    $depth$: childIdSplt[2],\n                    $index$: childIdSplt[3],\n                    $tag$: node.tagName.toLowerCase(),\n                    $elm$: node,\n                    $attrs$: null,\n                    $children$: null,\n                    $key$: null,\n                    $name$: null,\n                    $text$: null,\n                };\n                childRenderNodes.push(childVNode);\n                node.removeAttribute(HYDRATE_CHILD_ID);\n                // this is a new child vnode\n                // so ensure its parent vnode has the vchildren array\n                if (!parentVNode.$children$) {\n                    parentVNode.$children$ = [];\n                }\n                // add our child vnode to a specific index of the vnode's children\n                parentVNode.$children$[childVNode.$index$] = childVNode;\n                // this is now the new parent vnode for all the next child checks\n                parentVNode = childVNode;\n                if (shadowRootNodes && childVNode.$depth$ === '0') {\n                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                }\n            }\n        }\n        // recursively drill down, end to start so we can remove nodes\n        for (i = node.childNodes.length - 1; i >= 0; i--) {\n            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n        }\n        if (node.shadowRoot) {\n            // keep drilling down through the shadow root nodes\n            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n            // comment node for either the host id or a 0 host id\n            childNodeType = childIdSplt[0];\n            childVNode = {\n                $flags$: 0,\n                $hostId$: childIdSplt[1],\n                $nodeId$: childIdSplt[2],\n                $depth$: childIdSplt[3],\n                $index$: childIdSplt[4],\n                $elm$: node,\n                $attrs$: null,\n                $children$: null,\n                $key$: null,\n                $name$: null,\n                $tag$: null,\n                $text$: null,\n            };\n            if (childNodeType === TEXT_NODE_ID) {\n                childVNode.$elm$ = node.nextSibling;\n                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                    childVNode.$text$ = childVNode.$elm$.textContent;\n                    childRenderNodes.push(childVNode);\n                    // remove the text comment since it's no longer needed\n                    node.remove();\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                    if (shadowRootNodes && childVNode.$depth$ === '0') {\n                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                    }\n                }\n            }\n            else if (childVNode.$hostId$ === hostId) {\n                // this comment node is specifcally for this host id\n                if (childNodeType === SLOT_NODE_ID) {\n                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n                    childVNode.$tag$ = 'slot';\n                    if (childIdSplt[5]) {\n                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n                    }\n                    else {\n                        node['s-sn'] = '';\n                    }\n                    node['s-sr'] = true;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // browser support shadowRoot and this is a shadow dom component\n                        // create an actual slot element\n                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n                        if (childVNode.$name$) {\n                            // add the slot name attribute\n                            childVNode.$elm$.setAttribute('name', childVNode.$name$);\n                        }\n                        // insert the new slot element before the slot comment\n                        node.parentNode.insertBefore(childVNode.$elm$, node);\n                        // remove the slot comment since it's not needed for shadow\n                        node.remove();\n                        if (childVNode.$depth$ === '0') {\n                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                        }\n                    }\n                    slotNodes.push(childVNode);\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                }\n                else if (childNodeType === CONTENT_REF_ID) {\n                    // `${CONTENT_REF_ID}.${hostId}`;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // remove the content ref comment since it's not needed for shadow\n                        node.remove();\n                    }\n                    else if (BUILD.slotRelocation) {\n                        hostElm['s-cr'] = node;\n                        node['s-cn'] = true;\n                    }\n                }\n            }\n        }\n    }\n    else if (parentVNode && parentVNode.$tag$ === 'style') {\n        const vnode = newVNode(null, node.textContent);\n        vnode.$elm$ = node;\n        vnode.$index$ = '0';\n        parentVNode.$children$ = [vnode];\n    }\n};\nconst initializeDocumentHydrate = (node, orgLocNodes) => {\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        let i = 0;\n        for (; i < node.childNodes.length; i++) {\n            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n        }\n        if (node.shadowRoot) {\n            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        const childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[0] === ORG_LOCATION_ID) {\n            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n            node.nodeValue = '';\n            // useful to know if the original location is\n            // the root light-dom of a shadow dom component\n            node['s-en'] = childIdSplt[3];\n        }\n    }\n};\n// Private\nconst computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);\n// Public\nconst setMode = (handler) => modeResolutionChain.push(handler);\nconst getMode = (ref) => getHostRef(ref).$modeName$;\n/**\n * Parse a new property value for a given property type.\n *\n * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,\n * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:\n *   1. `any`, the type given to `propValue` in the function signature\n *   2. the type stored from `propType`.\n *\n * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.\n *\n * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to\n * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is\n * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.\n * ```tsx\n * <my-cmp prop-val={0}></my-cmp>\n * ```\n *\n * HTML prop values on the other hand, will always a string\n *\n * @param propValue the new value to coerce to some type\n * @param propType the type of the prop, expressed as a binary number\n * @returns the parsed/coerced value\n */\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getElement = (ref) => (BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            if (BUILD.isDev && !elm.isConnected) {\n                consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n            }\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),\n                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),\n                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    var _a;\n    let scopeId = getScopeId(cmpMeta, mode);\n    const style = styles.get(scopeId);\n    if (!BUILD.attachStyles) {\n        return scopeId;\n    }\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                if (BUILD.hydrateClientSide &&\n                    styleContainerNode.host &&\n                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId}\"]`))) {\n                    // This is only happening on native shadow-dom, do not needs CSS var shim\n                    styleElm.innerHTML = style;\n                }\n                else {\n                    if (BUILD.cssVarShim && plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* CMP_FLAGS.needsScopedEncapsulation */));\n                        const newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    if (BUILD.hydrateServerSide || BUILD.hotModuleReplacement) {\n                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if ((BUILD.shadowDom || BUILD.scoped) && BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);\nconst convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{');\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (BUILD.vdomClass && memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (BUILD.vdomStyle && memberName === 'style') {\n            // update style attribute, css properties and values\n            if (BUILD.updatable) {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (BUILD.vdomKey && memberName === 'key')\n            ;\n        else if (BUILD.vdomRef && memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if (BUILD.vdomListener &&\n            (BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else if (BUILD.vdomPropOrAttr) {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            if (BUILD.vdomXlink) {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (BUILD.vdomXlink && xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (BUILD.vdomXlink && xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    if (BUILD.updatable) {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    let oldVNode;\n    if (BUILD.slotRelocation && !useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* VNODE_FLAGS.isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* VNODE_FLAGS.isSlotReference */;\n        }\n    }\n    if (BUILD.isDev && newVNode.$elm$) {\n        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `\"${newVNode.$text$}\" text` : `\"${newVNode.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);\n    }\n    if (BUILD.vdomText && newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ =\n            BUILD.isDebug || BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');\n    }\n    else {\n        if (BUILD.svg && !isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (BUILD.svg\n            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$)\n            : doc.createElement(BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$));\n        if (BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        if (BUILD.vdomAttribute) {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ((BUILD.shadowDom || BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        if (BUILD.svg) {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    if (BUILD.slotRelocation) {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nconst putBackInOriginalLocation = (parentElm, recursive) => {\n    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n    const oldSlotChildNodes = parentElm.childNodes;\n    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        const childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ((BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    let childNode;\n    if (BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, BUILD.slotRelocation ? referenceNode(before) : before);\n            }\n        }\n    }\n};\n/**\n * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.\n * This can be used to, for instance, clean up after a list of children which\n * should no longer be shown.\n *\n * This function also handles some of Stencil's slot relocation logic.\n *\n * @param vnodes a list of virtual DOM nodes to remove\n * @param startIdx the index at which to start removing nodes (inclusive)\n * @param endIdx the index at which to stop removing nodes (inclusive)\n * @param vnode a VNode\n * @param elm an element\n */\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            if (BUILD.slotRelocation) {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\n/**\n * Reconcile the children of a new VNode with the children of an old VNode by\n * traversing the two collections of children, identifying nodes that are\n * conserved or changed, calling out to `patch` to make any necessary\n * updates to the DOM, and rearranging DOM nodes as needed.\n *\n * The algorithm for reconciling children works by analyzing two 'windows' onto\n * the two arrays of children (`oldCh` and `newCh`). We keep track of the\n * 'windows' by storing start and end indices and references to the\n * corresponding array entries. Initially the two 'windows' are basically equal\n * to the entire array, but we progressively narrow the windows until there are\n * no children left to update by doing the following:\n *\n * 1. Skip any `null` entries at the beginning or end of the two arrays, so\n *    that if we have an initial array like the following we'll end up dealing\n *    only with a window bounded by the highlighted elements:\n *\n *    [null, null, VNode1 , ... , VNode2, null, null]\n *                 ^^^^^^         ^^^^^^\n *\n * 2. Check to see if the elements at the head and tail positions are equal\n *    across the windows. This will basically detect elements which haven't\n *    been added, removed, or changed position, i.e. if you had the following\n *    VNode elements (represented as HTML):\n *\n *    oldVNode: `<div><p><span>HEY</span></p></div>`\n *    newVNode: `<div><p><span>THERE</span></p></div>`\n *\n *    Then when comparing the children of the `<div>` tag we check the equality\n *    of the VNodes corresponding to the `<p>` tags and, since they are the\n *    same tag in the same position, we'd be able to avoid completely\n *    re-rendering the subtree under them with a new DOM element and would just\n *    call out to `patch` to handle reconciling their children and so on.\n *\n * 3. Check, for both windows, to see if the element at the beginning of the\n *    window corresponds to the element at the end of the other window. This is\n *    a heuristic which will let us identify _some_ situations in which\n *    elements have changed position, for instance it _should_ detect that the\n *    children nodes themselves have not changed but merely moved in the\n *    following example:\n *\n *    oldVNode: `<div><element-one /><element-two /></div>`\n *    newVNode: `<div><element-two /><element-one /></div>`\n *\n *    If we find cases like this then we also need to move the concrete DOM\n *    elements corresponding to the moved children to write the re-order to the\n *    DOM.\n *\n * 4. Finally, if VNodes have the `key` attribute set on them we check for any\n *    nodes in the old children which have the same key as the first element in\n *    our window on the new children. If we find such a node we handle calling\n *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with\n *    what we find.\n *\n * Finally, once we've narrowed our 'windows' to the point that either of them\n * collapse (i.e. they have length 0) we then handle any remaining VNode\n * insertion or deletion that needs to happen to get a DOM state that correctly\n * reflects the new child VNodes. If, for instance, after our window on the old\n * children has collapsed we still have more nodes on the new children that\n * we haven't dealt with yet then we need to add them, or if the new children\n * collapse but we still have unhandled _old_ children then we need to make\n * sure the corresponding DOM nodes are removed.\n *\n * @param parentElm the node into which the parent VNode is rendered\n * @param oldCh the old children of the parent node\n * @param newVNode the new VNode which will replace the parent\n * @param newCh the new children of the parent node\n */\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // VNode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // if the start nodes are the same then we should patch the new VNode\n            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`\n            // indices to reflect that. We don't need to move any DOM Nodes around\n            // since things are matched up in order.\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            // likewise, if the end nodes are the same we patch new onto old and\n            // decrement our end indices, and also likewise in this case we don't\n            // need to move any DOM Nodes.\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // case: \"Vnode moved right\"\n            //\n            // We've found that the last node in our window on the new children is\n            // the same VNode as the _first_ node in our window on the old children\n            // we're dealing with now. Visually, this is the layout of these two\n            // nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`\n            // and move the DOM element for `oldStartVnode`.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            // We need to move the element for `oldStartVnode` into a position which\n            // will be appropriate for `newEndVnode`. For this we can use\n            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a\n            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for\n            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:\n            //\n            // <old-start-node />\n            // <some-intervening-node />\n            // <old-end-node />\n            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here\n            // <next-sibling />\n            //\n            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put\n            // the node for `oldStartVnode` at the end of the children of\n            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there\n            // aren't any siblings, and passing `null` to `Node.insertBefore` will\n            // append it to the children of the parent element.\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // case: \"Vnode moved left\"\n            //\n            // We've found that the first node in our window on the new children is\n            // the same VNode as the _last_ node in our window on the old children.\n            // Visually, this is the layout of these two nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`\n            // (which will handle updating any changed attributes, reconciling their\n            // children etc) but we also need to move the DOM node to which\n            // `oldEndVnode` corresponds.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            // We've already checked above if `oldStartVnode` and `newStartVnode` are\n            // the same node, so since we're here we know that they are not. Thus we\n            // can move the element for `oldEndVnode` _before_ the element for\n            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the\n            // future.\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // Here we do some checks to match up old and new nodes based on the\n            // `$key$` attribute, which is set by putting a `key=\"my-key\"` attribute\n            // in the JSX for a DOM element in the implementation of a Stencil\n            // component.\n            //\n            // First we check to see if there are any nodes in the array of old\n            // children which have the same key as the first node in the new\n            // children.\n            idxInOld = -1;\n            if (BUILD.vdomKey) {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (BUILD.vdomKey && idxInOld >= 0) {\n                // We found a node in the old children which matches up with the first\n                // node in the new children! So let's deal with that\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    // the tag doesn't match so we'll need a new DOM element\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    // invalidate the matching old node so that we won't try to update it\n                    // again later on\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // We either didn't find an element in the old children that matches\n                // the key of the first new child OR the build is not using `key`\n                // attributes at all. In either case we need to create a new element\n                // for the new node.\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                // if we created a new node then handle inserting it to the DOM\n                if (BUILD.slotRelocation) {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n                else {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        // we have some more new nodes to add which don't match up with old nodes\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (BUILD.updatable && newStartIdx > newEndIdx) {\n        // there are nodes in the `oldCh` array which no longer correspond to nodes\n        // in the new array, so lets remove them (which entails cleaning up the\n        // relevant DOM nodes)\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\n/**\n * Compare two VNodes to determine if they are the same\n *\n * **NB**: This function is an equality _heuristic_ based on the available\n * information set on the two VNodes and can be misleading under certain\n * circumstances. In particular, if the two nodes do not have `key` attrs\n * (available under `$key$` on VNodes) then the function falls back on merely\n * checking that they have the same tag.\n *\n * So, in other words, if `key` attrs are not set on VNodes which may be\n * changing order within a `children` array or something along those lines then\n * we could obtain a false negative and then have to do needless re-rendering\n * (i.e. we'd say two VNodes aren't equal when in fact they should be).\n *\n * @param leftVNode the first VNode to check\n * @param rightVNode the second VNode to check\n * @returns whether they're equal or not\n */\nconst isSameVnode = (leftVNode, rightVNode) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (leftVNode.$tag$ === rightVNode.$tag$) {\n        if (BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {\n            return leftVNode.$name$ === rightVNode.$name$;\n        }\n        // this will be set if components in the build have `key` attrs set on them\n        if (BUILD.vdomKey) {\n            return leftVNode.$key$ === rightVNode.$key$;\n        }\n        return true;\n    }\n    return false;\n};\nconst referenceNode = (node) => {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nconst parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n */\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    let defaultHolder;\n    if (!BUILD.vdomText || text === null) {\n        if (BUILD.svg) {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        if (BUILD.vdomAttribute || BUILD.reflect) {\n            if (BUILD.slot && tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (BUILD.updatable && oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            // so we need to call `updateChildren` to reconcile them\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (BUILD.updatable && BUILD.vdomText && oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (BUILD.updatable && oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (BUILD.svg && isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (BUILD.vdomText && BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (BUILD.vdomText && oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst updateFallbackSlotVisibility = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    const childNodes = elm.childNodes;\n    let childNode;\n    let i;\n    let ilen;\n    let j;\n    let slotNameAttr;\n    let nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    nodeType = childNodes[j].nodeType;\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn'] || slotNameAttr !== '') {\n                        // this sibling node is from a different component OR is a named fallback slot node\n                        if (nodeType === 1 /* NODE_TYPE.ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                            childNode.hidden = true;\n                            break;\n                        }\n                    }\n                    else {\n                        // this is a default fallback slot node\n                        // any element or text node (with content)\n                        // should hide the default fallback slot node\n                        if (nodeType === 1 /* NODE_TYPE.ElementNode */ ||\n                            (nodeType === 3 /* NODE_TYPE.TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                            childNode.hidden = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nconst relocateNodes = [];\nconst relocateSlotContent = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let childNode;\n    let node;\n    let hostContentNodes;\n    let slotNameAttr;\n    let relocateNodeData;\n    let j;\n    let i = 0;\n    const childNodes = elm.childNodes;\n    const ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map((relocateNode) => {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nconst isNodeLocatedInSlot = (nodeToRelocate, slotNameAttr) => {\n    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nconst callNodeRefs = (vNode) => {\n    if (BUILD.vdomRef) {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n */\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    // <Host> runtime check\n    if (BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n        throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n    }\n    if (BUILD.reflect && cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);\n    if (BUILD.scoped || BUILD.shadowDom) {\n        scopeId = hostElm['s-sc'];\n    }\n    if (BUILD.slotRelocation) {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    if (BUILD.slotRelocation) {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            let relocateData;\n            let nodeToRelocate;\n            let orgLocationNode;\n            let parentNodeRef;\n            let insertBeforeNode;\n            let refNode;\n            let i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode =\n                        BUILD.isDebug || BUILD.hydrateServerSide\n                            ? originalLocationDebugNode(nodeToRelocate)\n                            : doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||\n                        nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\n// slot comment debug nodes only created with the `--debug` flag\n// otherwise these nodes are text nodes w/out content\nconst slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : ''}> (host=${hostTagName.toLowerCase()})`);\nconst originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +\n    (nodeToRelocate.localName\n        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`\n        : `[${nodeToRelocate.textContent}]`));\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    if (BUILD.taskQueue && BUILD.updatable) {\n        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;\n    }\n    if (BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return BUILD.taskQueue ? writeTask(dispatch) : dispatch();\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const elm = hostRef.$hostElement$;\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    let promise;\n    if (isInitialLoad) {\n        if (BUILD.lazyLoad && BUILD.hostListener) {\n            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentWillLoad');\n        if (BUILD.cmpWillLoad) {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    else {\n        emitLifecycleEvent(elm, 'componentWillUpdate');\n        if (BUILD.cmpWillUpdate) {\n            promise = safeCall(instance, 'componentWillUpdate');\n        }\n    }\n    emitLifecycleEvent(elm, 'componentWillRender');\n    if (BUILD.cmpWillRender) {\n        promise = then(promise, () => safeCall(instance, 'componentWillRender'));\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (BUILD.style && isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    if (BUILD.isDev) {\n        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        await callRender(hostRef, instance, elm);\n    }\n    else {\n        callRender(hostRef, instance, elm);\n    }\n    if (BUILD.cssVarShim && plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    if (BUILD.isDev) {\n        hostRef.$renderCount$++;\n        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        try {\n            // manually connected child components during server-side hydrate\n            serverSideConnected(elm);\n            if (isInitialLoad) {\n                // using only during server-side hydrate\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    elm['s-en'] = '';\n                }\n                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    elm['s-en'] = 'c';\n                }\n            }\n        }\n        catch (e) {\n            consoleError(e, elm);\n        }\n    }\n    if (BUILD.asyncLoading && rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    if (BUILD.asyncLoading) {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n    else {\n        postUpdateComponent(hostRef);\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    // in order for bundlers to correctly treeshake the BUILD object\n    // we need to ensure BUILD is not deoptimized within a try/catch\n    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization\n    const allRenderFn = BUILD.allRenderFn ? true : false;\n    const lazyLoad = BUILD.lazyLoad ? true : false;\n    const taskQueue = BUILD.taskQueue ? true : false;\n    const updatable = BUILD.updatable ? true : false;\n    try {\n        renderingRef = instance;\n        instance = allRenderFn ? instance.render() : instance.render && instance.render();\n        if (updatable && taskQueue) {\n            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;\n        }\n        if (updatable || lazyLoad) {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        if (BUILD.hasRenderFn || BUILD.reflect) {\n            if (BUILD.vdomRender || BUILD.reflect) {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                if (BUILD.hydrateServerSide) {\n                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value));\n                }\n                else {\n                    renderVdom(hostRef, instance);\n                }\n            }\n            else {\n                elm.textContent = instance;\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    renderingRef = null;\n    return null;\n};\nconst getRenderingRef = () => renderingRef;\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (BUILD.cmpDidRender) {\n        if (BUILD.isDev) {\n            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n        }\n        safeCall(instance, 'componentDidRender');\n        if (BUILD.isDev) {\n            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n        }\n    }\n    emitLifecycleEvent(elm, 'componentDidRender');\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        if (BUILD.asyncLoading && BUILD.cssAnnotations) {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        if (BUILD.cmpDidLoad) {\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n            safeCall(instance, 'componentDidLoad');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidLoad');\n        endPostUpdate();\n        if (BUILD.asyncLoading) {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad(tagName);\n            }\n        }\n    }\n    else {\n        if (BUILD.cmpDidUpdate) {\n            // we've already loaded this component\n            // fire off the user's componentDidUpdate method (if one was provided)\n            // componentDidUpdate runs AFTER render() has been called\n            // and all child components have finished updating\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n            }\n            safeCall(instance, 'componentDidUpdate');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidUpdate');\n        endPostUpdate();\n    }\n    if (BUILD.hotModuleReplacement) {\n        elm['s-hmr-load'] && elm['s-hmr-load']();\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    if (BUILD.asyncLoading) {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (ref) => {\n    if (BUILD.updatable) {\n        const hostRef = getHostRef(ref);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected &&\n            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n    return false;\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    if (BUILD.cssAnnotations) {\n        addHydratedFlag(doc.documentElement);\n    }\n    if (BUILD.asyncQueue) {\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n    if (BUILD.profile && performance.measure) {\n        performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, 'st:app:start');\n    }\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst emitLifecycleEvent = (elm, lifecycleName) => {\n    if (BUILD.lifecycleDOMEvents) {\n        emitEvent(elm, 'stencil_' + lifecycleName, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                namespace: NAMESPACE,\n            },\n        });\n    }\n};\nconst addHydratedFlag = (elm) => BUILD.hydratedClass\n    ? elm.classList.add('hydrated')\n    : BUILD.hydratedAttribute\n        ? elm.setAttribute('hydrated', '')\n        : undefined;\nconst serverSideConnected = (elm) => {\n    const children = elm.children;\n    if (children != null) {\n        for (let i = 0, ii = children.length; i < ii; i++) {\n            const childElm = children[i];\n            if (typeof childElm.connectedCallback === 'function') {\n                childElm.connectedCallback();\n            }\n            serverSideConnected(childElm);\n        }\n    }\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : ref;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    // explicitly check for NaN on both sides, as `NaN === NaN` is always false\n    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n    const didValueChange = newVal !== oldVal && !areBothNaN;\n    if ((!BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (BUILD.isDev) {\n            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n        }\n        if (!BUILD.lazyLoad || instance) {\n            // get an array of method names of watch functions to call\n            if (BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if (BUILD.updatable &&\n                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n                if (BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {\n                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n                        return;\n                    }\n                }\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if (BUILD.member && cmpMeta.$members$) {\n        if (BUILD.watchCallback && Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ((BUILD.prop || BUILD.state) &&\n                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||\n                    ((!BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // only during dev time\n                        if (BUILD.isDev) {\n                            const ref = getHostRef(this);\n                            if (\n                            // we are proxying the instance (not element)\n                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&\n                                // the element is not constructing\n                                (ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&\n                                // the member is a prop\n                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&\n                                // the member is not mutable\n                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {\n                                consoleDevWarn(`@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);\n                            }\n                        }\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (BUILD.lazyLoad &&\n                BUILD.method &&\n                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&\n                memberFlags & 64 /* MEMBER_FLAGS.Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        const ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n                    },\n                });\n            }\n        });\n        if (BUILD.observeAttribute && (!BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not unshadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to unshadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/unshadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if (BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((BUILD.lazyLoad || BUILD.hydrateServerSide || BUILD.style) &&\n        (hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        if (BUILD.lazyLoad || BUILD.hydrateClientSide) {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ((BUILD.isDev || BUILD.isDebug) && !Cstr) {\n                throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n            }\n            if (BUILD.member && !Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                if (BUILD.watchCallback) {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            if (BUILD.member) {\n                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            if (BUILD.member) {\n                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            if (BUILD.watchCallback) {\n                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        else {\n            // sync constructor component\n            Cstr = elm.constructor;\n            hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,\n            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_\n            // Stencil has completed instantiating the component.\n            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));\n        }\n        if (BUILD.style && Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if (BUILD.mode && typeof style !== 'string') {\n                style = style[(hostRef.$modeName$ = computeMode(elm))];\n                if (BUILD.hydrateServerSide && hostRef.$modeName$) {\n                    elm.setAttribute('s-mode', hostRef.$modeName$);\n                }\n            }\n            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                if (!BUILD.hydrateServerSide &&\n                    BUILD.shadowDom &&\n                    BUILD.shadowDomShim &&\n                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n                    style = await import('./shadow-css.js').then((m) => m.scopeCss(style, scopeId, false));\n                }\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    if (BUILD.lazyLoad && BUILD.connectedCallback) {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (BUILD.hostListenerTargetParent) {\n            // only run if we have listeners being attached to a parent\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n        }\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            let hostId;\n            if (BUILD.hydrateClientSide) {\n                hostId = elm.getAttribute(HYDRATE_ID);\n                if (hostId) {\n                    if (BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        const scopeId = BUILD.mode\n                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))\n                            : addStyle(elm.shadowRoot, cmpMeta);\n                        elm.classList.remove(scopeId + '-h', scopeId + '-s');\n                    }\n                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n                }\n            }\n            if (BUILD.slotRelocation && !hostId) {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if (BUILD.hydrateServerSide ||\n                    ((BUILD.slot || BUILD.shadowDom) &&\n                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            if (BUILD.asyncLoading) {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if ((BUILD.hydrateClientSide &&\n                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                        ancestorComponent.hasAttribute('s-id') &&\n                        ancestorComponent['s-p']) ||\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (BUILD.prop && !BUILD.hydrateServerSide && cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            if (BUILD.initializeNextTick) {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n            else {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n            // fire off connectedCallback() on component instance\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        endConnected();\n    }\n};\nconst setContentReference = (elm) => {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    const contentRefElm = (elm['s-cr'] = doc.createComment(BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n        if (BUILD.hostListener) {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if (BUILD.cssVarShim && plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n        if (BUILD.lazyLoad && BUILD.disconnectedCallback) {\n            safeCall(instance, 'disconnectedCallback');\n        }\n        if (BUILD.cmpDidUnload) {\n            safeCall(instance, 'componentDidUnload');\n        }\n    }\n};\nconst defineCustomElement = (Cstr, compactMeta) => {\n    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nconst proxyCustomElement = (Cstr, compactMeta) => {\n    const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n    };\n    if (BUILD.member) {\n        cmpMeta.$members$ = compactMeta[2];\n    }\n    if (BUILD.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n    }\n    if (BUILD.watchCallback) {\n        cmpMeta.$watchers$ = Cstr.$watchers$;\n    }\n    if (BUILD.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n    }\n    if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n    }\n    const originalConnectedCallback = Cstr.prototype.connectedCallback;\n    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n    Object.assign(Cstr.prototype, {\n        __registerHost() {\n            registerHost(this, cmpMeta);\n        },\n        connectedCallback() {\n            connectedCallback(this);\n            if (BUILD.connectedCallback && originalConnectedCallback) {\n                originalConnectedCallback.call(this);\n            }\n        },\n        disconnectedCallback() {\n            disconnectedCallback(this);\n            if (BUILD.disconnectedCallback && originalDisconnectedCallback) {\n                originalDisconnectedCallback.call(this);\n            }\n        },\n        __attachShadow() {\n            if (supportsShadow) {\n                if (BUILD.shadowDelegatesFocus) {\n                    this.attachShadow({\n                        mode: 'open',\n                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                    });\n                }\n                else {\n                    this.attachShadow({ mode: 'open' });\n                }\n            }\n            else {\n                this.shadowRoot = this;\n            }\n        },\n    });\n    Cstr.is = cmpMeta.$tagName$;\n    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);\n};\nconst forceModeUpdate = (elm) => {\n    if (BUILD.style && BUILD.mode && !BUILD.lazyLoad) {\n        const mode = computeMode(elm);\n        const hostRef = getHostRef(elm);\n        if (hostRef.$modeName$ !== mode) {\n            const cmpMeta = hostRef.$cmpMeta$;\n            const oldScopeId = elm['s-sc'];\n            const scopeId = getScopeId(cmpMeta, mode);\n            const style = elm.constructor.style[mode];\n            const flags = cmpMeta.$flags$;\n            if (style) {\n                if (!styles.has(scopeId)) {\n                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                }\n                hostRef.$modeName$ = mode;\n                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');\n                attachStyles(hostRef);\n                forceUpdate(elm);\n            }\n        }\n    }\n};\nconst patchCloneNode = (HostElementPrototype) => {\n    const orgCloneNode = HostElementPrototype.cloneNode;\n    HostElementPrototype.cloneNode = function (deep) {\n        const srcNode = this;\n        const isShadowDom = BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n        if (BUILD.slot && !isShadowDom && deep) {\n            let i = 0;\n            let slotted, nonStencilNode;\n            const stencilPrivates = [\n                's-id',\n                's-cr',\n                's-lr',\n                's-rc',\n                's-sc',\n                's-p',\n                's-cn',\n                's-sr',\n                's-sn',\n                's-hn',\n                's-ol',\n                's-nr',\n                's-si',\n            ];\n            for (; i < srcNode.childNodes.length; i++) {\n                slotted = srcNode.childNodes[i]['s-nr'];\n                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);\n                if (slotted) {\n                    if (BUILD.appendChildSlotFix && clonedNode.__appendChild) {\n                        clonedNode.__appendChild(slotted.cloneNode(true));\n                    }\n                    else {\n                        clonedNode.appendChild(slotted.cloneNode(true));\n                    }\n                }\n                if (nonStencilNode) {\n                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nconst patchSlotAppendChild = (HostElementPrototype) => {\n    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n    HostElementPrototype.appendChild = function (newChild) {\n        const slotName = (newChild['s-sn'] = getSlotName(newChild));\n        const slotNode = getHostSlotNode(this.childNodes, slotName);\n        if (slotNode) {\n            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n            const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n            return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n        }\n        return this.__appendChild(newChild);\n    };\n};\n/**\n * Patches the text content of an unnamed slotted node inside a scoped component\n * @param hostElementPrototype the `Element` to be patched\n * @param cmpMeta component runtime metadata used to determine if the component should be patched or not\n */\nconst patchTextContent = (hostElementPrototype, cmpMeta) => {\n    if (BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n        const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');\n        Object.defineProperty(hostElementPrototype, '__textContent', descriptor);\n        Object.defineProperty(hostElementPrototype, 'textContent', {\n            get() {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how\n                // nodes were reordered during the vdom render. first try to get the text content from the sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    return slotNode.nextSibling.textContent;\n                }\n                else if (slotNode) {\n                    return slotNode.textContent;\n                }\n                else {\n                    // fallback to the original implementation\n                    return this.__textContent;\n                }\n            },\n            set(value) {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,\n                // depending on how nodes were reordered during the vdom render. first try to set the text content on the\n                // sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    slotNode.nextSibling.textContent = value;\n                }\n                else if (slotNode) {\n                    slotNode.textContent = value;\n                }\n                else {\n                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM\n                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert\n                    // it there\n                    this.__textContent = value;\n                    const contentRefElm = this['s-cr'];\n                    if (contentRefElm) {\n                        this.insertBefore(contentRefElm, this.firstChild);\n                    }\n                }\n            },\n        });\n    }\n};\nconst patchChildSlotNodes = (elm, cmpMeta) => {\n    class FakeNodeList extends Array {\n        item(n) {\n            return this[n];\n        }\n    }\n    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n        const childNodesFn = elm.__lookupGetter__('childNodes');\n        Object.defineProperty(elm, 'children', {\n            get() {\n                return this.childNodes.map((n) => n.nodeType === 1);\n            },\n        });\n        Object.defineProperty(elm, 'childElementCount', {\n            get() {\n                return elm.children.length;\n            },\n        });\n        Object.defineProperty(elm, 'childNodes', {\n            get() {\n                const childNodes = childNodesFn.call(this);\n                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&\n                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {\n                    const result = new FakeNodeList();\n                    for (let i = 0; i < childNodes.length; i++) {\n                        const slot = childNodes[i]['s-nr'];\n                        if (slot) {\n                            result.push(slot);\n                        }\n                    }\n                    return result;\n                }\n                return FakeNodeList.from(childNodes);\n            },\n        });\n    }\n};\nconst getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';\n/**\n * Recursively searches a series of child nodes for a slot with the provided name.\n * @param childNodes the nodes to search for a slot with a specific name.\n * @param slotName the name of the slot to match on.\n * @returns a reference to the slot node that matches the provided name, `null` otherwise\n */\nconst getHostSlotNode = (childNodes, slotName) => {\n    let i = 0;\n    let childNode;\n    for (; i < childNodes.length; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {\n            return childNode;\n        }\n        childNode = getHostSlotNode(childNode.childNodes, slotName);\n        if (childNode) {\n            return childNode;\n        }\n    }\n    return null;\n};\nconst getHostSlotChildNodes = (n, slotName) => {\n    const childNodes = [n];\n    while ((n = n.nextSibling) && n['s-sn'] === slotName) {\n        childNodes.push(n);\n    }\n    return childNodes;\n};\nconst hmrStart = (elm, cmpMeta, hmrVersionId) => {\n    // ¯\\_(ツ)_/¯\n    const hostRef = getHostRef(elm);\n    // reset state flags to only have been connected\n    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;\n    // TODO\n    // detatch any event listeners that may have been added\n    // because we're not passing an exact event name it'll\n    // remove all of this element's event, which is good\n    // create a callback for when this component finishes hmr\n    elm['s-hmr-load'] = () => {\n        // finished hmr for this element\n        delete elm['s-hmr-load'];\n    };\n    // re-initialize the component\n    initializeComponent(elm, hostRef, cmpMeta, hmrVersionId);\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    if (BUILD.profile && performance.mark) {\n        performance.mark('st:app:start');\n    }\n    installDevTools();\n    const endBootstrap = createTime('bootstrapLazy');\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n    let appLoadFallback;\n    let isBootstrapping = true;\n    let i = 0;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    if (BUILD.asyncQueue) {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;\n        }\n    }\n    if (BUILD.hydrateClientSide) {\n        // If the app is already hydrated there is not point to disable the\n        // async queue. This will improve the first input delay\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    if (BUILD.hydrateClientSide && BUILD.shadowDom) {\n        for (; i < styles.length; i++) {\n            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n        }\n    }\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            if (BUILD.member) {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            if (BUILD.hostListener) {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            if (BUILD.reflect) {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            if (BUILD.watchCallback) {\n                cmpMeta.$watchers$ = {};\n            }\n            if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n            }\n            const tagName = BUILD.transformTagName && options.transformTagName\n                ? options.transformTagName(cmpMeta.$tagName$)\n                : cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        if (supportsShadow) {\n                            if (BUILD.shadowDelegatesFocus) {\n                                self.attachShadow({\n                                    mode: 'open',\n                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                                });\n                            }\n                            else {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                        else if (!BUILD.hydrateServerSide && !('shadowRoot' in self)) {\n                            self.shadowRoot = self;\n                        }\n                    }\n                    if (BUILD.slotChildNodesFix) {\n                        patchChildSlotNodes(self, cmpMeta);\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            if (BUILD.cloneNodeFix) {\n                patchCloneNode(HostElement.prototype);\n            }\n            if (BUILD.appendChildSlotFix) {\n                patchSlotAppendChild(HostElement.prototype);\n            }\n            if (BUILD.hotModuleReplacement) {\n                HostElement.prototype['s-hmr'] = function (hmrVersionId) {\n                    hmrStart(this, cmpMeta, hmrVersionId);\n                };\n            }\n            if (BUILD.scopedSlotTextContentFix) {\n                patchTextContent(HostElement.prototype, cmpMeta);\n            }\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));\n            }\n        });\n    });\n    if (BUILD.invisiblePrehydration && (BUILD.hydratedClass || BUILD.hydratedAttribute)) {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        // Apply CSP nonce to the style tag if it exists\n        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n        if (nonce != null) {\n            visibilityStyle.setAttribute('nonce', nonce);\n        }\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        if (BUILD.profile) {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));\n        }\n        else {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst getConnect = (_ref, tagName) => {\n    const componentOnReady = () => {\n        let elm = doc.querySelector(tagName);\n        if (!elm) {\n            elm = doc.createElement(tagName);\n            doc.body.appendChild(elm);\n        }\n        return typeof elm.componentOnReady === 'function' ? elm.componentOnReady() : Promise.resolve(elm);\n    };\n    const create = (...args) => {\n        return componentOnReady().then((el) => el.create(...args));\n    };\n    return {\n        create,\n        componentOnReady,\n    };\n};\nconst getContext = (_elm, context) => {\n    if (context in Context) {\n        return Context[context];\n    }\n    else if (context === 'window') {\n        return win;\n    }\n    else if (context === 'document') {\n        return doc;\n    }\n    else if (context === 'isServer' || context === 'isPrerender') {\n        return BUILD.hydrateServerSide ? true : false;\n    }\n    else if (context === 'isClient') {\n        return BUILD.hydrateServerSide ? false : true;\n    }\n    else if (context === 'resourcesUrl' || context === 'publicPath') {\n        return getAssetPath('.');\n    }\n    else if (context === 'queue') {\n        return {\n            write: writeTask,\n            read: readTask,\n            tick: {\n                then(cb) {\n                    return nextTick(cb);\n                },\n            },\n        };\n    }\n    return undefined;\n};\nconst Fragment = (_, children) => children;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (BUILD.hostListener && listeners) {\n        // this is called immediately within the element's constructor\n        // initialize our event listeners on the host element\n        // we do this now so that we can listen to events that may\n        // have fired even before the instance is ready\n        if (BUILD.hostListenerTargetParent) {\n            // this component may have event listeners that should be attached to the parent\n            if (attachParentListeners) {\n                // this is being ran from within the connectedCallback\n                // which is important so that we know the host element actually has a parent element\n                // filter out the listeners to only have the ones that ARE being attached to the parent\n                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);\n            }\n            else {\n                // this is being ran from within the component constructor\n                // everything BUT the parent element listeners should be attached at this time\n                // filter out the listeners that are NOT being attached to the parent\n                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));\n            }\n        }\n        listeners.map(([flags, name, method]) => {\n            const target = BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        if (BUILD.lazyLoad) {\n            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n        else {\n            hostRef.$hostElement$[methodName](ev);\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)\n        return doc;\n    if (BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)\n        return win;\n    if (BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)\n        return doc.body;\n    if (BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)\n        return elm.parentElement;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => supportsListenerOptions\n    ? ({\n        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,\n        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,\n    })\n    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\nconst setPlatformOptions = (opts) => Object.assign(plt, opts);\nconst insertVdomAnnotations = (doc, staticComponents) => {\n    if (doc != null) {\n        const docData = {\n            hostIds: 0,\n            rootLevelIds: 0,\n            staticComponents: new Set(staticComponents),\n        };\n        const orgLocationNodes = [];\n        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);\n        orgLocationNodes.forEach((orgLocationNode) => {\n            if (orgLocationNode != null) {\n                const nodeRef = orgLocationNode['s-nr'];\n                let hostId = nodeRef['s-host-id'];\n                let nodeId = nodeRef['s-node-id'];\n                let childId = `${hostId}.${nodeId}`;\n                if (hostId == null) {\n                    hostId = 0;\n                    docData.rootLevelIds++;\n                    nodeId = docData.rootLevelIds;\n                    childId = `${hostId}.${nodeId}`;\n                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n                    }\n                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                        if (hostId === 0) {\n                            const textContent = nodeRef.nodeValue.trim();\n                            if (textContent === '') {\n                                // useless whitespace node at the document root\n                                orgLocationNode.remove();\n                                return;\n                            }\n                        }\n                        const commentBeforeTextNode = doc.createComment(childId);\n                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n                        nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n                    }\n                }\n                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n                const orgLocationParentNode = orgLocationNode.parentElement;\n                if (orgLocationParentNode) {\n                    if (orgLocationParentNode['s-en'] === '') {\n                        // ending with a \".\" means that the parent element\n                        // of this node's original location is a SHADOW dom element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.`;\n                    }\n                    else if (orgLocationParentNode['s-en'] === 'c') {\n                        // ending with a \".c\" means that the parent element\n                        // of this node's original location is a SCOPED element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.c`;\n                    }\n                }\n                orgLocationNode.nodeValue = orgLocationNodeId;\n            }\n        });\n    }\n};\nconst parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {\n    if (node == null) {\n        return;\n    }\n    if (node['s-nr'] != null) {\n        orgLocationNodes.push(node);\n    }\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        node.childNodes.forEach((childNode) => {\n            const hostRef = getHostRef(childNode);\n            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n                const cmpData = {\n                    nodeIds: 0,\n                };\n                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);\n            }\n            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);\n        });\n    }\n};\nconst insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {\n    if (vnode != null) {\n        const hostId = ++docData.hostIds;\n        hostElm.setAttribute(HYDRATE_ID, hostId);\n        if (hostElm['s-cr'] != null) {\n            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n        }\n        if (vnode.$children$ != null) {\n            const depth = 0;\n            vnode.$children$.forEach((vnodeChild, index) => {\n                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);\n            });\n        }\n        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute('c-id')) {\n            const parent = hostElm.parentElement;\n            if (parent && parent.childNodes) {\n                const parentChildNodes = Array.from(parent.childNodes);\n                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);\n                if (comment) {\n                    const index = parentChildNodes.indexOf(hostElm) - 1;\n                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);\n                }\n            }\n        }\n    }\n};\nconst insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {\n    const childElm = vnodeChild.$elm$;\n    if (childElm == null) {\n        return;\n    }\n    const nodeId = cmpData.nodeIds++;\n    const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n    childElm['s-host-id'] = hostId;\n    childElm['s-node-id'] = nodeId;\n    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    }\n    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {\n        const parentNode = childElm.parentNode;\n        const nodeName = parentNode.nodeName;\n        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {\n            const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n            const commentBeforeTextNode = doc.createComment(textNodeId);\n            parentNode.insertBefore(commentBeforeTextNode, childElm);\n        }\n    }\n    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        if (childElm['s-sr']) {\n            const slotName = childElm['s-sn'] || '';\n            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n            childElm.nodeValue = slotNodeId;\n        }\n    }\n    if (vnodeChild.$children$ != null) {\n        const childDepth = depth + 1;\n        vnodeChild.$children$.forEach((vnode, index) => {\n            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);\n        });\n    }\n};\nconst hostRefs = /*@__PURE__*/ new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = 0;\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    if (BUILD.asyncLoading) {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (customError || console.error)(e, el);\nconst STENCIL_DEV_MODE = BUILD.isTesting\n    ? ['STENCIL:'] // E2E testing\n    : [\n        '%cstencil',\n        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',\n    ];\nconst consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nconst consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nconst consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nconst setErrorHandler = (handler) => (customError = handler);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (BUILD.isDev && typeof bundleId !== 'string') {\n        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`);\n        return undefined;\n    }\n    const module = !BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {\n        if (!BUILD.hotModuleReplacement) {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst modeResolutionChain = [];\nconst win = typeof window !== 'undefined' ? window : {};\nconst CSS = BUILD.cssVarShim ? win.CSS : null;\nconst doc = win.document || { head: {} };\nconst H = (win.HTMLElement || class {\n});\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst setPlatformHelpers = (helpers) => {\n    Object.assign(plt, helpers);\n};\nconst supportsShadow = BUILD.shadowDomShim && BUILD.shadowDom\n    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()\n    : true;\nconst supportsListenerOptions = /*@__PURE__*/ (() => {\n    let supportsListenerOptions = false;\n    try {\n        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {\n            get() {\n                supportsListenerOptions = true;\n            },\n        }));\n    }\n    catch (e) { }\n    return supportsListenerOptions;\n})();\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = BUILD.constructableCSS\n    ? /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    : false;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst consumeTimeout = (queue, timeout) => {\n    let i = 0;\n    let ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nconst flush = () => {\n    if (BUILD.asyncQueue) {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    if (BUILD.asyncQueue) {\n        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */\n            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))\n            : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push(...queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n    else {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nexport { BUILD, Env, NAMESPACE } from '@stencil/core/internal/app-data';\nexport { Build, CSS, Context, Fragment, H, H as HTMLElement, Host, STENCIL_DEV_MODE, addHostEventListeners, bootstrapLazy, cmpModules, connectedCallback, consoleDevError, consoleDevInfo, consoleDevWarn, consoleError, createEvent, defineCustomElement, disconnectedCallback, doc, forceModeUpdate, forceUpdate, getAssetPath, getConnect, getContext, getElement, getHostRef, getMode, getRenderingRef, getValue, h, insertVdomAnnotations, isMemberInElement, loadModule, modeResolutionChain, nextTick, parsePropertyValue, plt, postUpdateComponent, promiseResolve, proxyComponent, proxyCustomElement, readTask, registerHost, registerInstance, renderVdom, setAssetPath, setErrorHandler, setMode, setNonce, setPlatformHelpers, setPlatformOptions, setValue, styles, supportsConstructableStylesheets, supportsListenerOptions, supportsShadow, win, writeTask };\n","import { h, createEvent, Host, proxyCustomElement } from '@stencil/core/internal/client';\nexport { setAssetPath, setPlatformOptions } from '@stencil/core/internal/client';\n\nconst ISO_DATE_FORMAT = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nvar DaysOfWeek;\n(function (DaysOfWeek) {\n  DaysOfWeek[DaysOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n  DaysOfWeek[DaysOfWeek[\"Monday\"] = 1] = \"Monday\";\n  DaysOfWeek[DaysOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n  DaysOfWeek[DaysOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n  DaysOfWeek[DaysOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n  DaysOfWeek[DaysOfWeek[\"Friday\"] = 5] = \"Friday\";\n  DaysOfWeek[DaysOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n})(DaysOfWeek || (DaysOfWeek = {}));\nfunction createDate(year, month, day) {\n  var dayInt = parseInt(day, 10);\n  var monthInt = parseInt(month, 10);\n  var yearInt = parseInt(year, 10);\n  const isValid = Number.isInteger(yearInt) && // all parts should be integers\n    Number.isInteger(monthInt) &&\n    Number.isInteger(dayInt) &&\n    monthInt > 0 && // month must be 1-12\n    monthInt <= 12 &&\n    dayInt > 0 && // day must be 1-31\n    dayInt <= 31 &&\n    yearInt > 0;\n  if (isValid) {\n    return new Date(yearInt, monthInt - 1, dayInt);\n  }\n}\n/**\n * @param value date string in ISO format YYYY-MM-DD\n */\nfunction parseISODate(value) {\n  if (!value) {\n    return;\n  }\n  const matches = value.match(ISO_DATE_FORMAT);\n  if (matches) {\n    return createDate(matches[1], matches[2], matches[3]);\n  }\n}\n/**\n * print date in format YYYY-MM-DD\n * @param date\n */\nfunction printISODate(date) {\n  if (!date) {\n    return \"\";\n  }\n  var d = date.getDate().toString(10);\n  var m = (date.getMonth() + 1).toString(10);\n  var y = date.getFullYear().toString(10);\n  // days are not zero-indexed, so pad if less than 10\n  if (date.getDate() < 10) {\n    d = `0${d}`;\n  }\n  // months *are* zero-indexed, pad if less than 9!\n  if (date.getMonth() < 9) {\n    m = `0${m}`;\n  }\n  return `${y}-${m}-${d}`;\n}\n/**\n * Compare if two dates are equal in terms of day, month, and year\n */\nfunction isEqual(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n  return isEqualMonth(a, b) && a.getDate() === b.getDate();\n}\n/**\n * Compare if two dates are in the same month of the same year.\n */\nfunction isEqualMonth(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth();\n}\nfunction addDays(date, days) {\n  var d = new Date(date);\n  d.setDate(d.getDate() + days);\n  return d;\n}\nfunction startOfWeek(date, firstDayOfWeek = DaysOfWeek.Monday) {\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? 7 : 0) + day - firstDayOfWeek;\n  d.setDate(d.getDate() - diff);\n  return d;\n}\nfunction endOfWeek(date, firstDayOfWeek = DaysOfWeek.Monday) {\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? -7 : 0) + 6 - (day - firstDayOfWeek);\n  d.setDate(d.getDate() + diff);\n  return d;\n}\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\nfunction setMonth(date, month) {\n  const d = new Date(date);\n  d.setMonth(month);\n  return d;\n}\nfunction setYear(date, year) {\n  const d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\n/**\n * Check if date is within a min and max\n */\nfunction inRange(date, min, max) {\n  return clamp(date, min, max) === date;\n}\n/**\n * Ensures date is within range, returns min or max if out of bounds\n */\nfunction clamp(date, min, max) {\n  const time = date.getTime();\n  if (min && min instanceof Date && time < min.getTime()) {\n    return min;\n  }\n  if (max && max instanceof Date && time > max.getTime()) {\n    return max;\n  }\n  return date;\n}\n/**\n * given start and end date, return an (inclusive) array of all dates in between\n * @param start\n * @param end\n */\nfunction getDaysInRange(start, end) {\n  const days = [];\n  let current = start;\n  while (!isEqual(current, end)) {\n    days.push(current);\n    current = addDays(current, 1);\n  }\n  days.push(current);\n  return days;\n}\n/**\n * given a date, return an array of dates from a calendar perspective\n * @param date\n * @param firstDayOfWeek\n */\nfunction getViewOfMonth(date, firstDayOfWeek = DaysOfWeek.Monday) {\n  const start = startOfWeek(startOfMonth(date), firstDayOfWeek);\n  const end = endOfWeek(endOfMonth(date), firstDayOfWeek);\n  return getDaysInRange(start, end);\n}\n/**\n * Form random hash\n */\nfunction chr4() {\n  return Math.random()\n    .toString(16)\n    .slice(-4);\n}\n/**\n * Create random identifier with a prefix\n * @param prefix\n */\nfunction createIdentifier(prefix) {\n  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n}\n\nconst DatePickerInput = ({ onClick, dateFormatter, localization, name, formattedValue, valueAsDate, value, identifier, disabled, required, role, buttonRef, inputRef, onInput, onBlur, onFocus, }) => {\n  return (h(\"div\", { class: \"duet-date__input-wrapper\" },\n    h(\"input\", { class: \"duet-date__input\", value: formattedValue, placeholder: localization.placeholder, id: identifier, disabled: disabled, role: role, required: required ? true : undefined, \"aria-autocomplete\": \"none\", onInput: onInput, onFocus: onFocus, onBlur: onBlur, autoComplete: \"off\", ref: inputRef }),\n    h(\"input\", { type: \"hidden\", name: name, value: value }),\n    h(\"button\", { class: \"duet-date__toggle\", onClick: onClick, disabled: disabled, ref: buttonRef, type: \"button\" },\n      h(\"span\", { class: \"duet-date__toggle-icon\" },\n        h(\"svg\", { \"aria-hidden\": \"true\", height: \"24\", viewBox: \"0 0 21 21\", width: \"24\", xmlns: \"http://www.w3.org/2000/svg\" },\n          h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\", transform: \"translate(2 2)\" },\n            h(\"path\", { d: \"m2.5.5h12c1.1045695 0 2 .8954305 2 2v12c0 1.1045695-.8954305 2-2 2h-12c-1.1045695 0-2-.8954305-2-2v-12c0-1.1045695.8954305-2 2-2z\", stroke: \"currentColor\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" }),\n            h(\"path\", { d: \"m.5 4.5h16\", stroke: \"currentColor\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" }),\n            h(\"g\", { fill: \"currentColor\" },\n              h(\"circle\", { cx: \"8.5\", cy: \"8.5\", r: \"1\" }),\n              h(\"circle\", { cx: \"4.5\", cy: \"8.5\", r: \"1\" }),\n              h(\"circle\", { cx: \"12.5\", cy: \"8.5\", r: \"1\" }),\n              h(\"circle\", { cx: \"8.5\", cy: \"12.5\", r: \"1\" }),\n              h(\"circle\", { cx: \"4.5\", cy: \"12.5\", r: \"1\" }),\n              h(\"circle\", { cx: \"12.5\", cy: \"12.5\", r: \"1\" }))))),\n      h(\"span\", { class: \"duet-date__vhidden\" },\n        localization.buttonLabel,\n        valueAsDate && (h(\"span\", null,\n          \", \",\n          localization.selectedDateMessage,\n          \" \",\n          dateFormatter.format(valueAsDate)))))));\n};\n\nconst DatePickerDay = ({ focusedDay, today, day, onDaySelect, onKeyboardNavigation, focusedDayRef, disabled, inRange, isSelected, dateFormatter, }) => {\n  const isToday = isEqual(day, today);\n  const isMonth = isEqualMonth(day, focusedDay);\n  const isFocused = isEqual(day, focusedDay);\n  const isOutsideRange = !inRange;\n  function handleClick(e) {\n    onDaySelect(e, day);\n  }\n  return (h(\"button\", { class: {\n      \"duet-date__day\": true,\n      \"is-outside\": isOutsideRange,\n      \"is-today\": isToday,\n      \"is-month\": isMonth,\n      \"is-disabled\": disabled,\n    }, tabIndex: isFocused ? 0 : -1, onClick: handleClick, onKeyDown: onKeyboardNavigation, \"aria-disabled\": disabled ? \"true\" : undefined, disabled: isOutsideRange, type: \"button\", \"aria-pressed\": isSelected ? \"true\" : \"false\", ref: el => {\n      if (isFocused && el && focusedDayRef) {\n        focusedDayRef(el);\n      }\n    } },\n    h(\"span\", { \"aria-hidden\": \"true\" }, day.getDate()),\n    h(\"span\", { class: \"duet-date__vhidden\" }, dateFormatter.format(day))));\n};\n\nfunction chunk(array, chunkSize) {\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n  return result;\n}\nfunction mapWithOffset(array, startingOffset, mapFn) {\n  return array.map((_, i) => {\n    const adjustedIndex = (i + startingOffset) % array.length;\n    return mapFn(array[adjustedIndex]);\n  });\n}\nconst DatePickerMonth = ({ selectedDate, focusedDate, labelledById, localization, firstDayOfWeek, min, max, dateFormatter, isDateDisabled, onDateSelect, onKeyboardNavigation, focusedDayRef, }) => {\n  const today = new Date();\n  const days = getViewOfMonth(focusedDate, firstDayOfWeek);\n  return (h(\"table\", { class: \"duet-date__table\", \"aria-labelledby\": labelledById },\n    h(\"thead\", null,\n      h(\"tr\", null, mapWithOffset(localization.dayNames, firstDayOfWeek, dayName => (h(\"th\", { class: \"duet-date__table-header\", scope: \"col\" },\n        h(\"span\", { \"aria-hidden\": \"true\" }, dayName.substr(0, 2)),\n        h(\"span\", { class: \"duet-date__vhidden\" }, dayName)))))),\n    h(\"tbody\", null, chunk(days, 7).map(week => (h(\"tr\", { class: \"duet-date__row\" }, week.map(day => (h(\"td\", { class: \"duet-date__cell\" },\n      h(DatePickerDay, { day: day, today: today, focusedDay: focusedDate, isSelected: isEqual(day, selectedDate), disabled: isDateDisabled(day), inRange: inRange(day, min, max), onDaySelect: onDateSelect, dateFormatter: dateFormatter, onKeyboardNavigation: onKeyboardNavigation, focusedDayRef: focusedDayRef }))))))))));\n};\n\nconst localization = {\n  buttonLabel: \"Choose date\",\n  placeholder: \"YYYY-MM-DD\",\n  selectedDateMessage: \"Selected date is\",\n  prevMonthLabel: \"Previous month\",\n  nextMonthLabel: \"Next month\",\n  monthSelectLabel: \"Month\",\n  yearSelectLabel: \"Year\",\n  closeLabel: \"Close window\",\n  calendarHeading: \"Choose a date\",\n  dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  monthNames: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n  monthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  locale: \"en-GB\",\n};\n\nconst isoAdapter = { parse: parseISODate, format: printISODate };\n\nconst duetDatePickerCss = \".duet-date *,.duet-date *::before,.duet-date *::after{box-sizing:border-box;margin:0;width:auto}.duet-date{box-sizing:border-box;color:var(--duet-color-text);display:block;font-family:var(--duet-font);margin:0;position:relative;text-align:left;width:100%}.duet-date__input{-webkit-appearance:none;appearance:none;background:var(--duet-color-surface);border:1px solid var(--duet-color-border, var(--duet-color-text));border-radius:var(--duet-radius);color:var(--duet-color-text);float:none;font-family:var(--duet-font);font-size:100%;line-height:normal;padding:14px 60px 14px 14px;width:100%}.duet-date__input:focus{border-color:var(--duet-color-primary);box-shadow:0 0 0 1px var(--duet-color-primary);outline:0}.duet-date__input::-webkit-input-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-moz-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-ms-input-placeholder{color:var(--duet-color-placeholder)}.duet-date__input-wrapper{position:relative;width:100%}.duet-date__toggle{-moz-appearance:none;-webkit-appearance:none;-webkit-user-select:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:0;border-bottom-right-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);box-shadow:inset 1px 0 0 rgba(0, 0, 0, 0.1);color:var(--duet-color-text);cursor:pointer;display:flex;height:calc(100% - 2px);justify-content:center;padding:0;position:absolute;right:1px;top:1px;user-select:none;width:48px;z-index:2}.duet-date__toggle:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__toggle-icon{display:flex;flex-basis:100%;justify-content:center;align-items:center}.duet-date__dialog{display:flex;left:0;min-width:320px;opacity:0;position:absolute;top:100%;transform:scale(0.96) translateZ(0) translateY(-20px);transform-origin:top right;transition:transform 300ms ease, opacity 300ms ease, visibility 300ms ease;visibility:hidden;width:100%;will-change:transform, opacity, visibility;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog{background:var(--duet-color-overlay);bottom:0;position:fixed;right:0;top:0;transform:translateZ(0);transform-origin:bottom center}}.duet-date__dialog.is-left{left:auto;right:0;width:auto}.duet-date__dialog.is-active{opacity:1;transform:scale(1.0001) translateZ(0) translateY(0);visibility:visible}.duet-date__dialog-content{background:var(--duet-color-surface);border:1px solid rgba(0, 0, 0, 0.1);border-radius:var(--duet-radius);box-shadow:0 4px 10px 0 rgba(0, 0, 0, 0.1);margin-left:auto;margin-top:8px;max-width:310px;min-width:290px;padding:16px 16px 20px;position:relative;transform:none;width:100%;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog-content{border:0;border-radius:0;border-top-left-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);bottom:0;left:0;margin:0;max-width:none;min-height:26em;opacity:0;padding:0 8% 20px;position:absolute;transform:translateZ(0) translateY(100%);transition:transform 400ms ease, opacity 400ms ease, visibility 400ms ease;visibility:hidden;will-change:transform, opacity, visibility}.is-active .duet-date__dialog-content{opacity:1;transform:translateZ(0) translateY(0);visibility:visible}}.duet-date__table{border-collapse:collapse;border-spacing:0;color:var(--duet-color-text);font-size:1rem;font-weight:var(--duet-font-normal);line-height:1.25;text-align:center;width:100%}.duet-date__table-header{font-size:0.75rem;font-weight:var(--duet-font-bold);letter-spacing:1px;line-height:1.25;padding-bottom:8px;text-decoration:none;text-transform:uppercase}.duet-date__cell{text-align:center}.duet-date__day{-moz-appearance:none;-webkit-appearance:none;appearance:none;background:transparent;border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-block;font-family:var(--duet-font);font-size:0.875rem;font-variant-numeric:tabular-nums;font-weight:var(--duet-font-normal);height:36px;line-height:1.25;padding:0 0 1px;position:relative;text-align:center;vertical-align:middle;width:36px;z-index:1}.duet-date__day.is-today{box-shadow:0 0 0 1px var(--duet-color-primary);position:relative;z-index:200}.duet-date__day:hover::before,.duet-date__day.is-today::before{background:var(--duet-color-primary);border-radius:50%;bottom:0;content:\\\"\\\";left:0;opacity:0.06;position:absolute;right:0;top:0}.duet-date__day[aria-pressed=true],.duet-date__day:focus{background:var(--duet-color-primary);box-shadow:none;color:var(--duet-color-text-active);outline:0}.duet-date__day:active{background:var(--duet-color-primary);box-shadow:0 0 5px var(--duet-color-primary);color:var(--duet-color-text-active);z-index:200}.duet-date__day:focus{box-shadow:0 0 5px var(--duet-color-primary);z-index:200}.duet-date__day:not(.is-month){box-shadow:none}.duet-date__day:not(.is-month),.duet-date__day[aria-disabled=true]{background:transparent;color:var(--duet-color-text);cursor:default;opacity:0.5}.duet-date__day[aria-disabled=true].is-today{box-shadow:0 0 0 1px var(--duet-color-primary)}.duet-date__day[aria-disabled=true].is-today:focus{box-shadow:0 0 5px var(--duet-color-primary);background:var(--duet-color-primary);color:var(--duet-color-text-active)}.duet-date__day[aria-disabled=true]:not(.is-today)::before{display:none}.duet-date__day.is-outside{background:var(--duet-color-button);box-shadow:none;color:var(--duet-color-text);cursor:default;opacity:0.6;pointer-events:none}.duet-date__day.is-outside::before{display:none}.duet-date__header{align-items:center;display:flex;justify-content:space-between;margin-bottom:16px;width:100%}.duet-date__nav{white-space:nowrap}.duet-date__prev,.duet-date__next{-moz-appearance:none;-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-flex;height:32px;justify-content:center;margin-left:8px;padding:0;transition:background-color 300ms ease;width:32px}@media (max-width: 35.9375em){.duet-date__prev,.duet-date__next{height:40px;width:40px}}.duet-date__prev:focus,.duet-date__next:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__prev:active:focus,.duet-date__next:active:focus{box-shadow:none}.duet-date__prev:disabled,.duet-date__next:disabled{cursor:default;opacity:0.5}.duet-date__prev svg,.duet-date__next svg{margin:0 auto}.duet-date__select{display:inline-flex;margin-top:4px;position:relative}.duet-date__select span{margin-right:4px}.duet-date__select select{cursor:pointer;font-size:1rem;height:100%;left:0;opacity:0;position:absolute;top:0;width:100%;z-index:2}.duet-date__select select:focus+.duet-date__select-label{box-shadow:0 0 0 2px var(--duet-color-primary)}.duet-date__select-label{align-items:center;border-radius:var(--duet-radius);color:var(--duet-color-text);display:flex;font-size:1.25rem;font-weight:var(--duet-font-bold);line-height:1.25;padding:0 4px 0 8px;pointer-events:none;position:relative;width:100%;z-index:1}.duet-date__select-label svg{width:16px;height:16px}.duet-date__mobile{align-items:center;border-bottom:1px solid rgba(0, 0, 0, 0.12);display:flex;justify-content:space-between;margin-bottom:20px;margin-left:-10%;overflow:hidden;padding:12px 20px;position:relative;text-overflow:ellipsis;white-space:nowrap;width:120%}@media (min-width: 36em){.duet-date__mobile{border:0;margin:0;overflow:visible;padding:0;position:absolute;right:-8px;top:-8px;width:auto}}.duet-date__mobile-heading{display:inline-block;font-weight:var(--duet-font-bold);max-width:84%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 36em){.duet-date__mobile-heading{display:none}}.duet-date__close{-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:flex;height:24px;justify-content:center;padding:0;width:24px}@media (min-width: 36em){.duet-date__close{opacity:0}}.duet-date__close:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:none}@media (min-width: 36em){.duet-date__close:focus{opacity:1}}.duet-date__close svg{margin:0 auto}.duet-date__vhidden{border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;padding:0;position:absolute;top:0;width:1px}\";\n\nfunction range(from, to) {\n  var result = [];\n  for (var i = from; i <= to; i++) {\n    result.push(i);\n  }\n  return result;\n}\nconst keyCode = {\n  TAB: 9,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\nfunction cleanValue(input, regex) {\n  const value = input.value;\n  const cursor = input.selectionStart;\n  const beforeCursor = value.slice(0, cursor);\n  const afterCursor = value.slice(cursor, value.length);\n  const filteredBeforeCursor = beforeCursor.replace(regex, \"\");\n  const filterAfterCursor = afterCursor.replace(regex, \"\");\n  const newValue = filteredBeforeCursor + filterAfterCursor;\n  const newCursor = filteredBeforeCursor.length;\n  input.value = newValue;\n  input.selectionStart = input.selectionEnd = newCursor;\n  return newValue;\n}\nconst DISALLOWED_CHARACTERS = /[^0-9\\.\\/\\-]+/g;\nconst TRANSITION_MS = 300;\nconst DuetDatePicker = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.duetChange = createEvent(this, \"duetChange\", 7);\n    this.duetBlur = createEvent(this, \"duetBlur\", 7);\n    this.duetFocus = createEvent(this, \"duetFocus\", 7);\n    this.duetOpen = createEvent(this, \"duetOpen\", 7);\n    this.duetClose = createEvent(this, \"duetClose\", 7);\n    /**\n     * Own Properties\n     */\n    this.monthSelectId = createIdentifier(\"DuetDateMonth\");\n    this.yearSelectId = createIdentifier(\"DuetDateYear\");\n    this.dialogLabelId = createIdentifier(\"DuetDateLabel\");\n    this.initialTouchX = null;\n    this.initialTouchY = null;\n    /**\n     * State() variables\n     */\n    this.activeFocus = false;\n    this.focusedDay = new Date();\n    this.open = false;\n    /**\n     * Public Property API\n     */\n    /**\n     * Name of the date picker input.\n     */\n    this.name = \"date\";\n    /**\n     * Adds a unique identifier for the date picker input. Use this instead of html `id` attribute.\n     */\n    this.identifier = \"\";\n    /**\n     * Makes the date picker input component disabled. This prevents users from being able to\n     * interact with the input, and conveys its inactive state to assistive technologies.\n     */\n    this.disabled = false;\n    /**\n     * Forces the opening direction of the calendar modal to be always left or right.\n     * This setting can be useful when the input is smaller than the opening date picker\n     * would be as by default the picker always opens towards right.\n     */\n    this.direction = \"right\";\n    /**\n     * Should the input be marked as required?\n     */\n    this.required = false;\n    /**\n     * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n     */\n    this.value = \"\";\n    /**\n     * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the max property.\n     */\n    this.min = \"\";\n    /**\n     * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the min property.\n     */\n    this.max = \"\";\n    /**\n     * Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\n     * Default is Monday.\n     */\n    this.firstDayOfWeek = DaysOfWeek.Monday;\n    /**\n     * Button labels, day names, month names, etc, used for localization.\n     * Default is English.\n     */\n    this.localization = localization;\n    /**\n     * Date adapter, for custom parsing/formatting.\n     * Must be object with a `parse` function which accepts a `string` and returns a `Date`,\n     * and a `format` function which accepts a `Date` and returns a `string`.\n     * Default is IS0-8601 parsing and formatting.\n     */\n    this.dateAdapter = isoAdapter;\n    /**\n     * Controls which days are disabled and therefore disallowed.\n     * For example, this can be used to disallow selection of weekends.\n     */\n    this.isDateDisabled = () => false;\n    /**\n     * Local methods.\n     */\n    this.enableActiveFocus = () => {\n      this.activeFocus = true;\n    };\n    this.disableActiveFocus = () => {\n      this.activeFocus = false;\n    };\n    this.toggleOpen = (e) => {\n      e.preventDefault();\n      this.open ? this.hide(false) : this.show();\n    };\n    this.handleEscKey = (event) => {\n      if (event.keyCode === keyCode.ESC) {\n        this.hide();\n      }\n    };\n    this.handleBlur = (event) => {\n      event.stopPropagation();\n      this.duetBlur.emit({\n        component: \"duet-date-picker\",\n      });\n    };\n    this.handleFocus = (event) => {\n      event.stopPropagation();\n      this.duetFocus.emit({\n        component: \"duet-date-picker\",\n      });\n    };\n    this.handleTouchStart = (event) => {\n      const touch = event.changedTouches[0];\n      this.initialTouchX = touch.pageX;\n      this.initialTouchY = touch.pageY;\n    };\n    this.handleTouchMove = (event) => {\n      event.preventDefault();\n    };\n    this.handleTouchEnd = (event) => {\n      const touch = event.changedTouches[0];\n      const distX = touch.pageX - this.initialTouchX; // get horizontal dist traveled\n      const distY = touch.pageY - this.initialTouchY; // get vertical dist traveled\n      const threshold = 70;\n      const isHorizontalSwipe = Math.abs(distX) >= threshold && Math.abs(distY) <= threshold;\n      const isDownwardsSwipe = Math.abs(distY) >= threshold && Math.abs(distX) <= threshold && distY > 0;\n      if (isHorizontalSwipe) {\n        this.addMonths(distX < 0 ? 1 : -1);\n      }\n      else if (isDownwardsSwipe) {\n        this.hide(false);\n        event.preventDefault();\n      }\n      this.initialTouchY = null;\n      this.initialTouchX = null;\n    };\n    this.handleNextMonthClick = (event) => {\n      event.preventDefault();\n      this.addMonths(1);\n    };\n    this.handlePreviousMonthClick = (event) => {\n      event.preventDefault();\n      this.addMonths(-1);\n    };\n    this.handleFirstFocusableKeydown = (event) => {\n      // this ensures focus is trapped inside the dialog\n      if (event.keyCode === keyCode.TAB && event.shiftKey) {\n        this.focusedDayNode.focus();\n        event.preventDefault();\n      }\n    };\n    this.handleKeyboardNavigation = (event) => {\n      // handle tab separately, since it needs to be treated\n      // differently to other keyboard interactions\n      if (event.keyCode === keyCode.TAB && !event.shiftKey) {\n        event.preventDefault();\n        this.firstFocusableElement.focus();\n        return;\n      }\n      var handled = true;\n      switch (event.keyCode) {\n        case keyCode.RIGHT:\n          this.addDays(1);\n          break;\n        case keyCode.LEFT:\n          this.addDays(-1);\n          break;\n        case keyCode.DOWN:\n          this.addDays(7);\n          break;\n        case keyCode.UP:\n          this.addDays(-7);\n          break;\n        case keyCode.PAGE_UP:\n          if (event.shiftKey) {\n            this.addYears(-1);\n          }\n          else {\n            this.addMonths(-1);\n          }\n          break;\n        case keyCode.PAGE_DOWN:\n          if (event.shiftKey) {\n            this.addYears(1);\n          }\n          else {\n            this.addMonths(1);\n          }\n          break;\n        case keyCode.HOME:\n          this.startOfWeek();\n          break;\n        case keyCode.END:\n          this.endOfWeek();\n          break;\n        default:\n          handled = false;\n      }\n      if (handled) {\n        event.preventDefault();\n        this.enableActiveFocus();\n      }\n    };\n    this.handleDaySelect = (_event, day) => {\n      const isInRange = inRange(day, parseISODate(this.min), parseISODate(this.max));\n      const isAllowed = !this.isDateDisabled(day);\n      if (isInRange && isAllowed) {\n        this.setValue(day);\n        this.hide();\n      }\n      else {\n        // for consistency we should set the focused day in cases where\n        // user has selected a day that has been specifically disallowed\n        this.setFocusedDay(day);\n      }\n    };\n    this.handleMonthSelect = e => {\n      this.setMonth(parseInt(e.target.value, 10));\n    };\n    this.handleYearSelect = e => {\n      this.setYear(parseInt(e.target.value, 10));\n    };\n    this.handleInputChange = () => {\n      const target = this.datePickerInput;\n      // clean up any invalid characters\n      cleanValue(target, DISALLOWED_CHARACTERS);\n      const parsed = this.dateAdapter.parse(target.value, createDate);\n      if (parsed || target.value === \"\") {\n        this.setValue(parsed);\n      }\n    };\n    this.processFocusedDayNode = (element) => {\n      this.focusedDayNode = element;\n      if (this.activeFocus && this.open) {\n        setTimeout(() => element.focus(), 0);\n      }\n    };\n  }\n  connectedCallback() {\n    this.createDateFormatters();\n  }\n  createDateFormatters() {\n    this.dateFormatShort = new Intl.DateTimeFormat(this.localization.locale, { day: \"numeric\", month: \"long\" });\n    this.dateFormatLong = new Intl.DateTimeFormat(this.localization.locale, {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\",\n    });\n  }\n  /**\n   * Component event handling.\n   */\n  handleDocumentClick(e) {\n    if (!this.open) {\n      return;\n    }\n    // the dialog and the button aren't considered clicks outside.\n    // dialog for obvious reasons, but the button needs to be skipped\n    // so that two things are possible:\n    //\n    // a) clicking again on the button when dialog is open should close the modal.\n    //    without skipping the button here, we would see a click outside\n    //    _and_ a click on the button, so the `open` state goes\n    //    open -> close (click outside) -> open (click button)\n    //\n    // b) clicking another date picker's button should close the current calendar\n    //    and open the new one. this means we can't stopPropagation() on the button itself\n    //\n    // this was the only satisfactory combination of things to get the above to work\n    const isClickOutside = e\n      .composedPath()\n      .every(node => node !== this.dialogWrapperNode && node !== this.datePickerButton);\n    if (isClickOutside) {\n      this.hide(false);\n    }\n  }\n  /**\n   * Public methods API\n   */\n  /**\n   * Sets focus on the date picker's input. Use this method instead of the global `focus()`.\n   */\n  async setFocus() {\n    return this.datePickerInput.focus();\n  }\n  /**\n   * Show the calendar modal, moving focus to the calendar inside.\n   */\n  async show() {\n    this.open = true;\n    this.duetOpen.emit({\n      component: \"duet-date-picker\",\n    });\n    this.setFocusedDay(parseISODate(this.value) || new Date());\n    clearTimeout(this.focusTimeoutId);\n    this.focusTimeoutId = setTimeout(() => this.monthSelectNode.focus(), TRANSITION_MS);\n  }\n  /**\n   * Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\n   * returning to the date picker's button. Default is true.\n   */\n  async hide(moveFocusToButton = true) {\n    this.open = false;\n    this.duetClose.emit({\n      component: \"duet-date-picker\",\n    });\n    // in cases where calendar is quickly shown and hidden\n    // we should avoid moving focus to the button\n    clearTimeout(this.focusTimeoutId);\n    if (moveFocusToButton) {\n      // iOS VoiceOver needs to wait for all transitions to finish.\n      setTimeout(() => this.datePickerButton.focus(), TRANSITION_MS + 200);\n    }\n  }\n  addDays(days) {\n    this.setFocusedDay(addDays(this.focusedDay, days));\n  }\n  addMonths(months) {\n    this.setMonth(this.focusedDay.getMonth() + months);\n  }\n  addYears(years) {\n    this.setYear(this.focusedDay.getFullYear() + years);\n  }\n  startOfWeek() {\n    this.setFocusedDay(startOfWeek(this.focusedDay, this.firstDayOfWeek));\n  }\n  endOfWeek() {\n    this.setFocusedDay(endOfWeek(this.focusedDay, this.firstDayOfWeek));\n  }\n  setMonth(month) {\n    const min = setMonth(startOfMonth(this.focusedDay), month);\n    const max = endOfMonth(min);\n    const date = setMonth(this.focusedDay, month);\n    this.setFocusedDay(clamp(date, min, max));\n  }\n  setYear(year) {\n    const min = setYear(startOfMonth(this.focusedDay), year);\n    const max = endOfMonth(min);\n    const date = setYear(this.focusedDay, year);\n    this.setFocusedDay(clamp(date, min, max));\n  }\n  setFocusedDay(day) {\n    this.focusedDay = clamp(day, parseISODate(this.min), parseISODate(this.max));\n  }\n  setValue(date) {\n    this.value = printISODate(date);\n    this.duetChange.emit({\n      component: \"duet-date-picker\",\n      value: this.value,\n      valueAsDate: date,\n    });\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n  render() {\n    const valueAsDate = parseISODate(this.value);\n    const formattedDate = valueAsDate && this.dateAdapter.format(valueAsDate);\n    const selectedYear = (valueAsDate || this.focusedDay).getFullYear();\n    const focusedMonth = this.focusedDay.getMonth();\n    const focusedYear = this.focusedDay.getFullYear();\n    const minDate = parseISODate(this.min);\n    const maxDate = parseISODate(this.max);\n    const prevMonthDisabled = minDate != null && minDate.getMonth() === focusedMonth && minDate.getFullYear() === focusedYear;\n    const nextMonthDisabled = maxDate != null && maxDate.getMonth() === focusedMonth && maxDate.getFullYear() === focusedYear;\n    const minYear = minDate ? minDate.getFullYear() : selectedYear - 10;\n    const maxYear = maxDate ? maxDate.getFullYear() : selectedYear + 10;\n    return (h(Host, null, h(\"div\", { class: \"duet-date\" }, h(DatePickerInput, { dateFormatter: this.dateFormatLong, value: this.value, valueAsDate: valueAsDate, formattedValue: formattedDate, onInput: this.handleInputChange, onBlur: this.handleBlur, onFocus: this.handleFocus, onClick: this.toggleOpen, name: this.name, disabled: this.disabled, role: this.role, required: this.required, identifier: this.identifier, localization: this.localization, buttonRef: element => (this.datePickerButton = element), inputRef: element => (this.datePickerInput = element) }), h(\"div\", { class: {\n        \"duet-date__dialog\": true,\n        \"is-left\": this.direction === \"left\",\n        \"is-active\": this.open,\n      }, role: \"dialog\", \"aria-modal\": \"true\", \"aria-hidden\": this.open ? \"false\" : \"true\", \"aria-labelledby\": this.dialogLabelId, onTouchMove: this.handleTouchMove, onTouchStart: this.handleTouchStart, onTouchEnd: this.handleTouchEnd }, h(\"div\", { class: \"duet-date__dialog-content\", onKeyDown: this.handleEscKey, ref: element => (this.dialogWrapperNode = element) }, h(\"div\", { class: \"duet-date__mobile\", onFocusin: this.disableActiveFocus }, h(\"label\", { class: \"duet-date__mobile-heading\" }, this.localization.calendarHeading), h(\"button\", { class: \"duet-date__close\", ref: element => (this.firstFocusableElement = element), onKeyDown: this.handleFirstFocusableKeydown, onClick: () => this.hide(), type: \"button\" }, h(\"svg\", { \"aria-hidden\": \"true\", fill: \"currentColor\", xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }, h(\"path\", { d: \"M0 0h24v24H0V0z\", fill: \"none\" }), h(\"path\", { d: \"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\" })), h(\"span\", { class: \"duet-date__vhidden\" }, this.localization.closeLabel))), h(\"div\", { class: \"duet-date__header\", onFocusin: this.disableActiveFocus }, h(\"div\", null, h(\"h2\", { id: this.dialogLabelId, class: \"duet-date__vhidden\", \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }, this.localization.monthNames[focusedMonth], \" \", this.focusedDay.getFullYear()), h(\"label\", { htmlFor: this.monthSelectId, class: \"duet-date__vhidden\" }, this.localization.monthSelectLabel), h(\"div\", { class: \"duet-date__select\" }, h(\"select\", { id: this.monthSelectId, class: \"duet-date__select--month\", ref: element => (this.monthSelectNode = element), onChange: this.handleMonthSelect }, this.localization.monthNames.map((month, i) => (h(\"option\", { key: month, value: i, selected: i === focusedMonth, disabled: !inRange(new Date(focusedYear, i, 1), minDate ? startOfMonth(minDate) : null, maxDate ? endOfMonth(maxDate) : null) }, month)))), h(\"div\", { class: \"duet-date__select-label\", \"aria-hidden\": \"true\" }, h(\"span\", null, this.localization.monthNamesShort[focusedMonth]), h(\"svg\", { fill: \"currentColor\", xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }, h(\"path\", { d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\" })))), h(\"label\", { htmlFor: this.yearSelectId, class: \"duet-date__vhidden\" }, this.localization.yearSelectLabel), h(\"div\", { class: \"duet-date__select\" }, h(\"select\", { id: this.yearSelectId, class: \"duet-date__select--year\", onChange: this.handleYearSelect }, range(minYear, maxYear).map(year => (h(\"option\", { key: year, selected: year === focusedYear }, year)))), h(\"div\", { class: \"duet-date__select-label\", \"aria-hidden\": \"true\" }, h(\"span\", null, this.focusedDay.getFullYear()), h(\"svg\", { fill: \"currentColor\", xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }, h(\"path\", { d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\" }))))), h(\"div\", { class: \"duet-date__nav\" }, h(\"button\", { class: \"duet-date__prev\", onClick: this.handlePreviousMonthClick, disabled: prevMonthDisabled, type: \"button\" }, h(\"svg\", { \"aria-hidden\": \"true\", fill: \"currentColor\", xmlns: \"http://www.w3.org/2000/svg\", width: \"21\", height: \"21\", viewBox: \"0 0 24 24\" }, h(\"path\", { d: \"M14.71 15.88L10.83 12l3.88-3.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.39.39-1.03 0-1.42z\" })), h(\"span\", { class: \"duet-date__vhidden\" }, this.localization.prevMonthLabel)), h(\"button\", { class: \"duet-date__next\", onClick: this.handleNextMonthClick, disabled: nextMonthDisabled, type: \"button\" }, h(\"svg\", { \"aria-hidden\": \"true\", fill: \"currentColor\", xmlns: \"http://www.w3.org/2000/svg\", width: \"21\", height: \"21\", viewBox: \"0 0 24 24\" }, h(\"path\", { d: \"M9.29 15.88L13.17 12 9.29 8.12c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0l4.59 4.59c.39.39.39 1.02 0 1.41L10.7 17.3c-.39.39-1.02.39-1.41 0-.38-.39-.39-1.03 0-1.42z\" })), h(\"span\", { class: \"duet-date__vhidden\" }, this.localization.nextMonthLabel)))), h(DatePickerMonth, { dateFormatter: this.dateFormatShort, selectedDate: valueAsDate, focusedDate: this.focusedDay, onDateSelect: this.handleDaySelect, onKeyboardNavigation: this.handleKeyboardNavigation, labelledById: this.dialogLabelId, localization: this.localization, firstDayOfWeek: this.firstDayOfWeek, focusedDayRef: this.processFocusedDayNode, min: minDate, max: maxDate, isDateDisabled: this.isDateDisabled }))))));\n  }\n  get element() { return this; }\n  static get watchers() { return {\n    \"localization\": [\"createDateFormatters\"]\n  }; }\n  static get style() { return duetDatePickerCss; }\n};\n\nconst DuetDatePicker$1 = /*@__PURE__*/proxyCustomElement(DuetDatePicker, [0,\"duet-date-picker\",{\"name\":[1],\"identifier\":[1],\"disabled\":[516],\"role\":[1],\"direction\":[1],\"required\":[4],\"value\":[1537],\"min\":[1],\"max\":[1],\"firstDayOfWeek\":[2,\"first-day-of-week\"],\"localization\":[16],\"dateAdapter\":[16],\"isDateDisabled\":[16],\"activeFocus\":[32],\"focusedDay\":[32],\"open\":[32]},[[6,\"click\",\"handleDocumentClick\"]]]);\nconst defineCustomElements = (opts) => {\n  if (typeof customElements !== 'undefined') {\n    [\n      DuetDatePicker$1\n    ].forEach(cmp => {\n      if (!customElements.get(cmp.is)) {\n        customElements.define(cmp.is, cmp, opts);\n      }\n    });\n  }\n};\n\nexport { DuetDatePicker$1 as DuetDatePicker, defineCustomElements };\n","import { DuetDatePicker } from '@duetds/date-picker/custom-element'\nimport { each } from '../utils.js'\n\nwindow.customElements.define('duet-date-picker', DuetDatePicker)\n\nexport const DEFAULTS = {\n  firstDayOfWeek: 1,\n  localization: {\n    buttonLabel: 'Välj datum',\n    placeholder: 'åååå-mm-dd',\n    selectedDateMessage: 'Valt datum',\n    prevMonthLabel: 'Föregående månad',\n    nextMonthLabel: 'Nästa månad',\n    monthSelectLabel: 'månad',\n    yearSelectLabel: 'år',\n    closeLabel: 'Stäng',\n    calendarHeading: 'Välj ett datum',\n    dayNames: ['söndag', 'måndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lördag'],\n    monthNames: [\n      'Januari',\n      'Februari',\n      'Mars',\n      'April',\n      'Maj',\n      'Juni',\n      'Juli',\n      'Augusti',\n      'September',\n      'Oktober',\n      'November',\n      'December'\n    ],\n    monthNamesShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'Maj',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Okt',\n      'Nov',\n      'Dec'\n    ],\n    locale: 'sv-SE'\n  }\n}\n\n/**\n * Initialize datepicker element\n * @param {HTMLInputElement} input The date input element\n * @param {object} [opts] Duet datepicker options\n * @returns {HTMLElement}\n */\nexport function datepicker(input, opts = input.dataset) {\n  const customEl = document.createElement('duet-date-picker')\n\n  if (input.id) customEl.setAttribute('identifier', input.id)\n\n  for (const { name, value } of input.attributes) {\n    if (name === 'type' || name === 'class') continue\n    customEl.setAttribute(name, value)\n  }\n\n  each(`[aria-controls=${input.id}]`, function (trigger) {\n    let isOpen = false\n\n    customEl.classList.add('is-grouped')\n\n    customEl.addEventListener('duetOpen', function onopen() {\n      isOpen = true\n      trigger.classList.add('active')\n    })\n\n    customEl.addEventListener('duetClose', function onclose() {\n      isOpen = false\n      trigger.classList.remove('active')\n    })\n\n    trigger.addEventListener('click', function () {\n      if (!isOpen) customEl.show()\n    })\n  })\n\n  Object.assign(customEl, DEFAULTS, opts)\n  input.replaceWith(customEl)\n\n  return customEl\n}\n"],"names":["r","t","e","n","o","i","a","c","s","p","d","u","h","l","register","FOCUSABLE","DEFAULTS","localization","placeholder","prevYearLabel","nextYearLabel","yearSelectLabel","closeLabel","calendarHeading","monthNames","monthNamesShort","monthpicker","input","opts","div","document","createElement","classList","add","open","update","props","render","_jsx","Monthpicker","close","onchange","value","dispatchEvent","window","CustomEvent","detail","onfocus","onclose","name","attributes","triggers","querySelectorAll","id","trigger","addEventListener","toggle","onclick","event","isConnected","removeEventListener","el","target","includes","parentNode","remove","replaceWith","onBlur","onblur","onChange","onClose","attrs","useState","Math","random","toString","substring","initial","useRef","root","select","focused","now","Date","isOpen","toBool","_setValue","parse","min","year","getFullYear","month","max","fallback","getMonth","selected","setSelected","setValue","next","current","str","stringify","addSelectedMonths","diff","floor","onkeydown","key","elements","filter","index","indexOf","shiftKey","length","focus","preventDefault","useEffect","autofocus","_jsxs","className","ref","onKeyDown","children","autoComplete","type","role","onClick","fill","xmlns","width","height","viewBox","htmlFor","Array","map","_","disabled","row","col","isSelected","isDisabled","tabIndex","getMonthForKey","values","split","Number","some","isNaN","JSON","slice","shadow","BUILD","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","renderingRef","queuePending","createTime","fnName","tagName","XLINK_NS","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","v","isComplexType","queryNonceMetaTagContent","doc","_a","_b","_c","nodeName","vnodeData","child","slotName","simple","lastSimple","vNodeChildren","walk","newVNode","classData","k","vdomFnUtils","vnode","tag","text","Host","isHost","node","cb","convertToPublic","convertToPrivate","computeMode","elm","modeResolutionChain","m","parsePropertyValue","propValue","propType","getElement","createEvent","flags","emitEvent","ev","plt","rootAppliedStyles","registerStyle","cssText","allowCS","style","styles","supportsConstructableStylesheets","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","appliedStyles","styleElm","nonce","attachStyles","hostRef","endAttachStyles","cmp","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","oldClasses","parseClassList","newClasses","prop","win","isComplex","xlink","parseClassListRegex","updateElement","oldVnode","newVnode","oldVnodeAttrs","newVnodeAttrs","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","putBackInOriginalLocation","recursive","oldSlotChildNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","updateFallbackSlotVisibility","childNodes","ilen","j","slotNameAttr","nodeType","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","relocateNode","nodeToRelocate","vNode","renderVdom","renderFnResults","rootVnode","propName","attribute","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","attachToAncestor","ancestorComponent","scheduleUpdate","isInitialLoad","writeTask","dispatchHooks","endSchedule","instance","promise","safeCall","then","updateComponent","endUpdate","endRender","callRender","postUpdateComponent","consoleError","endPostUpdate","method","arg","thenFn","getValue","getHostRef","newVal","oldVal","areBothNaN","watchMethods","watchMethodName","proxyComponent","Cstr","members","prototype","memberFlags","attrNameToPropName","attrName","_oldValue","initializeComponent","hmrVersionId","endRegisterStyles","fireConnectedCallback","connectedCallback","endConnected","addHostEventListeners","setContentReference","contentRefElm","disconnectedCallback","rmListener","proxyCustomElement","compactMeta","originalConnectedCallback","originalDisconnectedCallback","registerHost","listeners","attachParentListeners","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","methodName","supportsListenerOptions","hostRefs","eventName","listener","promiseResolve","queueDomReads","queueDomWrites","queueTask","queue","write","nextTick","flush","consume","ISO_DATE_FORMAT","DaysOfWeek","createDate","day","dayInt","monthInt","yearInt","parseISODate","matches","printISODate","date","y","isEqual","b","isEqualMonth","addDays","days","startOfWeek","firstDayOfWeek","endOfWeek","startOfMonth","endOfMonth","setMonth","setYear","inRange","clamp","time","getDaysInRange","start","end","getViewOfMonth","chr4","createIdentifier","prefix","DatePickerInput","dateFormatter","formattedValue","valueAsDate","identifier","required","buttonRef","inputRef","onInput","onFocus","DatePickerDay","focusedDay","today","onDaySelect","onKeyboardNavigation","focusedDayRef","isToday","isMonth","isFocused","isOutsideRange","handleClick","chunk","array","chunkSize","result","mapWithOffset","startingOffset","mapFn","adjustedIndex","DatePickerMonth","selectedDate","focusedDate","labelledById","isDateDisabled","onDateSelect","dayName","week","isoAdapter","duetDatePickerCss","range","from","to","keyCode","cleanValue","regex","cursor","beforeCursor","afterCursor","filteredBeforeCursor","filterAfterCursor","newCursor","DISALLOWED_CHARACTERS","TRANSITION_MS","DuetDatePicker","touch","distX","distY","threshold","isHorizontalSwipe","isDownwardsSwipe","handled","_event","isInRange","isAllowed","parsed","element","moveFocusToButton","months","years","formattedDate","selectedYear","focusedMonth","focusedYear","minDate","maxDate","prevMonthDisabled","nextMonthDisabled","minYear","maxYear","DuetDatePicker$1","customElements","define","buttonLabel","selectedDateMessage","prevMonthLabel","nextMonthLabel","monthSelectLabel","dayNames","locale","datepicker","dataset","customEl","setAttribute","each","show","Object","assign"],"mappings":"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","x_google_ignoreList":[0,2,3,4]}