{"version":3,"file":"callout.stories-20e0c903.js","sources":["../../src/docs/Callout/callout.html?raw","../../node_modules/vivus/dist/vivus.js","../../src/docs/Callout/callout.js"],"sourcesContent":["export default \"<aside class=\\\"callout\\\">\\n  <div class=\\\"callout-figure\\\">\\n    <svg data-draw=\\\"\\\" width=\\\"27px\\\" height=\\\"27px\\\" viewBox=\\\"0 0 27 27\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n      <polyline id=\\\"Path-2656\\\" fill=\\\"none\\\" stroke-width=\\\"4\\\" stroke=\\\"#E30613\\\" points=\\\"3 27 3 3 27 3\\\"></polyline>\\n    </svg>\\n  </div>\\n  <h3 class=\\\"callout-title\\\">The more you knowâ€¦</h3>\\n  <p class=\\\"callout-text\\\">\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In nunc augue, porta eu molestie id, rhoncus eu risus. Etiam rhoncus vitae libero vulputate ornare. Praesent urna mauris, egestas sed lacinia vitae, tincidunt id turpis.\\n  </p>\\n</aside>\\n\"","/**\n * vivus - JavaScript library to make drawing animation on SVG\n * @version v0.4.6\n * @link https://github.com/maxwellito/vivus\n * @license MIT\n */\n\n(function () {\n\n  'use strict';\n\n/**\n * Pathformer\n * Beta version\n *\n * Take any SVG version 1.1 and transform\n * child elements to 'path' elements\n *\n * This code is purely forked from\n * https://github.com/Waest/SVGPathConverter\n */\n\n/**\n * Class constructor\n *\n * @param {DOM|String} element Dom element of the SVG or id of it\n */\nfunction Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Pathformer [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  if (element instanceof window.SVGElement || \n      element instanceof window.SVGGElement ||\n      /^svg$/i.test(element.nodeName)) {\n    this.el = element;\n  } else {\n    throw new Error('Pathformer [constructor]: \"element\" parameter must be a string or a SVGelement');\n  }\n\n  // Start\n  this.scan(element);\n}\n\n/**\n * List of tags which can be transformed\n * to path elements\n *\n * @type {Array}\n */\nPathformer.prototype.TYPES = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect'];\n\n/**\n * List of attribute names which contain\n * data. This array list them to check if\n * they contain bad values, like percentage.\n *\n * @type {Array}\n */\nPathformer.prototype.ATTR_WATCH = ['cx', 'cy', 'points', 'r', 'rx', 'ry', 'x', 'x1', 'x2', 'y', 'y1', 'y2'];\n\n/**\n * Finds the elements compatible for transform\n * and apply the liked method\n *\n * @param  {object} options Object from the constructor\n */\nPathformer.prototype.scan = function (svg) {\n  var fn, element, pathData, pathDom,\n      elements = svg.querySelectorAll(this.TYPES.join(','));\n\n  for (var i = 0; i < elements.length; i++) {\n    element = elements[i];\n    fn = this[element.tagName.toLowerCase() + 'ToPath'];\n    pathData = fn(this.parseAttr(element.attributes));\n    pathDom = this.pathMaker(element, pathData);\n    element.parentNode.replaceChild(pathDom, element);\n  }\n};\n\n\n/**\n * Read `line` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Line element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.lineToPath = function (element) {\n  var newElement = {},\n      x1 = element.x1 || 0,\n      y1 = element.y1 || 0,\n      x2 = element.x2 || 0,\n      y2 = element.y2 || 0;\n\n  newElement.d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n  return newElement;\n};\n\n/**\n * Read `rect` element to extract and transform\n * data, to make it ready for a `path` object.\n * The radius-border is not taken in charge yet.\n * (your help is more than welcomed)\n *\n * @param  {DOMelement} element Rect element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\n\n  if (element.rx || element.ry) {\n    var rx = parseInt(element.rx, 10) || -1,\n        ry = parseInt(element.ry, 10) || -1;\n    rx = Math.min(Math.max(rx < 0 ? ry : rx, 0), width/2);\n    ry = Math.min(Math.max(ry < 0 ? rx : ry, 0), height/2);\n\n    newElement.d = 'M ' + (x + rx) + ',' + y + ' ' +\n                   'L ' + (x + width - rx) + ',' + y + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ' +\n                   'L ' + (x + width) + ',' + (y + height - ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ' +\n                   'L ' + (x + rx) + ',' + (y + height) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ' +\n                   'L ' + x + ',' + (y + ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  }\n  else {\n    newElement.d = 'M' + x + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + (y + height) + ' ' +\n                   'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n\n/**\n * Read `polyline` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Polyline element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polylineToPath = function (element) {\n  var newElement = {},\n      points = element.points.trim().split(' '),\n      i, path;\n\n  // Reformatting if points are defined without commas\n  if (element.points.indexOf(',') === -1) {\n    var formattedPoints = [];\n    for (i = 0; i < points.length; i+=2) {\n      formattedPoints.push(points[i] + ',' + points[i+1]);\n    }\n    points = formattedPoints;\n  }\n\n  // Generate the path.d value\n  path = 'M' + points[0];\n  for(i = 1; i < points.length; i++) {\n    if (points[i].indexOf(',') !== -1) {\n      path += 'L' + points[i];\n    }\n  }\n  newElement.d = path;\n  return newElement;\n};\n\n/**\n * Read `polygon` element to extract and transform\n * data, to make it ready for a `path` object.\n * This method rely on polylineToPath, because the\n * logic is similar. The path created is just closed,\n * so it needs an 'Z' at the end.\n *\n * @param  {DOMelement} element Polygon element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polygonToPath = function (element) {\n  var newElement = Pathformer.prototype.polylineToPath(element);\n\n  newElement.d += 'Z';\n  return newElement;\n};\n\n/**\n * Read `ellipse` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element ellipse element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.ellipseToPath = function (element) {\n  var newElement = {},\n      rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - rx,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(rx),\n      endY = cy;\n\n  newElement.d = 'M' + startX + ',' + startY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + endX + ',' + endY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Read `circle` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Circle element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.circleToPath = function (element) {\n  var newElement = {},\n      r  = parseFloat(element.r)  || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - r,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(r),\n      endY = cy;\n      \n  newElement.d =  'M' + startX + ',' + startY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + endX + ',' + endY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Create `path` elements form original element\n * and prepared objects\n *\n * @param  {DOMelement} element  Original element to transform\n * @param  {object} pathData     Path data (from `toPath` methods)\n * @return {DOMelement}          Path element\n */\nPathformer.prototype.pathMaker = function (element, pathData) {\n  var i, attr, pathTag = document.createElementNS('http://www.w3.org/2000/svg','path');\n  for(i = 0; i < element.attributes.length; i++) {\n    attr = element.attributes[i];\n    if (this.ATTR_WATCH.indexOf(attr.name) === -1) {\n      pathTag.setAttribute(attr.name, attr.value);\n    }\n  }\n  for(i in pathData) {\n    pathTag.setAttribute(i, pathData[i]);\n  }\n  return pathTag;\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of attribute => value\n *\n * @param  {NamedNodeMap} attributes Attributes object from DOM element to parse\n * @return {object}                  Object of attributes\n */\nPathformer.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  for (var i = 0; i < element.length; i++) {\n    attr = element[i];\n    // Check if no data attribute contains '%', or the transformation is impossible\n    if (this.ATTR_WATCH.indexOf(attr.name) !== -1 && attr.value.indexOf('%') !== -1) {\n      throw new Error('Pathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into \\'path\\' tags. Please use \\'viewBox\\'.');\n    }\n    output[attr.name] = attr.value;\n  }\n  return output;\n};\n\n  'use strict';\n\nvar setupEnv, requestAnimFrame, cancelAnimFrame, parsePositiveInt;\n\n/**\n * Vivus\n * Beta version\n *\n * Take any SVG and make the animation\n * to give give the impression of live drawing\n *\n * This in more than just inspired from codrops\n * At that point, it's a pure fork.\n */\n\n/**\n * Class constructor\n * option structure\n *   type: 'delayed'|'sync'|'oneByOne'|'script' (to know if the items must be drawn synchronously or not, default: delayed)\n *   duration: <int> (in frames)\n *   start: 'inViewport'|'manual'|'autostart' (start automatically the animation, default: inViewport)\n *   delay: <int> (delay between the drawing of first and last path)\n *   dashGap <integer> whitespace extra margin between dashes\n *   pathTimingFunction <function> timing animation function for each path element of the SVG\n *   animTimingFunction <function> timing animation function for the complete SVG\n *   forceRender <boolean> force the browser to re-render all updated path items\n *   selfDestroy <boolean> removes all extra styling on the SVG, and leaves it as original\n *\n * The attribute 'type' is by default on 'delayed'.\n *  - 'delayed'\n *    all paths are draw at the same time but with a\n *    little delay between them before start\n *  - 'sync'\n *    all path are start and finish at the same time\n *  - 'oneByOne'\n *    only one path is draw at the time\n *    the end of the first one will trigger the draw\n *    of the next one\n *\n * All these values can be overwritten individually\n * for each path item in the SVG\n * The value of frames will always take the advantage of\n * the duration value.\n * If you fail somewhere, an error will be thrown.\n * Good luck.\n *\n * @constructor\n * @this {Vivus}\n * @param {DOM|String}   element  Dom element of the SVG or id of it\n * @param {Object}       options  Options about the animation\n * @param {Function}     callback Callback for the end of the animation\n */\nfunction Vivus(element, options, callback) {\n  setupEnv();\n\n  // Setup\n  this.isReady = false;\n  this.setElement(element, options);\n  this.setOptions(options);\n  this.setCallback(callback);\n\n  if (this.isReady) {\n    this.init();\n  }\n}\n\n/**\n * Timing functions\n **************************************\n *\n * Default functions to help developers.\n * It always take a number as parameter (between 0 to 1) then\n * return a number (between 0 and 1)\n */\nVivus.LINEAR = function(x) {\n  return x;\n};\nVivus.EASE = function(x) {\n  return -Math.cos(x * Math.PI) / 2 + 0.5;\n};\nVivus.EASE_OUT = function(x) {\n  return 1 - Math.pow(1 - x, 3);\n};\nVivus.EASE_IN = function(x) {\n  return Math.pow(x, 3);\n};\nVivus.EASE_OUT_BOUNCE = function(x) {\n  var base = -Math.cos(x * (0.5 * Math.PI)) + 1,\n    rate = Math.pow(base, 1.5),\n    rateR = Math.pow(1 - x, 2),\n    progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI))) + 1;\n  return 1 - rateR + progress * rateR;\n};\n\n/**\n * Setters\n **************************************\n */\n\n/**\n * Check and set the element in the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param {DOM|String}   element  SVG Dom element or id of it\n */\nVivus.prototype.setElement = function(element, options) {\n  var onLoad, self;\n\n  // Basic check\n  if (typeof element === 'undefined') {\n    throw new Error('Vivus [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error(\n        'Vivus [constructor]: \"element\" parameter is not related to an existing ID'\n      );\n    }\n  }\n  this.parentEl = element;\n\n  // Load the SVG with XMLHttpRequest and extract the SVG\n  if (options && options.file) {\n    self = this;\n    onLoad = function() {\n      var domSandbox = document.createElement('div');\n      domSandbox.innerHTML = this.responseText;\n\n      var svgTag = domSandbox.querySelector('svg');\n      if (!svgTag) {\n        throw new Error(\n          'Vivus [load]: Cannot find the SVG in the loaded file : ' +\n            options.file\n        );\n      }\n\n      self.el = svgTag;\n      self.el.setAttribute('width', '100%');\n      self.el.setAttribute('height', '100%');\n      self.parentEl.appendChild(self.el);\n      self.isReady = true;\n      self.init();\n      self = null;\n    };\n\n    var oReq = new window.XMLHttpRequest();\n    oReq.addEventListener('load', onLoad);\n    oReq.open('GET', options.file);\n    oReq.send();\n    return;\n  }\n\n  switch (element.constructor) {\n    case window.SVGSVGElement:\n    case window.SVGElement:\n    case window.SVGGElement:\n      this.el = element;\n      this.isReady = true;\n      break;\n\n    case window.HTMLObjectElement:\n      self = this;\n      onLoad = function(e) {\n        if (self.isReady) {\n          return;\n        }\n        self.el =\n          element.contentDocument &&\n          element.contentDocument.querySelector('svg');\n        if (!self.el && e) {\n          throw new Error(\n            'Vivus [constructor]: object loaded does not contain any SVG'\n          );\n        } else if (self.el) {\n          if (element.getAttribute('built-by-vivus')) {\n            self.parentEl.insertBefore(self.el, element);\n            self.parentEl.removeChild(element);\n            self.el.setAttribute('width', '100%');\n            self.el.setAttribute('height', '100%');\n          }\n          self.isReady = true;\n          self.init();\n          self = null;\n        }\n      };\n\n      if (!onLoad()) {\n        element.addEventListener('load', onLoad);\n      }\n      break;\n\n    default:\n      throw new Error(\n        'Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)'\n      );\n  }\n};\n\n/**\n * Set up user option to the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {object} options Object from the constructor\n */\nVivus.prototype.setOptions = function(options) {\n  var allowedTypes = [\n    'delayed',\n    'sync',\n    'async',\n    'nsync',\n    'oneByOne',\n    'scenario',\n    'scenario-sync'\n  ];\n  var allowedStarts = ['inViewport', 'manual', 'autostart'];\n\n  // Basic check\n  if (options !== undefined && options.constructor !== Object) {\n    throw new Error(\n      'Vivus [constructor]: \"options\" parameter must be an object'\n    );\n  } else {\n    options = options || {};\n  }\n\n  // Set the animation type\n  if (options.type && allowedTypes.indexOf(options.type) === -1) {\n    throw new Error(\n      'Vivus [constructor]: ' +\n        options.type +\n        ' is not an existing animation `type`'\n    );\n  } else {\n    this.type = options.type || allowedTypes[0];\n  }\n\n  // Set the start type\n  if (options.start && allowedStarts.indexOf(options.start) === -1) {\n    throw new Error(\n      'Vivus [constructor]: ' +\n        options.start +\n        ' is not an existing `start` option'\n    );\n  } else {\n    this.start = options.start || allowedStarts[0];\n  }\n\n  this.isIE =\n    window.navigator.userAgent.indexOf('MSIE') !== -1 ||\n    window.navigator.userAgent.indexOf('Trident/') !== -1 ||\n    window.navigator.userAgent.indexOf('Edge/') !== -1;\n  this.duration = parsePositiveInt(options.duration, 120);\n  this.delay = parsePositiveInt(options.delay, null);\n  this.dashGap = parsePositiveInt(options.dashGap, 1);\n  this.forceRender = options.hasOwnProperty('forceRender')\n    ? !!options.forceRender\n    : this.isIE;\n  this.reverseStack = !!options.reverseStack;\n  this.selfDestroy = !!options.selfDestroy;\n  this.onReady = options.onReady;\n  this.map = [];\n  this.frameLength = this.currentFrame = this.delayUnit = this.speed = this.handle = null;\n\n  this.ignoreInvisible = options.hasOwnProperty('ignoreInvisible')\n    ? !!options.ignoreInvisible\n    : false;\n\n  this.animTimingFunction = options.animTimingFunction || Vivus.LINEAR;\n  this.pathTimingFunction = options.pathTimingFunction || Vivus.LINEAR;\n\n  if (this.delay >= this.duration) {\n    throw new Error('Vivus [constructor]: delay must be shorter than duration');\n  }\n};\n\n/**\n * Set up callback to the instance\n * The method will not return enything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {Function} callback Callback for the animation end\n */\nVivus.prototype.setCallback = function(callback) {\n  // Basic check\n  if (!!callback && callback.constructor !== Function) {\n    throw new Error(\n      'Vivus [constructor]: \"callback\" parameter must be a function'\n    );\n  }\n  this.callback = callback || function() {};\n};\n\n/**\n * Core\n **************************************\n */\n\n/**\n * Map the svg, path by path.\n * The method return nothing, it just fill the\n * `map` array. Each item in this array represent\n * a path element from the SVG, with informations for\n * the animation.\n *\n * ```\n * [\n *   {\n *     el: <DOMobj> the path element\n *     length: <number> length of the path line\n *     startAt: <number> time start of the path animation (in frames)\n *     duration: <number> path animation duration (in frames)\n *   },\n *   ...\n * ]\n * ```\n *\n */\nVivus.prototype.mapping = function() {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint, scale, hasNonScale;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\n  hasNonScale = false;\n\n  for (i = 0; i < paths.length; i++) {\n    path = paths[i];\n    if (this.isInvisible(path)) {\n      continue;\n    }\n\n    pathObj = {\n      el: path,\n      length: 0,\n      startAt: 0,\n      duration: 0,\n      isResizeSensitive: false\n    };\n\n    // If vector effect is non-scaling-stroke, the total length won't match the rendered length\n    // so we need to calculate the scale and apply it\n    if (path.getAttribute('vector-effect') === 'non-scaling-stroke') {\n      var rect = path.getBoundingClientRect();\n      var box = path.getBBox();\n      scale = Math.max(rect.width / box.width, rect.height / box.height);\n      pathObj.isResizeSensitive = true;\n      hasNonScale = true;\n    } else {\n      scale = 1;\n    }\n    pathObj.length = Math.ceil(path.getTotalLength() * scale);\n\n    // Test if the path length is correct\n    if (isNaN(pathObj.length)) {\n      if (window.console && console.warn) {\n        console.warn(\n          'Vivus [mapping]: cannot retrieve a path element length',\n          path\n        );\n      }\n      continue;\n    }\n    this.map.push(pathObj);\n    path.style.strokeDasharray =\n      pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n    pathObj.length += this.dashGap;\n    totalLength += pathObj.length;\n\n    this.renderPath(i);\n  }\n\n  // Show a warning for non-scaling elements\n  if (hasNonScale) {\n    console.warn('Vivus: this SVG contains non-scaling-strokes. You should call instance.recalc() when the SVG is resized or you will encounter unwanted behaviour. See https://github.com/maxwellito/vivus#non-scaling for more info.');\n  }\n\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\n\n  // Reverse stack if asked\n  if (this.reverseStack) {\n    this.map.reverse();\n  }\n\n  for (i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n\n    switch (this.type) {\n      case 'delayed':\n        pathObj.startAt = this.delayUnit * i;\n        pathObj.duration = this.duration - this.delay;\n        break;\n\n      case 'oneByOne':\n        pathObj.startAt = (lengthMeter / totalLength) * this.duration;\n        pathObj.duration = (pathObj.length / totalLength) * this.duration;\n        break;\n\n      case 'sync':\n      case 'async':\n      case 'nsync':\n        pathObj.startAt = 0;\n        pathObj.duration = this.duration;\n        break;\n\n      case 'scenario-sync':\n        path = pathObj.el;\n        pAttrs = this.parseAttr(path);\n        pathObj.startAt =\n          timePoint +\n          (parsePositiveInt(pAttrs['data-delay'], this.delayUnit) || 0);\n        pathObj.duration = parsePositiveInt(\n          pAttrs['data-duration'],\n          this.duration\n        );\n        timePoint =\n          pAttrs['data-async'] !== undefined\n            ? pathObj.startAt\n            : pathObj.startAt + pathObj.duration;\n        this.frameLength = Math.max(\n          this.frameLength,\n          pathObj.startAt + pathObj.duration\n        );\n        break;\n\n      case 'scenario':\n        path = pathObj.el;\n        pAttrs = this.parseAttr(path);\n        pathObj.startAt =\n          parsePositiveInt(pAttrs['data-start'], this.delayUnit) || 0;\n        pathObj.duration = parsePositiveInt(\n          pAttrs['data-duration'],\n          this.duration\n        );\n        this.frameLength = Math.max(\n          this.frameLength,\n          pathObj.startAt + pathObj.duration\n        );\n        break;\n    }\n    lengthMeter += pathObj.length;\n    this.frameLength = this.frameLength || this.duration;\n  }\n};\n\n/**\n * Public method to re-evaluate line length for non-scaling lines\n * path elements.\n */\nVivus.prototype.recalc = function () {\n  if (this.mustRecalcScale) {\n    return;\n  }\n  this.mustRecalcScale = requestAnimFrame(function () {\n    this.performLineRecalc();\n  }.bind(this));\n}\n\n/**\n * Private method to re-evaluate line length on non-scaling\n * path elements. Then call for a trace to update the SVG. \n */\nVivus.prototype.performLineRecalc = function () {\n  var pathObj, path, rect, box, scale;\n  for (var i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n    if (pathObj.isResizeSensitive) {\n      path = pathObj.el;\n      rect = path.getBoundingClientRect();\n      box = path.getBBox();\n      scale = Math.max(rect.width / box.width, rect.height / box.height);\n      pathObj.length = Math.ceil(path.getTotalLength() * scale);\n      path.style.strokeDasharray = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    }\n  }\n  this.trace();\n  this.mustRecalcScale = null;\n}\n\n/**\n * Interval method to draw the SVG from current\n * position of the animation. It update the value of\n * `currentFrame` and re-trace the SVG.\n *\n * It use this.handle to store the requestAnimationFrame\n * and clear it one the animation is stopped. So this\n * attribute can be used to know if the animation is\n * playing.\n *\n * Once the animation at the end, this method will\n * trigger the Vivus callback.\n *\n */\nVivus.prototype.draw = function() {\n  var self = this;\n  this.currentFrame += this.speed;\n\n  if (this.currentFrame <= 0) {\n    this.stop();\n    this.reset();\n  } else if (this.currentFrame >= this.frameLength) {\n    this.stop();\n    this.currentFrame = this.frameLength;\n    this.trace();\n    if (this.selfDestroy) {\n      this.destroy();\n    }\n  } else {\n    this.trace();\n    this.handle = requestAnimFrame(function() {\n      self.draw();\n    });\n    return;\n  }\n\n  this.callback(this);\n  if (this.instanceCallback) {\n    this.instanceCallback(this);\n    this.instanceCallback = null;\n  }\n};\n\n/**\n * Draw the SVG at the current instant from the\n * `currentFrame` value. Here is where most of the magic is.\n * The trick is to use the `strokeDashoffset` style property.\n *\n * For optimisation reasons, a new property called `progress`\n * is added in each item of `map`. This one contain the current\n * progress of the path element. Only if the new value is different\n * the new value will be applied to the DOM element. This\n * method save a lot of resources to re-render the SVG. And could\n * be improved if the animation couldn't be played forward.\n *\n */\nVivus.prototype.trace = function() {\n  var i, progress, path, currentFrame;\n  currentFrame =\n    this.animTimingFunction(this.currentFrame / this.frameLength) *\n    this.frameLength;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    progress = (currentFrame - path.startAt) / path.duration;\n    progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n    if (path.progress !== progress) {\n      path.progress = progress;\n      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n      this.renderPath(i);\n    }\n  }\n};\n\n/**\n * Method forcing the browser to re-render a path element\n * from it's index in the map. Depending on the `forceRender`\n * value.\n * The trick is to replace the path element by it's clone.\n * This practice is not recommended because it's asking more\n * ressources, too much DOM manupulation..\n * but it's the only way to let the magic happen on IE.\n * By default, this fallback is only applied on IE.\n *\n * @param  {Number} index Path index\n */\nVivus.prototype.renderPath = function(index) {\n  if (this.forceRender && this.map && this.map[index]) {\n    var pathObj = this.map[index],\n      newPath = pathObj.el.cloneNode(true);\n    pathObj.el.parentNode.replaceChild(newPath, pathObj.el);\n    pathObj.el = newPath;\n  }\n};\n\n/**\n * When the SVG object is loaded and ready,\n * this method will continue the initialisation.\n *\n * This this mainly due to the case of passing an\n * object tag in the constructor. It will wait\n * the end of the loading to initialise.\n *\n */\nVivus.prototype.init = function() {\n  // Set object variables\n  this.frameLength = 0;\n  this.currentFrame = 0;\n  this.map = [];\n\n  // Start\n  new Pathformer(this.el);\n  this.mapping();\n  this.starter();\n\n  if (this.onReady) {\n    this.onReady(this);\n  }\n};\n\n/**\n * Trigger to start of the animation.\n * Depending on the `start` value, a different script\n * will be applied.\n *\n * If the `start` value is not valid, an error will be thrown.\n * Even if technically, this is impossible.\n *\n */\nVivus.prototype.starter = function() {\n  switch (this.start) {\n    case 'manual':\n      return;\n\n    case 'autostart':\n      this.play();\n      break;\n\n    case 'inViewport':\n      var self = this,\n        listener = function() {\n          if (self.isInViewport(self.parentEl, 1)) {\n            self.play();\n            window.removeEventListener('scroll', listener);\n          }\n        };\n      window.addEventListener('scroll', listener);\n      listener();\n      break;\n  }\n};\n\n/**\n * Controls\n **************************************\n */\n\n/**\n * Get the current status of the animation between\n * three different states: 'start', 'progress', 'end'.\n * @return {string} Instance status\n */\nVivus.prototype.getStatus = function() {\n  return this.currentFrame === 0\n    ? 'start'\n    : this.currentFrame === this.frameLength\n    ? 'end'\n    : 'progress';\n};\n\n/**\n * Reset the instance to the initial state : undraw\n * Be careful, it just reset the animation, if you're\n * playing the animation, this won't stop it. But just\n * make it start from start.\n *\n */\nVivus.prototype.reset = function() {\n  return this.setFrameProgress(0);\n};\n\n/**\n * Set the instance to the final state : drawn\n * Be careful, it just set the animation, if you're\n * playing the animation on rewind, this won't stop it.\n * But just make it start from the end.\n *\n */\nVivus.prototype.finish = function() {\n  return this.setFrameProgress(1);\n};\n\n/**\n * Set the level of progress of the drawing.\n *\n * @param {number} progress Level of progress to set\n */\nVivus.prototype.setFrameProgress = function(progress) {\n  progress = Math.min(1, Math.max(0, progress));\n  this.currentFrame = Math.round(this.frameLength * progress);\n  this.trace();\n  return this;\n};\n\n/**\n * Play the animation at the desired speed.\n * Speed must be a valid number (no zero).\n * By default, the speed value is 1.\n * But a negative value is accepted to go forward.\n *\n * And works with float too.\n * But don't forget we are in JavaScript, se be nice\n * with him and give him a 1/2^x value.\n *\n * @param  {number} speed Animation speed [optional]\n */\nVivus.prototype.play = function(speed, callback) {\n  this.instanceCallback = null;\n\n  if (speed && typeof speed === 'function') {\n    this.instanceCallback = speed; // first parameter is actually the callback function\n    speed = null;\n  } else if (speed && typeof speed !== 'number') {\n    throw new Error('Vivus [play]: invalid speed');\n  }\n  // if the first parameter wasn't the callback, check if the seconds was\n  if (callback && typeof callback === 'function' && !this.instanceCallback) {\n    this.instanceCallback = callback;\n  }\n\n  this.speed = speed || 1;\n  if (!this.handle) {\n    this.draw();\n  }\n  return this;\n};\n\n/**\n * Stop the current animation, if on progress.\n * Should not trigger any error.\n *\n */\nVivus.prototype.stop = function() {\n  if (this.handle) {\n    cancelAnimFrame(this.handle);\n    this.handle = null;\n  }\n  return this;\n};\n\n/**\n * Destroy the instance.\n * Remove all bad styling attributes on all\n * path tags\n *\n */\nVivus.prototype.destroy = function() {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\n\n/**\n * Utils methods\n * include methods from Codrops\n **************************************\n */\n\n/**\n * Method to best guess if a path should added into\n * the animation or not.\n *\n * 1. Use the `data-vivus-ignore` attribute if set\n * 2. Check if the instance must ignore invisible paths\n * 3. Check if the path is visible\n *\n * For now the visibility checking is unstable.\n * It will be used for a beta phase.\n *\n * Other improvments are planned. Like detecting\n * is the path got a stroke or a valid opacity.\n */\nVivus.prototype.isInvisible = function(el) {\n  var rect,\n    ignoreAttr = el.getAttribute('data-ignore');\n\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\n\n  if (this.ignoreInvisible) {\n    rect = el.getBoundingClientRect();\n    return !rect.width && !rect.height;\n  } else {\n    return false;\n  }\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of {attributeName => attributeValue}\n *\n * @param  {object} element DOM element to parse\n * @return {object}         Object of attributes\n */\nVivus.prototype.parseAttr = function(element) {\n  var attr,\n    output = {};\n  if (element && element.attributes) {\n    for (var i = 0; i < element.attributes.length; i++) {\n      attr = element.attributes[i];\n      output[attr.name] = attr.value;\n    }\n  }\n  return output;\n};\n\n/**\n * Reply if an element is in the page viewport\n *\n * @param  {object} el Element to observe\n * @param  {number} h  Percentage of height\n * @return {boolean}\n */\nVivus.prototype.isInViewport = function(el, h) {\n  var scrolled = this.scrollY(),\n    viewed = scrolled + this.getViewportH(),\n    elBCR = el.getBoundingClientRect(),\n    elHeight = elBCR.height,\n    elTop = scrolled + elBCR.top,\n    elBottom = elTop + elHeight;\n\n  // if 0, the element is considered in the viewport as soon as it enters.\n  // if 1, the element is considered in the viewport only when it's fully inside\n  // value in percentage (1 >= h >= 0)\n  h = h || 0;\n\n  return elTop + elHeight * h <= viewed && elBottom >= scrolled;\n};\n\n/**\n * Get the viewport height in pixels\n *\n * @return {integer} Viewport height\n */\nVivus.prototype.getViewportH = function() {\n  var client = this.docElem.clientHeight,\n    inner = window.innerHeight;\n\n  if (client < inner) {\n    return inner;\n  } else {\n    return client;\n  }\n};\n\n/**\n * Get the page Y offset\n *\n * @return {integer} Page Y offset\n */\nVivus.prototype.scrollY = function() {\n  return window.pageYOffset || this.docElem.scrollTop;\n};\n\nsetupEnv = function() {\n  if (Vivus.prototype.docElem) {\n    return;\n  }\n\n  /**\n   * Alias for document element\n   *\n   * @type {DOMelement}\n   */\n  Vivus.prototype.docElem = window.document.documentElement;\n\n  /**\n   * Alias for `requestAnimationFrame` or\n   * `setTimeout` function for deprecated browsers.\n   *\n   */\n  requestAnimFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(/* function */ callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    );\n  })();\n\n  /**\n   * Alias for `cancelAnimationFrame` or\n   * `cancelTimeout` function for deprecated browsers.\n   *\n   */\n  cancelAnimFrame = (function() {\n    return (\n      window.cancelAnimationFrame ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n      window.oCancelAnimationFrame ||\n      window.msCancelAnimationFrame ||\n      function(id) {\n        return window.clearTimeout(id);\n      }\n    );\n  })();\n};\n\n/**\n * Parse string to integer.\n * If the number is not positive or null\n * the method will return the default value\n * or 0 if undefined\n *\n * @param {string} value String to parse\n * @param {*} defaultValue Value to return if the result parsed is invalid\n * @return {number}\n *\n */\nparsePositiveInt = function(value, defaultValue) {\n  var output = parseInt(value, 10);\n  return output >= 0 ? output : defaultValue;\n};\n\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return Vivus;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = Vivus;\n  } else {\n    // Browser globals\n    window.Vivus = Vivus;\n  }\n\n}());\n\n","import Vivus from 'vivus'\nimport { each } from '../../js/utils'\n\nconst calloutExample = (context) => {\n  if (!context) {\n    return\n  }\n\n  function draw(el, options = {}, callback) {\n    const opts = Object.assign(\n      {\n        animTimingFunction: Vivus.EASE_OUT,\n        duration: 100\n      },\n      options\n    )\n\n    return new Vivus(el, opts, callback)\n  }\n\n  each(\n    '[data-draw]',\n    (el) => {\n      const options = Object.entries(el.dataset).reduce(function (acc, [key, value]) {\n        if (key.match(/^draw([\\w]+)/)) {\n          acc[key.replace(/^draw/, '')] = value\n        }\n\n        return acc\n      }, {})\n\n      if (Object.hasOwnProperty.call(options, 'on')) {\n        delete options.on\n        options.start = 'autostart'\n        el.addEventListener(options.on, () => draw(el, options))\n      } else {\n        draw(el, options)\n      }\n    },\n    context\n  )\n}\n\nexport { calloutExample }\n"],"names":["Callout","Pathformer","element","svg","fn","pathData","pathDom","elements","i","newElement","x1","y1","x2","y2","x","y","width","height","rx","ry","points","path","formattedPoints","cx","cy","startX","startY","endX","endY","r","attr","pathTag","output","setupEnv","requestAnimFrame","cancelAnimFrame","parsePositiveInt","Vivus","options","callback","base","rate","rateR","progress","onLoad","self","domSandbox","svgTag","oReq","e","allowedTypes","allowedStarts","paths","pAttrs","pathObj","totalLength","lengthMeter","timePoint","scale","hasNonScale","rect","box","currentFrame","index","newPath","listener","speed","el","ignoreAttr","h","scrolled","viewed","elBCR","elHeight","elTop","elBottom","client","inner","id","value","defaultValue","module","calloutExample","context","draw","opts","Object","assign","animTimingFunction","EASE_OUT","duration","each","entries","dataset","reduce","acc","key","match","replace","hasOwnProperty","call","on","start","addEventListener"],"mappings":"oLAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;mBCOd,UAAY,CAoBb,SAASC,EAAWC,EAAS,CAE3B,GAAI,OAAOA,EAAY,IACrB,MAAM,IAAI,MAAM,2DAA2D,EAI7E,GAAIA,EAAQ,cAAgB,SAC1BA,EAAU,SAAS,eAAeA,CAAO,EACrC,CAACA,GACH,MAAM,IAAI,MAAM,gFAAgF,EAGpG,GAAIA,aAAmB,OAAO,YAC1BA,aAAmB,OAAO,aAC1B,SAAS,KAAKA,EAAQ,QAAQ,EAChC,KAAK,GAAKA,MAEV,OAAM,IAAI,MAAM,gFAAgF,EAIlG,KAAK,KAAKA,CAAO,CAClB,CAQDD,EAAW,UAAU,MAAQ,CAAC,OAAQ,UAAW,SAAU,UAAW,WAAY,MAAM,EASxFA,EAAW,UAAU,WAAa,CAAC,KAAM,KAAM,SAAU,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IAAI,EAQ1GA,EAAW,UAAU,KAAO,SAAUE,EAAK,CAIzC,QAHIC,EAAIF,EAASG,EAAUC,EACvBC,EAAWJ,EAAI,iBAAiB,KAAK,MAAM,KAAK,GAAG,CAAC,EAE/CK,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACnCN,EAAUK,EAASC,CAAC,EACpBJ,EAAK,KAAKF,EAAQ,QAAQ,YAAW,EAAK,QAAQ,EAClDG,EAAWD,EAAG,KAAK,UAAUF,EAAQ,UAAU,CAAC,EAChDI,EAAU,KAAK,UAAUJ,EAASG,CAAQ,EAC1CH,EAAQ,WAAW,aAAaI,EAASJ,CAAO,CAEpD,EAUAD,EAAW,UAAU,WAAa,SAAUC,EAAS,CACnD,IAAIO,EAAa,CAAE,EACfC,EAAKR,EAAQ,IAAM,EACnBS,EAAKT,EAAQ,IAAM,EACnBU,EAAKV,EAAQ,IAAM,EACnBW,EAAKX,EAAQ,IAAM,EAEvB,OAAAO,EAAW,EAAI,IAAMC,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAMC,EAC/CJ,CACT,EAWAR,EAAW,UAAU,WAAa,SAAUC,EAAS,CACnD,IAAIO,EAAa,CAAE,EACfK,EAAS,WAAWZ,EAAQ,CAAC,GAAU,EACvCa,EAAS,WAAWb,EAAQ,CAAC,GAAU,EACvCc,EAAS,WAAWd,EAAQ,KAAK,GAAM,EACvCe,EAAS,WAAWf,EAAQ,MAAM,GAAK,EAE3C,GAAIA,EAAQ,IAAMA,EAAQ,GAAI,CAC5B,IAAIgB,EAAK,SAAShB,EAAQ,GAAI,EAAE,GAAK,GACjCiB,EAAK,SAASjB,EAAQ,GAAI,EAAE,GAAK,GACrCgB,EAAK,KAAK,IAAI,KAAK,IAAIA,EAAK,EAAIC,EAAKD,EAAI,CAAC,EAAGF,EAAM,CAAC,EACpDG,EAAK,KAAK,IAAI,KAAK,IAAIA,EAAK,EAAID,EAAKC,EAAI,CAAC,EAAGF,EAAO,CAAC,EAErDR,EAAW,EAAI,MAAQK,EAAII,GAAM,IAAMH,EAAI,OACpBD,EAAIE,EAAQE,GAAM,IAAMH,EAAI,MAC7BG,EAAK,IAAMC,EAAK,WAAaL,EAAIE,GAAS,KAAOD,EAAII,GAAM,OAC1DL,EAAIE,GAAS,KAAOD,EAAIE,EAASE,GAAM,MACxCD,EAAK,IAAMC,EAAK,WAAaL,EAAIE,EAAQE,GAAM,KAAOH,EAAIE,GAAU,OACnEH,EAAII,GAAM,KAAOH,EAAIE,GAAU,MAChCC,EAAK,IAAMC,EAAK,UAAYL,EAAI,KAAOC,EAAIE,EAASE,GAAM,MAC1DL,EAAI,KAAOC,EAAII,GAAM,MACrBD,EAAK,IAAMC,EAAK,WAAaL,EAAII,GAAM,IAAMH,OAGnEN,EAAW,EAAI,IAAMK,EAAI,IAAMC,EAAI,MACbD,EAAIE,GAAS,IAAMD,EAAI,MACvBD,EAAIE,GAAS,KAAOD,EAAIE,GAAU,KACnCH,EAAI,KAAOC,EAAIE,GAAU,KAEhD,OAAOR,CACT,EASAR,EAAW,UAAU,eAAiB,SAAUC,EAAS,CACvD,IAAIO,EAAa,CAAE,EACfW,EAASlB,EAAQ,OAAO,KAAI,EAAG,MAAM,GAAG,EACxCM,EAAGa,EAGP,GAAInB,EAAQ,OAAO,QAAQ,GAAG,IAAM,GAAI,CACtC,IAAIoB,EAAkB,CAAA,EACtB,IAAKd,EAAI,EAAGA,EAAIY,EAAO,OAAQZ,GAAG,EAChCc,EAAgB,KAAKF,EAAOZ,CAAC,EAAI,IAAMY,EAAOZ,EAAE,CAAC,CAAC,EAEpDY,EAASE,EAKX,IADAD,EAAO,IAAMD,EAAO,CAAC,EACjBZ,EAAI,EAAGA,EAAIY,EAAO,OAAQZ,IACxBY,EAAOZ,CAAC,EAAE,QAAQ,GAAG,IAAM,KAC7Ba,GAAQ,IAAMD,EAAOZ,CAAC,GAG1B,OAAAC,EAAW,EAAIY,EACRZ,CACT,EAYAR,EAAW,UAAU,cAAgB,SAAUC,EAAS,CACtD,IAAIO,EAAaR,EAAW,UAAU,eAAeC,CAAO,EAE5D,OAAAO,EAAW,GAAK,IACTA,CACT,EASAR,EAAW,UAAU,cAAgB,SAAUC,EAAS,CACtD,IAAIO,EAAa,CAAE,EACfS,EAAK,WAAWhB,EAAQ,EAAE,GAAK,EAC/BiB,EAAK,WAAWjB,EAAQ,EAAE,GAAK,EAC/BqB,EAAK,WAAWrB,EAAQ,EAAE,GAAK,EAC/BsB,EAAK,WAAWtB,EAAQ,EAAE,GAAK,EAC/BuB,EAASF,EAAKL,EACdQ,EAASF,EACTG,EAAO,WAAWJ,CAAE,EAAI,WAAWL,CAAE,EACrCU,EAAOJ,EAEX,OAAAf,EAAW,EAAI,IAAMgB,EAAS,IAAMC,EACrB,IAAMR,EAAK,IAAMC,EAAK,UAAYQ,EAAO,IAAMC,EAC/C,IAAMV,EAAK,IAAMC,EAAK,UAAYM,EAAS,IAAMG,EACzDnB,CACT,EASAR,EAAW,UAAU,aAAe,SAAUC,EAAS,CACrD,IAAIO,EAAa,CAAE,EACfoB,EAAK,WAAW3B,EAAQ,CAAC,GAAM,EAC/BqB,EAAK,WAAWrB,EAAQ,EAAE,GAAK,EAC/BsB,EAAK,WAAWtB,EAAQ,EAAE,GAAK,EAC/BuB,EAASF,EAAKM,EACdH,EAASF,EACTG,EAAO,WAAWJ,CAAE,EAAI,WAAWM,CAAC,EACpCD,EAAOJ,EAEX,OAAAf,EAAW,EAAK,IAAMgB,EAAS,IAAMC,EACrB,IAAMG,EAAI,IAAMA,EAAI,UAAYF,EAAO,IAAMC,EAC7C,IAAMC,EAAI,IAAMA,EAAI,UAAYJ,EAAS,IAAMG,EACxDnB,CACT,EAUAR,EAAW,UAAU,UAAY,SAAUC,EAASG,EAAU,CAC5D,IAAIG,EAAGsB,EAAMC,EAAU,SAAS,gBAAgB,6BAA6B,MAAM,EACnF,IAAIvB,EAAI,EAAGA,EAAIN,EAAQ,WAAW,OAAQM,IACxCsB,EAAO5B,EAAQ,WAAWM,CAAC,EACvB,KAAK,WAAW,QAAQsB,EAAK,IAAI,IAAM,IACzCC,EAAQ,aAAaD,EAAK,KAAMA,EAAK,KAAK,EAG9C,IAAItB,KAAKH,EACP0B,EAAQ,aAAavB,EAAGH,EAASG,CAAC,CAAC,EAErC,OAAOuB,CACT,EASA9B,EAAW,UAAU,UAAY,SAAUC,EAAS,CAElD,QADI4B,EAAME,EAAS,GACVxB,EAAI,EAAGA,EAAIN,EAAQ,OAAQM,IAAK,CAGvC,GAFAsB,EAAO5B,EAAQM,CAAC,EAEZ,KAAK,WAAW,QAAQsB,EAAK,IAAI,IAAM,IAAMA,EAAK,MAAM,QAAQ,GAAG,IAAM,GAC3E,MAAM,IAAI,MAAM,kIAAsI,EAExJE,EAAOF,EAAK,IAAI,EAAIA,EAAK,MAE3B,OAAOE,CACT,EAIA,IAAIC,EAAUC,EAAkBC,EAAiBC,EAkDjD,SAASC,EAAMnC,EAASoC,EAASC,EAAU,CACzCN,IAGA,KAAK,QAAU,GACf,KAAK,WAAW/B,EAASoC,CAAO,EAChC,KAAK,WAAWA,CAAO,EACvB,KAAK,YAAYC,CAAQ,EAErB,KAAK,SACP,KAAK,KAAI,CAEZ,CAUDF,EAAM,OAAS,SAASvB,EAAG,CACzB,OAAOA,CACT,EACAuB,EAAM,KAAO,SAASvB,EAAG,CACvB,MAAO,CAAC,KAAK,IAAIA,EAAI,KAAK,EAAE,EAAI,EAAI,EACtC,EACAuB,EAAM,SAAW,SAASvB,EAAG,CAC3B,MAAO,GAAI,KAAK,IAAI,EAAIA,EAAG,CAAC,CAC9B,EACAuB,EAAM,QAAU,SAASvB,EAAG,CAC1B,OAAO,KAAK,IAAIA,EAAG,CAAC,CACtB,EACAuB,EAAM,gBAAkB,SAASvB,EAAG,CAClC,IAAI0B,EAAO,CAAC,KAAK,IAAI1B,GAAK,GAAM,KAAK,GAAG,EAAI,EAC1C2B,EAAO,KAAK,IAAID,EAAM,GAAG,EACzBE,EAAQ,KAAK,IAAI,EAAI5B,EAAG,CAAC,EACzB6B,EAAW,CAAC,KAAK,IAAI,KAAK,IAAIF,GAAQ,IAAM,KAAK,GAAG,CAAC,EAAI,EAC3D,MAAO,GAAIC,EAAQC,EAAWD,CAChC,EAcAL,EAAM,UAAU,WAAa,SAASnC,EAASoC,EAAS,CACtD,IAAIM,EAAQC,EAGZ,GAAI,OAAO3C,EAAY,IACrB,MAAM,IAAI,MAAM,sDAAsD,EAIxE,GAAIA,EAAQ,cAAgB,SAC1BA,EAAU,SAAS,eAAeA,CAAO,EACrC,CAACA,GACH,MAAM,IAAI,MACR,2EACR,EAME,GAHA,KAAK,SAAWA,EAGZoC,GAAWA,EAAQ,KAAM,CAC3BO,EAAO,KACPD,EAAS,UAAW,CAClB,IAAIE,EAAa,SAAS,cAAc,KAAK,EAC7CA,EAAW,UAAY,KAAK,aAE5B,IAAIC,EAASD,EAAW,cAAc,KAAK,EAC3C,GAAI,CAACC,EACH,MAAM,IAAI,MACR,0DACET,EAAQ,IACpB,EAGMO,EAAK,GAAKE,EACVF,EAAK,GAAG,aAAa,QAAS,MAAM,EACpCA,EAAK,GAAG,aAAa,SAAU,MAAM,EACrCA,EAAK,SAAS,YAAYA,EAAK,EAAE,EACjCA,EAAK,QAAU,GACfA,EAAK,KAAI,EACTA,EAAO,IACb,EAEI,IAAIG,EAAO,IAAI,OAAO,eACtBA,EAAK,iBAAiB,OAAQJ,CAAM,EACpCI,EAAK,KAAK,MAAOV,EAAQ,IAAI,EAC7BU,EAAK,KAAI,EACT,OAGF,OAAQ9C,EAAQ,YAAW,CACzB,KAAK,OAAO,cACZ,KAAK,OAAO,WACZ,KAAK,OAAO,YACV,KAAK,GAAKA,EACV,KAAK,QAAU,GACf,MAEF,KAAK,OAAO,kBACV2C,EAAO,KACPD,EAAS,SAASK,EAAG,CACnB,GAAI,CAAAJ,EAAK,QAMT,IAHAA,EAAK,GACH3C,EAAQ,iBACRA,EAAQ,gBAAgB,cAAc,KAAK,EACzC,CAAC2C,EAAK,IAAMI,EACd,MAAM,IAAI,MACR,6DACZ,EACmBJ,EAAK,KACV3C,EAAQ,aAAa,gBAAgB,IACvC2C,EAAK,SAAS,aAAaA,EAAK,GAAI3C,CAAO,EAC3C2C,EAAK,SAAS,YAAY3C,CAAO,EACjC2C,EAAK,GAAG,aAAa,QAAS,MAAM,EACpCA,EAAK,GAAG,aAAa,SAAU,MAAM,GAEvCA,EAAK,QAAU,GACfA,EAAK,KAAI,EACTA,EAAO,MAEjB,EAEWD,EAAM,GACT1C,EAAQ,iBAAiB,OAAQ0C,CAAM,EAEzC,MAEF,QACE,MAAM,IAAI,MACR,sFACR,CACG,CACH,EASAP,EAAM,UAAU,WAAa,SAASC,EAAS,CAC7C,IAAIY,EAAe,CACjB,UACA,OACA,QACA,QACA,WACA,WACA,eACJ,EACMC,EAAgB,CAAC,aAAc,SAAU,WAAW,EAGxD,GAAIb,IAAY,QAAaA,EAAQ,cAAgB,OACnD,MAAM,IAAI,MACR,4DACN,EAME,GAJEA,EAAUA,GAAW,GAInBA,EAAQ,MAAQY,EAAa,QAAQZ,EAAQ,IAAI,IAAM,GACzD,MAAM,IAAI,MACR,wBACEA,EAAQ,KACR,sCACR,EAME,GAJE,KAAK,KAAOA,EAAQ,MAAQY,EAAa,CAAC,EAIxCZ,EAAQ,OAASa,EAAc,QAAQb,EAAQ,KAAK,IAAM,GAC5D,MAAM,IAAI,MACR,wBACEA,EAAQ,MACR,oCACR,EA4BE,GA1BE,KAAK,MAAQA,EAAQ,OAASa,EAAc,CAAC,EAG/C,KAAK,KACH,OAAO,UAAU,UAAU,QAAQ,MAAM,IAAM,IAC/C,OAAO,UAAU,UAAU,QAAQ,UAAU,IAAM,IACnD,OAAO,UAAU,UAAU,QAAQ,OAAO,IAAM,GAClD,KAAK,SAAWf,EAAiBE,EAAQ,SAAU,GAAG,EACtD,KAAK,MAAQF,EAAiBE,EAAQ,MAAO,IAAI,EACjD,KAAK,QAAUF,EAAiBE,EAAQ,QAAS,CAAC,EAClD,KAAK,YAAcA,EAAQ,eAAe,aAAa,EACnD,CAAC,CAACA,EAAQ,YACV,KAAK,KACT,KAAK,aAAe,CAAC,CAACA,EAAQ,aAC9B,KAAK,YAAc,CAAC,CAACA,EAAQ,YAC7B,KAAK,QAAUA,EAAQ,QACvB,KAAK,IAAM,GACX,KAAK,YAAc,KAAK,aAAe,KAAK,UAAY,KAAK,MAAQ,KAAK,OAAS,KAEnF,KAAK,gBAAkBA,EAAQ,eAAe,iBAAiB,EAC3D,CAAC,CAACA,EAAQ,gBACV,GAEJ,KAAK,mBAAqBA,EAAQ,oBAAsBD,EAAM,OAC9D,KAAK,mBAAqBC,EAAQ,oBAAsBD,EAAM,OAE1D,KAAK,OAAS,KAAK,SACrB,MAAM,IAAI,MAAM,0DAA0D,CAE9E,EASAA,EAAM,UAAU,YAAc,SAASE,EAAU,CAE/C,GAAMA,GAAYA,EAAS,cAAgB,SACzC,MAAM,IAAI,MACR,8DACN,EAEE,KAAK,SAAWA,GAAY,UAAW,EACzC,EA2BAF,EAAM,UAAU,QAAU,UAAW,CACnC,IAAI7B,EAAG4C,EAAO/B,EAAMgC,EAAQC,EAASC,EAAaC,EAAaC,EAAWC,EAAOC,EAKjF,IAJAF,EAAYF,EAAcC,EAAc,EACxCJ,EAAQ,KAAK,GAAG,iBAAiB,MAAM,EACvCO,EAAc,GAETnD,EAAI,EAAGA,EAAI4C,EAAM,OAAQ5C,IAE5B,GADAa,EAAO+B,EAAM5C,CAAC,EACV,MAAK,YAAYa,CAAI,EAczB,IAVAiC,EAAU,CACR,GAAIjC,EACJ,OAAQ,EACR,QAAS,EACT,SAAU,EACV,kBAAmB,EACzB,EAIQA,EAAK,aAAa,eAAe,IAAM,qBAAsB,CAC/D,IAAIuC,EAAOvC,EAAK,wBACZwC,EAAMxC,EAAK,UACfqC,EAAQ,KAAK,IAAIE,EAAK,MAAQC,EAAI,MAAOD,EAAK,OAASC,EAAI,MAAM,EACjEP,EAAQ,kBAAoB,GAC5BK,EAAc,QAEdD,EAAQ,EAKV,GAHAJ,EAAQ,OAAS,KAAK,KAAKjC,EAAK,eAAc,EAAKqC,CAAK,EAGpD,MAAMJ,EAAQ,MAAM,EAAG,CACrB,OAAO,SAAW,QAAQ,MAC5B,QAAQ,KACN,yDACAjC,CACV,EAEM,SAEF,KAAK,IAAI,KAAKiC,CAAO,EACrBjC,EAAK,MAAM,gBACTiC,EAAQ,OAAS,KAAOA,EAAQ,OAAS,KAAK,QAAU,GAC1DjC,EAAK,MAAM,iBAAmBiC,EAAQ,OAAS,KAAK,QACpDA,EAAQ,QAAU,KAAK,QACvBC,GAAeD,EAAQ,OAEvB,KAAK,WAAW9C,CAAC,EAiBnB,IAbImD,GACF,QAAQ,KAAK,sNAAsN,EAGrOJ,EAAcA,IAAgB,EAAI,EAAIA,EACtC,KAAK,MAAQ,KAAK,QAAU,KAAO,KAAK,SAAW,EAAI,KAAK,MAC5D,KAAK,UAAY,KAAK,OAASH,EAAM,OAAS,EAAIA,EAAM,OAAS,EAAI,GAGjE,KAAK,cACP,KAAK,IAAI,UAGN5C,EAAI,EAAGA,EAAI,KAAK,IAAI,OAAQA,IAAK,CAGpC,OAFA8C,EAAU,KAAK,IAAI9C,CAAC,EAEZ,KAAK,KAAI,CACf,IAAK,UACH8C,EAAQ,QAAU,KAAK,UAAY9C,EACnC8C,EAAQ,SAAW,KAAK,SAAW,KAAK,MACxC,MAEF,IAAK,WACHA,EAAQ,QAAWE,EAAcD,EAAe,KAAK,SACrDD,EAAQ,SAAYA,EAAQ,OAASC,EAAe,KAAK,SACzD,MAEF,IAAK,OACL,IAAK,QACL,IAAK,QACHD,EAAQ,QAAU,EAClBA,EAAQ,SAAW,KAAK,SACxB,MAEF,IAAK,gBACHjC,EAAOiC,EAAQ,GACfD,EAAS,KAAK,UAAUhC,CAAI,EAC5BiC,EAAQ,QACNG,GACCrB,EAAiBiB,EAAO,YAAY,EAAG,KAAK,SAAS,GAAK,GAC7DC,EAAQ,SAAWlB,EACjBiB,EAAO,eAAe,EACtB,KAAK,QACf,EACQI,EACEJ,EAAO,YAAY,IAAM,OACrBC,EAAQ,QACRA,EAAQ,QAAUA,EAAQ,SAChC,KAAK,YAAc,KAAK,IACtB,KAAK,YACLA,EAAQ,QAAUA,EAAQ,QACpC,EACQ,MAEF,IAAK,WACHjC,EAAOiC,EAAQ,GACfD,EAAS,KAAK,UAAUhC,CAAI,EAC5BiC,EAAQ,QACNlB,EAAiBiB,EAAO,YAAY,EAAG,KAAK,SAAS,GAAK,EAC5DC,EAAQ,SAAWlB,EACjBiB,EAAO,eAAe,EACtB,KAAK,QACf,EACQ,KAAK,YAAc,KAAK,IACtB,KAAK,YACLC,EAAQ,QAAUA,EAAQ,QACpC,EACQ,KACH,CACDE,GAAeF,EAAQ,OACvB,KAAK,YAAc,KAAK,aAAe,KAAK,SAEhD,EAMAjB,EAAM,UAAU,OAAS,UAAY,CAC/B,KAAK,kBAGT,KAAK,gBAAkBH,EAAiB,UAAY,CAClD,KAAK,kBAAiB,CAC1B,EAAI,KAAK,IAAI,CAAC,EACb,EAMDG,EAAM,UAAU,kBAAoB,UAAY,CAE9C,QADIiB,EAASjC,EAAMuC,EAAMC,EAAKH,EACrBlD,EAAI,EAAGA,EAAI,KAAK,IAAI,OAAQA,IACnC8C,EAAU,KAAK,IAAI9C,CAAC,EAChB8C,EAAQ,oBACVjC,EAAOiC,EAAQ,GACfM,EAAOvC,EAAK,wBACZwC,EAAMxC,EAAK,UACXqC,EAAQ,KAAK,IAAIE,EAAK,MAAQC,EAAI,MAAOD,EAAK,OAASC,EAAI,MAAM,EACjEP,EAAQ,OAAS,KAAK,KAAKjC,EAAK,eAAc,EAAKqC,CAAK,EACxDrC,EAAK,MAAM,gBAAkBiC,EAAQ,OAAS,KAAOA,EAAQ,OAAS,KAAK,QAAU,IAGzF,KAAK,MAAK,EACV,KAAK,gBAAkB,IACxB,EAgBDjB,EAAM,UAAU,KAAO,UAAW,CAChC,IAAIQ,EAAO,KAGX,GAFA,KAAK,cAAgB,KAAK,MAEtB,KAAK,cAAgB,EACvB,KAAK,KAAI,EACT,KAAK,MAAK,UACD,KAAK,cAAgB,KAAK,YACnC,KAAK,KAAI,EACT,KAAK,aAAe,KAAK,YACzB,KAAK,MAAK,EACN,KAAK,aACP,KAAK,QAAO,MAET,CACL,KAAK,MAAK,EACV,KAAK,OAASX,EAAiB,UAAW,CACxCW,EAAK,KAAI,CACf,CAAK,EACD,OAGF,KAAK,SAAS,IAAI,EACd,KAAK,mBACP,KAAK,iBAAiB,IAAI,EAC1B,KAAK,iBAAmB,KAE5B,EAeAR,EAAM,UAAU,MAAQ,UAAW,CACjC,IAAI7B,EAAGmC,EAAUtB,EAAMyC,EAIvB,IAHAA,EACE,KAAK,mBAAmB,KAAK,aAAe,KAAK,WAAW,EAC5D,KAAK,YACFtD,EAAI,EAAGA,EAAI,KAAK,IAAI,OAAQA,IAC/Ba,EAAO,KAAK,IAAIb,CAAC,EACjBmC,GAAYmB,EAAezC,EAAK,SAAWA,EAAK,SAChDsB,EAAW,KAAK,mBAAmB,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAQ,CAAC,CAAC,EACjEtB,EAAK,WAAasB,IACpBtB,EAAK,SAAWsB,EAChBtB,EAAK,GAAG,MAAM,iBAAmB,KAAK,MAAMA,EAAK,QAAU,EAAIsB,EAAS,EACxE,KAAK,WAAWnC,CAAC,EAGvB,EAcA6B,EAAM,UAAU,WAAa,SAAS0B,EAAO,CAC3C,GAAI,KAAK,aAAe,KAAK,KAAO,KAAK,IAAIA,CAAK,EAAG,CACnD,IAAIT,EAAU,KAAK,IAAIS,CAAK,EAC1BC,EAAUV,EAAQ,GAAG,UAAU,EAAI,EACrCA,EAAQ,GAAG,WAAW,aAAaU,EAASV,EAAQ,EAAE,EACtDA,EAAQ,GAAKU,EAEjB,EAWA3B,EAAM,UAAU,KAAO,UAAW,CAEhC,KAAK,YAAc,EACnB,KAAK,aAAe,EACpB,KAAK,IAAM,GAGX,IAAIpC,EAAW,KAAK,EAAE,EACtB,KAAK,QAAO,EACZ,KAAK,QAAO,EAER,KAAK,SACP,KAAK,QAAQ,IAAI,CAErB,EAWAoC,EAAM,UAAU,QAAU,UAAW,CACnC,OAAQ,KAAK,MAAK,CAChB,IAAK,SACH,OAEF,IAAK,YACH,KAAK,KAAI,EACT,MAEF,IAAK,aACH,IAAIQ,EAAO,KACToB,EAAW,UAAW,CAChBpB,EAAK,aAAaA,EAAK,SAAU,CAAC,IACpCA,EAAK,KAAI,EACT,OAAO,oBAAoB,SAAUoB,CAAQ,EAEzD,EACM,OAAO,iBAAiB,SAAUA,CAAQ,EAC1CA,IACA,KACH,CACH,EAYA5B,EAAM,UAAU,UAAY,UAAW,CACrC,OAAO,KAAK,eAAiB,EACzB,QACA,KAAK,eAAiB,KAAK,YAC3B,MACA,UACN,EASAA,EAAM,UAAU,MAAQ,UAAW,CACjC,OAAO,KAAK,iBAAiB,CAAC,CAChC,EASAA,EAAM,UAAU,OAAS,UAAW,CAClC,OAAO,KAAK,iBAAiB,CAAC,CAChC,EAOAA,EAAM,UAAU,iBAAmB,SAASM,EAAU,CACpD,OAAAA,EAAW,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAQ,CAAC,EAC5C,KAAK,aAAe,KAAK,MAAM,KAAK,YAAcA,CAAQ,EAC1D,KAAK,MAAK,EACH,IACT,EAcAN,EAAM,UAAU,KAAO,SAAS6B,EAAO3B,EAAU,CAG/C,GAFA,KAAK,iBAAmB,KAEpB2B,GAAS,OAAOA,GAAU,WAC5B,KAAK,iBAAmBA,EACxBA,EAAQ,aACCA,GAAS,OAAOA,GAAU,SACnC,MAAM,IAAI,MAAM,6BAA6B,EAG/C,OAAI3B,GAAY,OAAOA,GAAa,YAAc,CAAC,KAAK,mBACtD,KAAK,iBAAmBA,GAG1B,KAAK,MAAQ2B,GAAS,EACjB,KAAK,QACR,KAAK,KAAI,EAEJ,IACT,EAOA7B,EAAM,UAAU,KAAO,UAAW,CAChC,OAAI,KAAK,SACPF,EAAgB,KAAK,MAAM,EAC3B,KAAK,OAAS,MAET,IACT,EAQAE,EAAM,UAAU,QAAU,UAAW,CACnC,KAAK,KAAI,EACT,IAAI7B,EAAGa,EACP,IAAKb,EAAI,EAAGA,EAAI,KAAK,IAAI,OAAQA,IAC/Ba,EAAO,KAAK,IAAIb,CAAC,EACjBa,EAAK,GAAG,MAAM,iBAAmB,KACjCA,EAAK,GAAG,MAAM,gBAAkB,KAChC,KAAK,WAAWb,CAAC,CAErB,EAsBA6B,EAAM,UAAU,YAAc,SAAS8B,EAAI,CACzC,IAAIP,EACFQ,EAAaD,EAAG,aAAa,aAAa,EAE5C,OAAIC,IAAe,KACVA,IAAe,QAGpB,KAAK,iBACPR,EAAOO,EAAG,wBACH,CAACP,EAAK,OAAS,CAACA,EAAK,QAErB,EAEX,EASAvB,EAAM,UAAU,UAAY,SAASnC,EAAS,CAC5C,IAAI4B,EACFE,EAAS,CAAA,EACX,GAAI9B,GAAWA,EAAQ,WACrB,QAASM,EAAI,EAAGA,EAAIN,EAAQ,WAAW,OAAQM,IAC7CsB,EAAO5B,EAAQ,WAAWM,CAAC,EAC3BwB,EAAOF,EAAK,IAAI,EAAIA,EAAK,MAG7B,OAAOE,CACT,EASAK,EAAM,UAAU,aAAe,SAAS8B,EAAIE,EAAG,CAC7C,IAAIC,EAAW,KAAK,QAAS,EAC3BC,EAASD,EAAW,KAAK,aAAc,EACvCE,EAAQL,EAAG,sBAAuB,EAClCM,EAAWD,EAAM,OACjBE,EAAQJ,EAAWE,EAAM,IACzBG,EAAWD,EAAQD,EAKrB,OAAAJ,EAAIA,GAAK,EAEFK,EAAQD,EAAWJ,GAAKE,GAAUI,GAAYL,CACvD,EAOAjC,EAAM,UAAU,aAAe,UAAW,CACxC,IAAIuC,EAAS,KAAK,QAAQ,aACxBC,EAAQ,OAAO,YAEjB,OAAID,EAASC,EACJA,EAEAD,CAEX,EAOAvC,EAAM,UAAU,QAAU,UAAW,CACnC,OAAO,OAAO,aAAe,KAAK,QAAQ,SAC5C,EAEAJ,EAAW,UAAW,CAChBI,EAAM,UAAU,UASpBA,EAAM,UAAU,QAAU,OAAO,SAAS,gBAO1CH,EAAoB,UAAW,CAC7B,OACE,OAAO,uBACP,OAAO,6BACP,OAAO,0BACP,OAAO,wBACP,OAAO,yBACP,SAAwBK,EAAU,CAChC,OAAO,OAAO,WAAWA,EAAU,IAAO,EAAE,CAC7C,CAEP,IAOEJ,EAAmB,UAAW,CAC5B,OACE,OAAO,sBACP,OAAO,4BACP,OAAO,yBACP,OAAO,uBACP,OAAO,wBACP,SAAS2C,EAAI,CACX,OAAO,OAAO,aAAaA,CAAE,CAC9B,CAEP,IACA,EAaA1C,EAAmB,SAAS2C,EAAOC,EAAc,CAC/C,IAAIhD,EAAS,SAAS+C,EAAO,EAAE,EAC/B,OAAO/C,GAAU,EAAIA,EAASgD,CAChC,EAYIC,EAAA,QAAiB5C,CAMrB,uCCjsCM6C,EAAkBC,GAAY,CAClC,GAAI,CAACA,EACH,OAGF,SAASC,EAAKjB,EAAI7B,EAAU,CAAA,EAAIC,EAAU,CACxC,MAAM8C,EAAOC,OAAOC,OAClB,CACEC,mBAAoBnD,EAAMoD,SAC1BC,SAAU,GACX,EACDpD,CACF,EAEA,OAAO,IAAID,EAAM8B,EAAIkB,EAAM9C,CAAQ,CACrC,CAEAoD,EACE,cACCxB,GAAO,CACN,MAAM7B,EAAUgD,OAAOM,QAAQzB,EAAG0B,OAAO,EAAEC,OAAO,SAAUC,EAAK,CAACC,EAAKjB,CAAK,EAAG,CAC7E,OAAIiB,EAAIC,MAAM,cAAc,IAC1BF,EAAIC,EAAIE,QAAQ,QAAS,EAAE,CAAC,EAAInB,GAG3BgB,CACR,EAAE,CAAE,CAAA,EAEDT,OAAOa,eAAeC,KAAK9D,EAAS,IAAI,GAC1C,OAAOA,EAAQ+D,GACf/D,EAAQgE,MAAQ,YAChBnC,EAAGoC,iBAAiBjE,EAAQ+D,GAAI,IAAMjB,EAAKjB,EAAI7B,CAAO,CAAC,GAEvD8C,EAAKjB,EAAI7B,CAAO,CAEnB,EACD6C,CACF,CACF;;;;;;;;;;","x_google_ignoreList":[1]}