/**
 * Spinner mixin
 */

@mixin lf-spinner($circle-color, $inner-color, $surface-color, $spinnerSize, $animation-name) {
  position: relative;
  display: inline-block;
  background-color: $surface-color;
  border: 5px solid $surface-color;
  border-radius: 50%;
  transform: rotate(263deg);
  // IE11 and below can't process svg animations relating to most things, but stroke-dasharray is one of them.
  // Unfortunatley this completely breaks our ability to have identical animations in older IE browsers.
  // The fallback is this, a simple rotation animation on the wrapper element. At least it's something.
  animation: ie-fallback $animation-time infinite linear;

  svg {
    display: block;
    width: $spinnerSize + px;
    height: $spinnerSize + px;
  }

  .lf-spinner-dash {
    fill: transparent;
    stroke: $inner-color;
    -ms-stroke-dasharray: 240, 60;
    stroke-dasharray: 240, 60;
    -ms-stroke-dashoffset: -6;
    stroke-dashoffset: -6;
    stroke-width: 9;
    transform-origin: center center;
    animation: $animation-name $animation-time infinite $animation-curve;
  }

  .static-circle {
    fill: $surface-color;
    stroke: $circle-color;
    stroke-dasharray: 314;
    stroke-width: 8;
  }

  /**
   * 1. This animation uses a different animation curve.
   */

  .lf-spinner-forward-line {
    stroke: $white;
    stroke-width: 6px;
    transform: rotate(52deg);
    transform-origin: center;
    animation: forward-line-rotate $animation-time infinite cubic-bezier(.51, .04, .46, .94); /* 1 */
  }

  .lf-spinner-back-line {
    @extend .lf-spinner-forward-line;

    stroke: $white;
    transform: rotate(7deg);
    animation: back-line-rotate $animation-time infinite $animation-curve;
  }
}

/**
 * Spinner variants!
 **/

.lf-spinner {
  @include lf-spinner($blue, $red, $white, 60, spinner-draw-dash);
}

.lf-spinner-sm {
  @include lf-spinner($blue, $red, $white, 40, spinner-draw-dash);
}

.lf-spinner-xs {
  @include lf-spinner($blue, $red, $white, 25, spinner-draw-dash);
}

.lf-spinner-neg {
  @include lf-spinner(transparent, $red, transparent, 60, spinner-draw-dash);
}

.lf-spinner-neg-sm {
  @include lf-spinner(transparent, $red, transparent, 40, spinner-draw-dash);
}

.lf-spinner-neg-xs {
  @include lf-spinner(transparent, $red, transparent, 25, spinner-draw-dash);
}

// Spinner inside buttons
.lf-spinner-btn-primary {
  @include lf-spinner(transparent, $white, transparent, 20, spinner-draw-dash);
}

.lf-spinner-btn-secondary {
  @include lf-spinner(transparent, $navy, transparent, 20, spinner-draw-dash);
}

.btn > [class*="lf-spinner"] {
  vertical-align: text-bottom;
  border: 0;
  transform: rotate(263deg);
  animation: ie-fallback-btn $animation-time infinite linear;

  .lf-spinner-dash {
    stroke-width: 10px;
  }
}

.btn:not([class*="arrow"]):not([class*="link"]):not(.btn-block) {
  > [class*="lf-spinner"] {
    margin-left: 4px;
  }

  &.btn-sm {
    > [class*="lf-spinner"] {
      svg {
        width: 16 + px;
        height: 16 + px;
        margin-top: 3px;
      }
    }
  }

  &.btn-lg {
    > [class*="lf-spinner"] {
      svg {
        width: 25 + px;
        height: 25 + px;
      }
    }
  }
}

// .btn-block.loading:not([class*="arrow"]):not([class*="link"]) {
//   padding-right: 2.2rem;

//   > [class*="lf-spinner"] {
//     margin-left: 10px;
//   }

//   &.btn-sm {
//     padding-right: 2.3rem;
//   }

//   &.btn-lg {
//     padding-right: 2.6rem;
//   }
// }

// .btn:not(.btn-block):not(.loading):not([class*="arrow"]):not([class*="more"]):not([class*="link"]) {
//   padding-right: 1.632rem;
//   padding-left: 1.632rem;

//   &.btn-sm {
//     padding-right: 1.39rem;
//     padding-left: 1.39rem;
//   }

//   &.btn-lg {
//     padding-right: 1.95rem;
//     padding-left: 1.95rem;
//   }
// }

.btn-group .btn {
  padding-right: 1.25rem !important;
  padding-left: 1.25rem !important;
}

.radio-card .btn {
  padding: .125rem .625rem !important;
}

.input-group-btn .btn {
  padding-right: .75rem !important;
  padding-left: .75rem !important;
}

// btn-arrow with spinner problem
// since btn-arrow causes content to align to the left/right depending on the arrow, we can't
// simply remove the btn-arrow class when we want the spinner. Instead we have to hide the arrow,
// using the loading class, and then absolute-position the spinner in its place.

.btn.loading {
  pointer-events: none;

  &.btn-arrow {
    &::after {
      display: none !important;
    }
  }

  &.btn-arrow-left {
    &::after {
      display: none !important;
    }
  }
}

.btn.btn-arrow-left > [class*="lf-spinner"] {
  right: auto;
  left: 8px;
}

/**
 * Animations
 **/

// Animate the dash
@keyframes spinner-draw-dash {
  0% {
    stroke-dasharray: 36, 257;
    stroke-dashoffset: -6;
  }

  25% {
    stroke-dashoffset: -6;
  }

  30% {
    stroke-dasharray: 240, 60;
  }

  100% {
    stroke-dasharray: 38, 258;
    stroke-dashoffset: -301;
  }
}

// And the lines
@keyframes forward-line-rotate {
  0% {
    transform: rotate(52deg);
  }

  30% {
    transform: rotate(305deg);
  }

  87% {
    transform: rotate(406deg);
  }

  100% {
    transform: rotate(409deg);
  }
}

@keyframes back-line-rotate {
  0% {
    transform: rotate(7deg);
  }

  25% {
    transform: rotate(7deg);
  }

  100% {
    transform: rotate(366deg);
  }
}

@keyframes ie-fallback {
  0% {
    transform: rotate(233deg);
  }

  100% {
    transform: rotate(593deg);
  }
}

@keyframes ie-fallback-btn {
  0% {
    transform: translateY(-10%) rotate(233deg);
  }

  100% {
    transform: translateY(-10%) rotate(593deg);
  }
}
