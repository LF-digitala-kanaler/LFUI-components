@import "bootstrap/scss/_dropdown.scss";

// Since we have added the requirement that an .open parent class is to be present for the dropdown-menu to be visible, we need to expose a mixin
// so that other entities may handle the visibility of the dropdown-menu in other ways. Needed for the datepicker for example, because it does not
// add a parent .open class (as not required with unmodified bootstrap).
@mixin dropdown-menu-open() {
  display: block;
  animation-name: dropdown-appear;
  animation-duration: var(--dropdown-menu-open-animation-duration, 200ms);
  animation-fill-mode: forwards;
  animation-timing-function: ease-out;
}

@keyframes dropdown-appear {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.dropdown-menu {
  margin: 0;
  border-width: $dropdown-border-width 0 0;
  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 6%), 0 0 1px 1px rgba(0, 0, 0, 5%);
}

.show > .dropdown-menu {
  @include dropdown-menu-open();
}

.dropdown-item:hover {
  background-image: none;
}

.dropdown-header {
  margin-bottom: .25rem;
}

/**
 * Hiding the standard arrow from the dropdown toggle-button
 */

.dropdown-toggle {
  &::after {
    display: none;
  }
}

/**
 * Dropdown and dropup with arrow
 */

.dropdown-arrow.show {
  .dropdown-menu {
    width: auto;
    margin-top: 0;
    margin-bottom: 0;
  }
}

/**
 * Below:
 */

.dropdown.dropdown-arrow {
  .dropdown-menu {
    @include drop-arrow(down, middle, middle, $white, #eeeeee);

    margin: 1rem 0;
  }
}

/**
 * Above:
 */

.dropup.dropdown-arrow {
  .dropdown-menu {
    @include drop-arrow(up, middle, middle, $white, #eeeeee);

    margin: 1rem 0;
  }
}
