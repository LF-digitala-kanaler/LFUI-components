// stylelint-disable scss/operator-no-unspaced

/**
 * Glyphs
 */

// data:image/svg+xml; charset=utf-8,
@mixin glyph($width, $height, $color, $vector) {
  width: $width + 0 + px;
  height: $height + 0 + px;
  // We need to remove the # in a color definition, to be able to correctly
  // escape color definitions in inline svg:s
  background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg fill="#{encodeHEX($color)}" viewBox="0 0 #{$width} #{$height}" xmlns="http://www.w3.org/2000/svg"%3E#{$vector}%3C/svg%3E');
  background-repeat: no-repeat;
}

@mixin glyph-arrow-right($color) {
  @include glyph(30, 17, $color, '<path d="M19.105 1.903l5.31 5.31H0V9.74h24.415l-5.31 5.31 1.785 1.785 8.36-8.36L20.89.12" />');
}

@mixin glyph-chevron-down($color) {
  @include glyph(18, 12, $color, '<polygon id="Page-1" transform="translate(9.405781, 5.309641) scale(-1, -1) rotate(-90.000000) translate(-9.405781, -5.309641) " points="5.87014076 -3.17614055 4.45614076 -1.76214055 11.5274221 5.30914082 4.45714076 12.3814222 5.87114076 13.7954222 12.9424221 6.72414082 14.3554221 5.30914082 12.9424221 3.89614082"></polygon>');
}

@mixin glyph-chevron-up($color) {
  @include glyph(18, 12, $color, '<polygon id="Page-1" transform="translate(9.405781, 5.485781) scale(-1, 1) rotate(-90.000000) translate(-9.405781, -5.485781) " points="5.87014076 -3 4.45614076 -1.586 11.5274221 5.48528137 4.45714076 12.5575627 5.87114076 13.9715627 12.9424221 6.90028137 14.3554221 5.48528137 12.9424221 4.07228137"></polygon>');
}

@mixin glyph-chevron-right($color) {
  @include glyph(20, 20, $color, '<polygon id="Page-1" points="1.414 0.0001 -8.8817842e-16 1.4141 4 5.4131 -8.8817842e-16 9.4141 1.414 10.8281 5.415 6.8281 6.828 5.4131 5.415 4.0001"></polygon>');
}

@mixin checkbox-tick($color) {
  @include glyph(30, 17, $color, '<path d="M8.006935,2.722945 L3.764893,6.965428 C3.454204,7.275685 2.951464,7.275685 2.64253,6.965428 L0.545017,4.867483 C0.150826,4.473733 0.150826,3.834328 0.545017,3.440137 L0.559957,3.425638 C0.954589,3.031888 1.593553,3.031888 1.986862,3.42652 L3.202825,4.642483 L6.565522,1.281982 C6.960154,0.886918 7.599118,0.887791 7.992868,1.281982 L8.006935,1.296049 C8.400685,1.690672 8.400685,2.328763 8.006935,2.722945"/>');
}

@mixin glyph-navigation-accounts($color) {
  @include glyph(28, 24, $color, '<path d="M7,21 L7,9.98893642 L25,10 L24.8516595,9.98893635 C25.4421033,10.0775029 26,10.6029193 26,11 L26,21 C26,21.4477153 25.4477153,22 25,22 L3,22 C2.55228475,22 2,21.4477153 2,21 L2,3 C2,2.55228475 2.55228475,2 3,2 L8,2 C8.44771525,2 9,2.55228475 9,3 L9,6 L23,6 C23.578311,6 23.9502135,6.33865729 24.0025413,7.07124705 L24,8 L25.1483402,8 L26,8.28125 L26,7 C25.8696736,5.13976194 24.6180241,4 23,4 L11,4 L11,3 C11,1.44771525 9.55228475,-1.77635684e-14 8,-1.77635684e-14 L3,-1.77635684e-14 C1.44771525,-1.77635684e-14 0,1.44771525 0,3 L0,21 C0,22.5522847 1.44771525,24 3,24 L25,24 C26.5522847,24 28,22.5522847 28,21 L28,11 C28,9.51351904 26.5943604,8.28125 25.1483405,8.01106365 C25.1483405,8.01106365 33.9786096,8.00550424 24.0357177,8.00001966 C14.0002782,7.99450906 5,8 5,8 L5,21 C5,21.4987317 4.48384843,22 4,22 L7,22 C7,22 7,22.671875 7,21 Z"/>');
}

@mixin glyph-search-icon($color) {
  @include glyph(32, 32, $color, '<polygon id="Fill-1" points="22.0708276 23.4850411 17 18.4142136 18.4142136 17 23.4850411 22.0708276"></polygon><path d="M1.98355483,9.5 C1.98355483,13.6447115 5.35530038,17.0164571 9.49958721,17.0164571 C13.6442987,17.0164571 17.0160443,13.6447115 17.0160443,9.5 C17.0160443,5.35528847 13.6442987,1.98354292 9.49958721,1.98354292 C5.35530038,1.98354292 1.98355483,5.35528847 1.98355483,9.5 L1.98355483,9.5 Z M0,9.5 C0,4.26173095 4.26173095,0 9.49959912,0 C14.7378682,0 18.9995991,4.26173095 18.9995991,9.5 C18.9995991,14.7386699 14.7378682,19 9.49959912,19 C4.26173095,19 0,14.7386699 0,9.5 L0,9.5 Z" id="Fill-2"></path>');
}

@mixin glyph-cross($color) {
  @include glyph(16, 16, $color, '<polygon id="Page-1" points="7.414 0.00012 4.414 3.00012 1.414 0.00012 0 1.41412 2.999 4.41412 0 7.41412 1.414 8.82812 4.414 5.82812 7.414 8.82812 8.828 7.41412 5.828 4.41412 8.828 1.41412"></polygon>');
}

// To ensure proper crispiness we need all a mixin for each arrow size and
// direction. Cause here at LFUI, we value crispiness

@mixin btn-arrow-standard-right($color) {
  @include glyph(28, 16, $color, '<g id="Group-6" transform="translate(0.000000, 1.000000)" fill-rule="nonzero"><polygon id="Line-Copy" points="0 8 25 8 25 6 0 6"></polygon><polygon id="Line" points="18.9890629 12.3066139 20.4032764 13.7208275 27.1207909 7.00331307 20.4032764 0.285798645 18.9890629 1.70001221 24.2923637 7.00331307"></polygon></g>');
}

@mixin btn-arrow-standard-left($color) {
  @include glyph(28, 16, $color, '<g id="Group-7" transform="translate(0.000000, 1.000000)" fill-rule="nonzero"><polygon id="Line-Copy" transform="translate(15.500000, 7.000000) rotate(-180.000000) translate(-15.500000, -7.000000) " points="3 8 28 8 28 6 3 6"></polygon><polygon id="Line" points="9.02817459 1.70001221 7.61396103 0.285798645 0.896446609 7.00331307 7.61396103 13.7208275 9.02817459 12.3066139 3.72487373 7.00331307"></polygon></g>');
}

@mixin btn-arrow-small-right($color) {
  @include glyph(21, 12, $color, '<g id="Group-5" fill-rule="nonzero"><polygon id="Line" points="0 7 18 7 18 5 0 5"></polygon><polygon id="Line" points="13.7284515 10.2452911 15.1426651 11.6595047 20.7995194 6.00265045 15.1426651 0.345796203 13.7284515 1.76000977 17.9710922 6.00265045"></polygon></g>');
}

@mixin btn-arrow-small-left($color) {
  @include glyph(21, 12, $color, '<g id="Group-4" fill-rule="nonzero"><polygon id="Line" transform="translate(12.000000, 6.000000) rotate(-180.000000) translate(-12.000000, -6.000000) " points="3 7 21 7 21 5 3 5"></polygon><polygon id="Line" points="7.27882645 1.76000977 5.86461289 0.345796203 0.207758639 6.00265045 5.86461289 11.6595047 7.27882645 10.2452911 3.03618576 6.00265045"></polygon></g>');
}

// These two are actually duplicates of the standard.
@mixin btn-arrow-large-right($color) {
  @include glyph(28, 16, $color, '<g id="Group-6" transform="translate(0.000000, 1.000000)" fill-rule="nonzero"><polygon id="Line-Copy" points="0 8 25 8 25 6 0 6"></polygon><polygon id="Line" points="18.9890629 12.3066139 20.4032764 13.7208275 27.1207909 7.00331307 20.4032764 0.285798645 18.9890629 1.70001221 24.2923637 7.00331307"></polygon></g>');
}

@mixin btn-arrow-large-left($color) {
  @include glyph(28, 16, $color, '<g id="Group-7" transform="translate(0.000000, 1.000000)" fill-rule="nonzero"><polygon id="Line-Copy" transform="translate(15.500000, 7.000000) rotate(-180.000000) translate(-15.500000, -7.000000) " points="3 8 28 8 28 6 3 6"></polygon><polygon id="Line" points="9.02817459 1.70001221 7.61396103 0.285798645 0.896446609 7.00331307 7.61396103 13.7208275 9.02817459 12.3066139 3.72487373 7.00331307"></polygon></g>');
}

/**
 * Link related
 */

@mixin link-still() {
  padding: 0;
  color: $link-color;
  text-decoration: none;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0%) 50%, currentColor 50%) repeat-x 0 100%;
  background-size: 2px 2px;
  border: 0;
}

@mixin link-hover-focus() {
  color: $link-color;
  text-decoration: none;
  outline: 0;
}

@mixin link-hover() {
  color: $link-hover-color;
  text-decoration: none;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0%) 50%, currentColor 50%);
}

@mixin link-active() {
  color: #02234a;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0%) 50%, currentColor 50%);
}

@mixin link() {
  @include link-still();

  &:hover,
  &:focus { @include link-hover-focus(); }
  &:hover { @include link-hover(); }
  &:active { @include link-active(); }
}

/**
 * Reset related
 */

@mixin reset-list() {
  padding-left: 0;
  list-style-type: none;
  list-style-image: none;
}

@mixin reset-button() {
  padding: 0;
  background: transparent;
  border: 0;
  outline: 0;
  -webkit-appearence: none;
}

@mixin reset-link() {
  color: inherit;
  text-decoration: inherit;
  background-image: none;
  outline: 0;

  &:hover,
  &:focus {
    color: inherit;
    text-decoration: inherit;
    background-image: none;
  }

  &:active {
    opacity: 1;
  }
}

/**
 * General header
 */

@mixin header-block-border($color) {
  box-shadow: inset 0 (-$border-width) 0 $color;
}

@mixin header-block($interactive: false) {
  $color: $black;

  @if ($interactive) {
    @include reset-link();
    @include reset-button();
    $color: $link-color;
  }
  position: relative;
  display: block;
  width: 100%;
  padding: 1.1rem 1.25rem 1.125rem;
  overflow: hidden;

  font-family: $font-family-sans-serif;
  font-size: $font-size-xl;
  font-weight: 700;
  line-height: 1.25;

  color: $color;
  text-align: left;
  text-decoration: none;
  background: $white;

  border: 0;

  @include font-smoothing();

  @include header-block-border($navy);

  @if ($interactive) {
    @include header-block-border(rgba(0, 0, 0, .1));
    color: $link-color;
    user-select: none;
    transition: 100ms 40ms linear;
    transition-property: box-shadow;

    @include hover () {
      color: $link-color;

      @include header-block-border($link-color);

      text-decoration: none;
    }

    &:focus {
      color: $link-color;
    }
  }
}

/**
 * Patterns
 */

@mixin pattern-diagonal-stripes($color) {
  background: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600"%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:transparent%7D.cls-2%7Bfill:%23%7B$color%7D%7D%3C/style%3E%3C/defs%3E%3Cpath class="cls-1" d="M0 385.9 214.1 600h71.8L0 314.1v71.8zM0 485.9 114.1 600h71.8L0 414.1v71.8zM0 285.9 314.1 600h71.8L0 214.1v71.8zM600 14.1 585.9 0h-71.8L600 85.9V14.1zM600 414.1 185.9 0h-71.8L600 485.9v-71.8zM85.9 0H14.1L600 585.9v-71.8L85.9 0zM600 314.1 285.9 0h-71.8L600 385.9v-71.8zM600 114.1 485.9 0h-71.8L600 185.9v-71.8zM0 85.9 514.1 600h71.8L0 14.1v71.8zM600 214.1 385.9 0h-71.8L600 285.9v-71.8zM0 185.9 414.1 600h71.8L0 114.1v71.8zM0 585.9 14.1 600h71.8L0 514.1v71.8z"/%3E%3Cpath class="cls-2" d="M0 600h14.1L0 585.9V600zM0 514.1 85.9 600h28.2L0 485.9v28.2zM0 414.1 185.9 600h28.2L0 385.9v28.2zM0 314.1 285.9 600h28.2L0 285.9v28.2zM0 214.1 385.9 600h28.2L0 185.9v28.2zM0 114.1 485.9 600h28.2L0 85.9v28.2zM0 0v14.1L585.9 600H600v-14.1L14.1 0H0zM600 485.9 114.1 0H85.9L600 514.1v-28.2zM600 385.9 214.1 0h-28.2L600 414.1v-28.2zM600 285.9 314.1 0h-28.2L600 314.1v-28.2zM600 185.9 414.1 0h-28.2L600 214.1v-28.2zM600 85.9 514.1 0h-28.2L600 114.1V85.9zM600 0h-14.1L600 14.1V0z"/%3E%3C/svg%3E');
  background-repeat: repeat;
  background-size: 50px 50px;
}

@mixin pattern-wave-horizontal($color: $smoke) {
  width: 100%;
  height: 10px;
  background: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="#{encodeHEX($color)}" viewBox="0 0 137 6.6"%3E%3Cpath d="M125.8 6.6a10.8 10.8 0 0 1-6.6-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.6 2 10.8 10.8 0 0 1-6.5-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.6-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2 8 8 0 0 0-5-1.6A8 8 0 0 0 18 4.6a10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2A8 8 0 0 0 0 3V0a10.8 10.8 0 0 1 6.5 2 8 8 0 0 0 5 1.6A8 8 0 0 0 16.3 2a10.8 10.8 0 0 1 6.5-2 10.8 10.8 0 0 1 6.5 2 8 8 0 0 0 4.9 1.6 8 8 0 0 0 5-1.6 11.4 11.4 0 0 1 13 0A8 8 0 0 0 57 3.6a8 8 0 0 0 5-1.6 11.4 11.4 0 0 1 13 0A8 8 0 0 0 80 3.6 8 8 0 0 0 85 2a11.4 11.4 0 0 1 13 0 8 8 0 0 0 5 1.6 8 8 0 0 0 4.8-1.6 11.4 11.4 0 0 1 13 0 8 8 0 0 0 5 1.6 8 8 0 0 0 4.9-1.6 10.8 10.8 0 0 1 6.5-2v3a8 8 0 0 0-5 1.6 10.8 10.8 0 0 1-6.4 2Z"/%3E%3C/svg%3E');
  background-repeat: repeat-x;
  background-size: 200px 10px;
}

/**
 * Distribution bar values
 */

@mixin distribution-color-value($background-color, $color) {
  color: $color;
  background: none;
  background-color: $background-color;
  border: 0;

  &.distribution-value-with-pointer::after {
    border-left-color: $background-color;
  }
}

@mixin distribution-color-value-bordered($background-color, $border-color, $color) {
  color: $color;
  background-color: $background-color;
  border: 2px solid $border-color;

  &.distribution-value-with-pointer::after {
    border-left-color: $background-color;
  }
}

/**
 * Font smoothing
 */

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: $value;
    -moz-osx-font-smoothing: $value;
  }
}

/**
 * Dropdown/Dropup arrow
 */

@mixin drop-arrow($direction, $arrow-position, $dropdown-menu-position, $arrow-color, $border-color) {
  // See dropdown/readme.md for description of this mixin

  @if $arrow-position == right or $arrow-position == bottom {
    $arrow-position: 25%;
  } @else if $arrow-position == left or $arrow-position == top {
    $arrow-position: 75%;
  } @else {
    $arrow-position: 50%;
  }

  @if $dropdown-menu-position == right or $dropdown-menu-position == bottom {
    $dropdown-menu-position: 50%;
  } @else if $dropdown-menu-position == left or $dropdown-menu-position == top {
    $dropdown-menu-position: 75%;
  } @else {
    $dropdown-menu-position: null;
  }

  &[x-placement="top-start"] {
    right: $dropdown-menu-position;
    left: auto;
    box-sizing: border-box;

    &::after,
    &::before {
      position: absolute;
      top: 100%;
      right: $arrow-position;
      width: 0;
      height: 0;
      pointer-events: none;
      content: " ";
      border: solid transparent;
    }

    &::after {
      margin-left: -7px;
      border-width: 7px;
      border-top-color: $arrow-color;
      border-top-width: 12px;
    }

    &::before {
      margin-left: -8px;
      border-color: rgba(238, 0, 0, 0%);
      border-width: 8px;
      border-top-color: $border-color;
      border-top-width: 13px;
    }
  }

  &[x-placement="bottom-start"] {
    right: $dropdown-menu-position;
    left: auto;
    box-sizing: border-box;

    &::after,
    &::before {
      position: absolute;
      bottom: 100%;
      left: $arrow-position;
      width: 0;
      height: 0;
      pointer-events: none;
      content: " ";
      border: solid transparent;
    }

    &::after {
      margin-left: -7px;
      border-color: rgba(251, 251, 251, 0%);
      border-width: 7px;
      border-bottom-color: $arrow-color;
      border-bottom-width: 12px;
    }

    &::before {
      margin-left: -8px;
      border-color: rgba(238, 238, 238, 0%);
      border-width: 8px;
      border-bottom-color: $border-color;
      border-bottom-width: 13px;
    }
  }
}

/**
 * Developer warning
 */

@mixin warning($str: "Feature not implemented") {
  position: relative !important;
  outline: $red $border-width solid !important;

  &::after {
    position: absolute !important;
    right: 0 !important;
    bottom: 0 !important;
    width: auto !important;
    height: auto !important;
    padding: $border-width 0 $border-width !important;
    font-family: sans-serif !important;
    font-size: 1rem !important;
    color: $white !important;
    content: $str !important;
    background: $red !important;
  }
}

/**
 Uhhh Boostrap removed this one ;_;
 */

@mixin form-control-validation($color) {
  // Color the label and help text
  .form-control-feedback,
  .form-control-label,
  .col-form-label,
  .form-check-label,
  .custom-control {
    color: $color;
  }

  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: $color;

    &:focus {
      @include box-shadow($input-box-shadow, 0 0 6px lighten($color, 20%));
    }
  }

  // Set validation states also for addons
  .input-group-append,
  .input-group-prepend {
    color: $color;
    background-color: lighten($color, 40%);
    border-color: $color;
  }
}
